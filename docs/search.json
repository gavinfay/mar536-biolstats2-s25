[
  {
    "objectID": "lectures/lec-03.html#data-exploration-checking",
    "href": "lectures/lec-03.html#data-exploration-checking",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Data exploration, checking",
    "text": "Data exploration, checking\nAcknowledgements: Mine Çetinkaya-Rundel, Amanda Hart, Sara Stoudt"
  },
  {
    "objectID": "lectures/lec-03.html#chapter-4.-data-exploration",
    "href": "lectures/lec-03.html#chapter-4.-data-exploration",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Chapter 4. Data Exploration",
    "text": "Chapter 4. Data Exploration\n\nWhat’s in a data set?\nSummarizing & visualizing data\nOutliers, transformations, standardizations\nFinal thoughts"
  },
  {
    "objectID": "lectures/lec-03.html#dataset-terminology",
    "href": "lectures/lec-03.html#dataset-terminology",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Dataset terminology",
    "text": "Dataset terminology\n\nEach row is an observation\nEach column is a variable\n\n\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "lectures/lec-03.html#luke-skywalker",
    "href": "lectures/lec-03.html#luke-skywalker",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Luke Skywalker",
    "text": "Luke Skywalker"
  },
  {
    "objectID": "lectures/lec-03.html#whats-in-the-star-wars-data",
    "href": "lectures/lec-03.html#whats-in-the-star-wars-data",
    "title": "Biological Stats 2: Lecture 3",
    "section": "What’s in the Star Wars data?",
    "text": "What’s in the Star Wars data?\nTake a glimpse at the data:\n\nglimpse(starwars)\n\nRows: 87\nColumns: 14\n$ name       &lt;chr&gt; \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Or…\n$ height     &lt;int&gt; 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 2…\n$ mass       &lt;dbl&gt; 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.…\n$ hair_color &lt;chr&gt; \"blond\", NA, NA, \"none\", \"brown\", \"brown, grey\", \"brown\", N…\n$ skin_color &lt;chr&gt; \"fair\", \"gold\", \"white, blue\", \"white\", \"light\", \"light\", \"…\n$ eye_color  &lt;chr&gt; \"blue\", \"yellow\", \"red\", \"yellow\", \"brown\", \"blue\", \"blue\",…\n$ birth_year &lt;dbl&gt; 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47.0, NA, 24.0, 57.0, …\n$ sex        &lt;chr&gt; \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\",…\n$ gender     &lt;chr&gt; \"masculine\", \"masculine\", \"masculine\", \"masculine\", \"femini…\n$ homeworld  &lt;chr&gt; \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatooine\", \"Alderaan\", \"T…\n$ species    &lt;chr&gt; \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Huma…\n$ films      &lt;list&gt; &lt;\"A New Hope\", \"The Empire Strikes Back\", \"Return of the J…\n$ vehicles   &lt;list&gt; &lt;\"Snowspeeder\", \"Imperial Speeder Bike\"&gt;, &lt;&gt;, &lt;&gt;, &lt;&gt;, \"Imp…\n$ starships  &lt;list&gt; &lt;\"X-wing\", \"Imperial shuttle\"&gt;, &lt;&gt;, &lt;&gt;, \"TIE Advanced x1\",…"
  },
  {
    "objectID": "lectures/lec-03.html#what-is-eda",
    "href": "lectures/lec-03.html#what-is-eda",
    "title": "Biological Stats 2: Lecture 3",
    "section": "What is EDA?",
    "text": "What is EDA?\n\nExploratory data analysis (EDA) is an approach to analysing data sets to summarize its main characteristics\nOften, this is visual – this is what we’ll focus on first\nBut we might also calculate summary statistics and perform data wrangling/manipulation/transformation at (or before) this stage of the analysis"
  },
  {
    "objectID": "lectures/lec-03.html#mass-vs.-height",
    "href": "lectures/lec-03.html#mass-vs.-height",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Mass vs. height",
    "text": "Mass vs. height\nHow would you describe the relationship between mass and height of Starwars characters? What other variables would help us understand data points that don’t follow the overall trend? Who is the not so tall but chonky character?"
  },
  {
    "objectID": "lectures/lec-03.html#jabba",
    "href": "lectures/lec-03.html#jabba",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Jabba!",
    "text": "Jabba!\n\n\nquartz_off_screen \n                2"
  },
  {
    "objectID": "lectures/lec-03.html#basic-questions",
    "href": "lectures/lec-03.html#basic-questions",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Basic questions",
    "text": "Basic questions\n\nWhere are the data centered?\nHow are they spread? Are they symmetric, skewed, multimodal?\nAre there outliers?\nHow are the data distributed?\nAre there relationships among variables? Are relationships linear? Which analyses should be applied?\nAre transformations needed?\nWas the sampling effort approximately the same for each observation or variable?\n\nExpecting &gt;20% of your research time (often more) exploring your data makes analysis easier and more efficient."
  },
  {
    "objectID": "lectures/lec-03.html#always-plot-your-data",
    "href": "lectures/lec-03.html#always-plot-your-data",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Always plot your data!",
    "text": "Always plot your data!\n\nVisualizing your data is key to performing statistical analyses.\n‘Standard’ summaries of data may not reveal patterns.\nYou will often create two types of figures:\n\nThose that help you\nThose that help your audience.\n\n\nExtra Credit:\nThe ‘datasaurus’ is lurking somewhere in this course. Find it and email Gavin with its location and identifying analysis."
  },
  {
    "objectID": "lectures/lec-03.html#data-visualization",
    "href": "lectures/lec-03.html#data-visualization",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Data visualization",
    "text": "Data visualization\n\n“The simple graph has brought more information to the data analyst’s mind than any other device.” — John Tukey\n\n\nData visualization is the creation and study of the visual representation of data\nMany tools for visualizing data – R is one of them\nMany approaches/systems within R for making data visualizations – ggplot2 is one of them, and that’s what we’re going to use."
  },
  {
    "objectID": "lectures/lec-03.html#anscombes-quartet",
    "href": "lectures/lec-03.html#anscombes-quartet",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Anscombe’s quartet",
    "text": "Anscombe’s quartet\n\n\n\n\n   set  x     y\n1    I 10  8.04\n2    I  8  6.95\n3    I 13  7.58\n4    I  9  8.81\n5    I 11  8.33\n6    I 14  9.96\n7    I  6  7.24\n8    I  4  4.26\n9    I 12 10.84\n10   I  7  4.82\n11   I  5  5.68\n12  II 10  9.14\n13  II  8  8.14\n14  II 13  8.74\n15  II  9  8.77\n16  II 11  9.26\n17  II 14  8.10\n18  II  6  6.13\n19  II  4  3.10\n20  II 12  9.13\n21  II  7  7.26\n22  II  5  4.74\n\n\n\n\n\n   set  x     y\n23 III 10  7.46\n24 III  8  6.77\n25 III 13 12.74\n26 III  9  7.11\n27 III 11  7.81\n28 III 14  8.84\n29 III  6  6.08\n30 III  4  5.39\n31 III 12  8.15\n32 III  7  6.42\n33 III  5  5.73\n34  IV  8  6.58\n35  IV  8  5.76\n36  IV  8  7.71\n37  IV  8  8.84\n38  IV  8  8.47\n39  IV  8  7.04\n40  IV  8  5.25\n41  IV 19 12.50\n42  IV  8  5.56\n43  IV  8  7.91\n44  IV  8  6.89"
  },
  {
    "objectID": "lectures/lec-03.html#summarising-anscombes-quartet",
    "href": "lectures/lec-03.html#summarising-anscombes-quartet",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Summarising Anscombe’s quartet",
    "text": "Summarising Anscombe’s quartet\n\nquartet %&gt;%\n  group_by(set) %&gt;%\n  summarise(\n    mean_x = mean(x),\n    mean_y = mean(y),\n    sd_x = sd(x),\n    sd_y = sd(y),\n    r = cor(x, y)\n  )\n\n# A tibble: 4 × 6\n  set   mean_x mean_y  sd_x  sd_y     r\n  &lt;fct&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 I          9   7.50  3.32  2.03 0.816\n2 II         9   7.50  3.32  2.03 0.816\n3 III        9   7.5   3.32  2.03 0.816\n4 IV         9   7.50  3.32  2.03 0.817"
  },
  {
    "objectID": "lectures/lec-03.html#visualizing-anscombes-quartet",
    "href": "lectures/lec-03.html#visualizing-anscombes-quartet",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Visualizing Anscombe’s quartet",
    "text": "Visualizing Anscombe’s quartet"
  },
  {
    "objectID": "lectures/lec-03.html#data-palmer-penguins",
    "href": "lectures/lec-03.html#data-palmer-penguins",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Data: Palmer Penguins",
    "text": "Data: Palmer Penguins\nMeasurements for penguin species, on islands in Palmer Archipelago, size (flipper length, body mass, bill dimensions), and sex. Horst et al. 2022. R Journal\n\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(palmerpenguins)\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…"
  },
  {
    "objectID": "lectures/lec-03.html#palmer-penguins",
    "href": "lectures/lec-03.html#palmer-penguins",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Palmer Penguins",
    "text": "Palmer Penguins\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm, y = bill_length_mm,\n                     colour = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       colour = \"Species\") +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "lectures/lec-03.html#faceting-small-multiples",
    "href": "lectures/lec-03.html#faceting-small-multiples",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Faceting (small multiples)",
    "text": "Faceting (small multiples)\n\nSmaller plots that display different subsets of the data\nUseful for exploring conditional relationships and large data"
  },
  {
    "objectID": "lectures/lec-03.html#various-ways-to-facet",
    "href": "lectures/lec-03.html#various-ways-to-facet",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Various ways to facet",
    "text": "Various ways to facet\nHow you facet and organize plots can strengthen (& weaken) the storytelling.\nThink about the comparisons you are trying to make or message your plot is intending to convey and choose visualizations that help understanding.\nLikely you will want to try different views, particularly when exploring the data initially."
  },
  {
    "objectID": "lectures/lec-03.html#facet-and-color",
    "href": "lectures/lec-03.html#facet-and-color",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Facet and color",
    "text": "Facet and color\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(\n  penguins,\n  aes(x = bill_depth_mm,\n      y = bill_length_mm,\n      color = species)) + #&lt;&lt;\n  geom_point() +\n  facet_grid(island ~ year) +\n  scale_color_viridis_d() #&lt;&lt;"
  },
  {
    "objectID": "lectures/lec-03.html#number-of-variables-involved",
    "href": "lectures/lec-03.html#number-of-variables-involved",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Number of variables involved",
    "text": "Number of variables involved\n\nUnivariate data analysis - distribution of single variable\nBivariate data analysis - relationship between two variables\nMultivariate data analysis - relationship between many variables at once, often focusing on the relationship between two while conditioning for others"
  },
  {
    "objectID": "lectures/lec-03.html#types-of-variables",
    "href": "lectures/lec-03.html#types-of-variables",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Types of variables",
    "text": "Types of variables\n\nNumerical variables can be classified as continuous or discrete based on whether or not the variable can take on an infinite number of values or only non-negative whole numbers, respectively.\nIf the variable is categorical, we can determine if it is ordinal based on whether or not the levels have a natural ordering."
  },
  {
    "objectID": "lectures/lec-03.html#group-exercise",
    "href": "lectures/lec-03.html#group-exercise",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Group exercise",
    "text": "Group exercise\nPlot Description Practice\nWith your group’s plot, discuss and answer the following questions:\n\nWhat type of graph is it?\nWhat is being plotted?\nHow would you describe the distribution or trend of the data?\nWhat question is the plot trying to answer?\nDo you think the plot is successful in answering that question? Why or why not?"
  },
  {
    "objectID": "lectures/lec-03.html#data-lending-club",
    "href": "lectures/lec-03.html#data-lending-club",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Data: Lending Club",
    "text": "Data: Lending Club\n\n\n\nThousands of loans made through the Lending Club, which is a platform that allows individuals to lend to other individuals\nNot all loans are created equal – ease of getting a loan depends on (apparent) ability to pay back the loan\nData includes loans made, these are not loan applications"
  },
  {
    "objectID": "lectures/lec-03.html#take-a-peek-at-data",
    "href": "lectures/lec-03.html#take-a-peek-at-data",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Take a peek at data",
    "text": "Take a peek at data\n\nlibrary(openintro)\nglimpse(loans_full_schema)\n\nRows: 10,000\nColumns: 55\n$ emp_title                        &lt;chr&gt; \"global config engineer \", \"warehouse…\n$ emp_length                       &lt;dbl&gt; 3, 10, 3, 1, 10, NA, 10, 10, 10, 3, 1…\n$ state                            &lt;fct&gt; NJ, HI, WI, PA, CA, KY, MI, AZ, NV, I…\n$ homeownership                    &lt;fct&gt; MORTGAGE, RENT, RENT, RENT, RENT, OWN…\n$ annual_income                    &lt;dbl&gt; 90000, 40000, 40000, 30000, 35000, 34…\n$ verified_income                  &lt;fct&gt; Verified, Not Verified, Source Verifi…\n$ debt_to_income                   &lt;dbl&gt; 18.01, 5.04, 21.15, 10.16, 57.96, 6.4…\n$ annual_income_joint              &lt;dbl&gt; NA, NA, NA, NA, 57000, NA, 155000, NA…\n$ verification_income_joint        &lt;fct&gt; , , , , Verified, , Not Verified, , ,…\n$ debt_to_income_joint             &lt;dbl&gt; NA, NA, NA, NA, 37.66, NA, 13.12, NA,…\n$ delinq_2y                        &lt;int&gt; 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0…\n$ months_since_last_delinq         &lt;int&gt; 38, NA, 28, NA, NA, 3, NA, 19, 18, NA…\n$ earliest_credit_line             &lt;dbl&gt; 2001, 1996, 2006, 2007, 2008, 1990, 2…\n$ inquiries_last_12m               &lt;int&gt; 6, 1, 4, 0, 7, 6, 1, 1, 3, 0, 4, 4, 8…\n$ total_credit_lines               &lt;int&gt; 28, 30, 31, 4, 22, 32, 12, 30, 35, 9,…\n$ open_credit_lines                &lt;int&gt; 10, 14, 10, 4, 16, 12, 10, 15, 21, 6,…\n$ total_credit_limit               &lt;int&gt; 70795, 28800, 24193, 25400, 69839, 42…\n$ total_credit_utilized            &lt;int&gt; 38767, 4321, 16000, 4997, 52722, 3898…\n$ num_collections_last_12m         &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ num_historical_failed_to_pay     &lt;int&gt; 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0…\n$ months_since_90d_late            &lt;int&gt; 38, NA, 28, NA, NA, 60, NA, 71, 18, N…\n$ current_accounts_delinq          &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ total_collection_amount_ever     &lt;int&gt; 1250, 0, 432, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ current_installment_accounts     &lt;int&gt; 2, 0, 1, 1, 1, 0, 2, 2, 6, 1, 2, 1, 2…\n$ accounts_opened_24m              &lt;int&gt; 5, 11, 13, 1, 6, 2, 1, 4, 10, 5, 6, 7…\n$ months_since_last_credit_inquiry &lt;int&gt; 5, 8, 7, 15, 4, 5, 9, 7, 4, 17, 3, 4,…\n$ num_satisfactory_accounts        &lt;int&gt; 10, 14, 10, 4, 16, 12, 10, 15, 21, 6,…\n$ num_accounts_120d_past_due       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, NA, 0, 0, 0, 0, …\n$ num_accounts_30d_past_due        &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ num_active_debit_accounts        &lt;int&gt; 2, 3, 3, 2, 10, 1, 3, 5, 11, 3, 2, 2,…\n$ total_debit_limit                &lt;int&gt; 11100, 16500, 4300, 19400, 32700, 272…\n$ num_total_cc_accounts            &lt;int&gt; 14, 24, 14, 3, 20, 27, 8, 16, 19, 7, …\n$ num_open_cc_accounts             &lt;int&gt; 8, 14, 8, 3, 15, 12, 7, 12, 14, 5, 8,…\n$ num_cc_carrying_balance          &lt;int&gt; 6, 4, 6, 2, 13, 5, 6, 10, 14, 3, 5, 3…\n$ num_mort_accounts                &lt;int&gt; 1, 0, 0, 0, 0, 3, 2, 7, 2, 0, 2, 3, 3…\n$ account_never_delinq_percent     &lt;dbl&gt; 92.9, 100.0, 93.5, 100.0, 100.0, 78.1…\n$ tax_liens                        &lt;int&gt; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ public_record_bankrupt           &lt;int&gt; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0…\n$ loan_purpose                     &lt;fct&gt; moving, debt_consolidation, other, de…\n$ application_type                 &lt;fct&gt; individual, individual, individual, i…\n$ loan_amount                      &lt;int&gt; 28000, 5000, 2000, 21600, 23000, 5000…\n$ term                             &lt;dbl&gt; 60, 36, 36, 36, 36, 36, 60, 60, 36, 3…\n$ interest_rate                    &lt;dbl&gt; 14.07, 12.61, 17.09, 6.72, 14.07, 6.7…\n$ installment                      &lt;dbl&gt; 652.53, 167.54, 71.40, 664.19, 786.87…\n$ grade                            &lt;ord&gt; C, C, D, A, C, A, C, B, C, A, C, B, C…\n$ sub_grade                        &lt;fct&gt; C3, C1, D1, A3, C3, A3, C2, B5, C2, A…\n$ issue_month                      &lt;fct&gt; Mar-2018, Feb-2018, Feb-2018, Jan-201…\n$ loan_status                      &lt;fct&gt; Current, Current, Current, Current, C…\n$ initial_listing_status           &lt;fct&gt; whole, whole, fractional, whole, whol…\n$ disbursement_method              &lt;fct&gt; Cash, Cash, Cash, Cash, Cash, Cash, C…\n$ balance                          &lt;dbl&gt; 27015.86, 4651.37, 1824.63, 18853.26,…\n$ paid_total                       &lt;dbl&gt; 1999.330, 499.120, 281.800, 3312.890,…\n$ paid_principal                   &lt;dbl&gt; 984.14, 348.63, 175.37, 2746.74, 1569…\n$ paid_interest                    &lt;dbl&gt; 1015.19, 150.49, 106.43, 566.15, 754.…\n$ paid_late_fees                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…"
  },
  {
    "objectID": "lectures/lec-03.html#variable-types",
    "href": "lectures/lec-03.html#variable-types",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Variable types",
    "text": "Variable types\n\n\n\nvariable\ntype\n\n\n\n\nloan_amount\nnumerical, continuous\n\n\ninterest_rate\nnumerical, continuous\n\n\nterm\nnumerical, discrete\n\n\ngrade\ncategorical, ordinal\n\n\nstate\ncategorical, not ordinal\n\n\nannual_income\nnumerical, continuous\n\n\nhomeownership\ncategorical, not ordinal\n\n\ndebt_to_income\nnumerical, continuous"
  },
  {
    "objectID": "lectures/lec-03.html#describing-shapes-of-numerical-distributions",
    "href": "lectures/lec-03.html#describing-shapes-of-numerical-distributions",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Describing shapes of numerical distributions",
    "text": "Describing shapes of numerical distributions\n\nshape:\n\nskewness: right-skewed, left-skewed, symmetric (skew is to the side of the longer tail)\nmodality: unimodal, bimodal, multimodal, uniform\n\ncenter: mean (mean), median (median), mode (not always useful)\nspread: range (range), standard deviation (sd), inter-quartile range (IQR)\nunusual observations"
  },
  {
    "objectID": "lectures/lec-03.html#histogram",
    "href": "lectures/lec-03.html#histogram",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Histogram",
    "text": "Histogram\n\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "lectures/lec-03.html#histograms-and-binwidth",
    "href": "lectures/lec-03.html#histograms-and-binwidth",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Histograms and binwidth",
    "text": "Histograms and binwidth\nbinwidth = 1000\n\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram(binwidth = 1000)"
  },
  {
    "objectID": "lectures/lec-03.html#histograms-and-binwidth-1",
    "href": "lectures/lec-03.html#histograms-and-binwidth-1",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Histograms and binwidth",
    "text": "Histograms and binwidth\nbinwidth = 5000\n\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram(binwidth = 5000)"
  },
  {
    "objectID": "lectures/lec-03.html#histograms-and-binwidth-2",
    "href": "lectures/lec-03.html#histograms-and-binwidth-2",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Histograms and binwidth",
    "text": "Histograms and binwidth\nbinwidth = 20000\n\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram(binwidth = 20000)"
  },
  {
    "objectID": "lectures/lec-03.html#customizing-histograms",
    "href": "lectures/lec-03.html#customizing-histograms",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Customizing histograms",
    "text": "Customizing histograms\nFill with a categorical variable\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(loans, aes(x = loan_amount,\n                  fill = homeownership)) +\n  geom_histogram(binwidth = 5000,\n                 alpha = 0.5) +\n  labs(\n    x = \"Loan amount ($)\",\n    y = \"Frequency\",\n    title = \"Amounts of Lending Club loans\"\n  )"
  },
  {
    "objectID": "lectures/lec-03.html#facet-with-a-categorical-variable",
    "href": "lectures/lec-03.html#facet-with-a-categorical-variable",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Facet with a categorical variable",
    "text": "Facet with a categorical variable\n\nPlotCode"
  },
  {
    "objectID": "lectures/lec-03.html#box-plot",
    "href": "lectures/lec-03.html#box-plot",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Box plot",
    "text": "Box plot\n\nggplot(loans, aes(x = interest_rate)) +\n  geom_boxplot()"
  },
  {
    "objectID": "lectures/lec-03.html#box-plot-and-outliers",
    "href": "lectures/lec-03.html#box-plot-and-outliers",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Box plot and outliers",
    "text": "Box plot and outliers\n\nggplot(loans, aes(x = annual_income)) +\n  geom_boxplot()"
  },
  {
    "objectID": "lectures/lec-03.html#adding-a-categorical-variable",
    "href": "lectures/lec-03.html#adding-a-categorical-variable",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Adding a categorical variable",
    "text": "Adding a categorical variable\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(loans, aes(x = interest_rate,\n                  y = grade)) + #&lt;&lt;\n  geom_boxplot() +\n  labs(\n    x = \"Interest rate (%)\",\n    y = \"Grade\",\n    title = \"Interest rates of Lending Club loans\",\n    subtitle = \"by grade of loan\" #&lt;&lt;\n  )"
  },
  {
    "objectID": "lectures/lec-03.html#scatterplot",
    "href": "lectures/lec-03.html#scatterplot",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Scatterplot",
    "text": "Scatterplot\n\nggplot(loans, aes(x = debt_to_income, y = interest_rate)) +\n  geom_point()"
  },
  {
    "objectID": "lectures/lec-03.html#hex-plot",
    "href": "lectures/lec-03.html#hex-plot",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Hex plot",
    "text": "Hex plot\n\nggplot(loans %&gt;% filter(debt_to_income &lt; 100),\n       aes(x = debt_to_income, y = interest_rate)) +\n  geom_hex()"
  },
  {
    "objectID": "lectures/lec-03.html#contour-plot",
    "href": "lectures/lec-03.html#contour-plot",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Contour plot",
    "text": "Contour plot\n\nv &lt;- ggplot(faithfuld, aes(waiting, eruptions, z = density))\nv + geom_contour()"
  },
  {
    "objectID": "lectures/lec-03.html#bar-plot",
    "href": "lectures/lec-03.html#bar-plot",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Bar plot",
    "text": "Bar plot\n\nggplot(loans, aes(x = homeownership)) +\n  geom_bar()"
  },
  {
    "objectID": "lectures/lec-03.html#segmented-bar-plot",
    "href": "lectures/lec-03.html#segmented-bar-plot",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Segmented bar plot",
    "text": "Segmented bar plot\n\nggplot(loans, aes(x = homeownership,\n                  fill = grade)) + #&lt;&lt;\n  geom_bar()"
  },
  {
    "objectID": "lectures/lec-03.html#segmented-bar-plot-1",
    "href": "lectures/lec-03.html#segmented-bar-plot-1",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Segmented bar plot",
    "text": "Segmented bar plot\n\nggplot(loans, aes(x = homeownership, fill = grade)) +\n  geom_bar(position = \"fill\") #&lt;&lt;"
  },
  {
    "objectID": "lectures/lec-03.html#customizing-bar-plots",
    "href": "lectures/lec-03.html#customizing-bar-plots",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Customizing bar plots",
    "text": "Customizing bar plots"
  },
  {
    "objectID": "lectures/lec-03.html#customizing-bar-plots-1",
    "href": "lectures/lec-03.html#customizing-bar-plots-1",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Customizing bar plots",
    "text": "Customizing bar plots"
  },
  {
    "objectID": "lectures/lec-03.html#customizing-bar-plots-2",
    "href": "lectures/lec-03.html#customizing-bar-plots-2",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Customizing bar plots",
    "text": "Customizing bar plots"
  },
  {
    "objectID": "lectures/lec-03.html#relationships-between-numerical-and-categorical-variables",
    "href": "lectures/lec-03.html#relationships-between-numerical-and-categorical-variables",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Relationships between numerical and categorical variables",
    "text": "Relationships between numerical and categorical variables\nAlready talked about…\n\nColouring and faceting histograms and density plots\nSide-by-side box plots"
  },
  {
    "objectID": "lectures/lec-03.html#violin-plots",
    "href": "lectures/lec-03.html#violin-plots",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Violin plots",
    "text": "Violin plots\n\nggplot(loans, aes(x = homeownership, y = loan_amount)) +\n  geom_violin()"
  },
  {
    "objectID": "lectures/lec-03.html#ridge-plots",
    "href": "lectures/lec-03.html#ridge-plots",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Ridge plots",
    "text": "Ridge plots\n\nlibrary(ggridges)\nggplot(loans, aes(x = loan_amount, y = grade, fill = grade, color = grade)) +\n  geom_density_ridges(alpha = 0.5)"
  },
  {
    "objectID": "lectures/lec-03.html#raincloud-plots",
    "href": "lectures/lec-03.html#raincloud-plots",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Raincloud plots",
    "text": "Raincloud plots\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(ggdist)\nlibrary(gghalves)\nggplot(penguins, aes(species, bill_length_mm)) +\n  ggdist::stat_halfeye(adjust = .5, width = .3, .width = 0, justification = -.3, point_colour = NA) +\n  geom_boxplot(width = .1, outlier.shape = NA) +\n  gghalves::geom_half_point(side = \"l\", range_scale = .4, alpha = .5) +\n  coord_flip()"
  },
  {
    "objectID": "lectures/lec-03.html#qq-plots",
    "href": "lectures/lec-03.html#qq-plots",
    "title": "Biological Stats 2: Lecture 3",
    "section": "QQ-plots",
    "text": "QQ-plots\nDetermines if data conform to a theoretical distribution."
  },
  {
    "objectID": "lectures/lec-03.html#pair-plots",
    "href": "lectures/lec-03.html#pair-plots",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Pair plots",
    "text": "Pair plots\n\nScatterplot for each pair of variables.\nMeasures of correlation\n\n\nlibrary(GGally)\nggpairs(penguins, columns=3:6)"
  },
  {
    "objectID": "lectures/lec-03.html#über-pair-plot",
    "href": "lectures/lec-03.html#über-pair-plot",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Über Pair plot",
    "text": "Über Pair plot"
  },
  {
    "objectID": "lectures/lec-03.html#visualizing-spatial-data",
    "href": "lectures/lec-03.html#visualizing-spatial-data",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Visualizing spatial data",
    "text": "Visualizing spatial data\nMaps are extremely useful (and intuitive) ways of exploring spatial relationships among variables in our data.\n\n\n\n\n (Eric Anderson)"
  },
  {
    "objectID": "lectures/lec-03.html#transformation",
    "href": "lectures/lec-03.html#transformation",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Transformation",
    "text": "Transformation\n\nOutliers, non-normality, heteroscedasticity and nonlinearity are the most common reasons for transformation.\nRemoving outliers is an option (with sensitivity analysis)\nAll response and explanatory variables can be transformed differently.\nChoice of transformation depends on analytical design:\n\nGLS, GLM, GAM Poisson can handle outliers\nGAM and iterative least squares can handle nonlinearity"
  },
  {
    "objectID": "lectures/lec-03.html#nonlinearity",
    "href": "lectures/lec-03.html#nonlinearity",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Nonlinearity",
    "text": "Nonlinearity\n\nIf scatterplot indicates nonlinear patterns, consider transforming one or both variables.\nMany possible transformations, with lots of guidance on how to proceed with these.\nGF advice: Consider the theoretical basis for transformations and think about appropriate methods before trying to ‘force’ linearity to apply cookbooks."
  },
  {
    "objectID": "lectures/lec-03.html#standardizations",
    "href": "lectures/lec-03.html#standardizations",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Standardizations",
    "text": "Standardizations\n\nIf variables for comparison are on different scales, conversion to a common scale may be an option.\nSome analyses (e.g., correlation, PCA) are self- standardized.\n\n\n\nCentering (standard ‘location’):\nScaling1 (standard ‘spread’):\n\n\nNB: sometimes called ‘normalizing’, but does not mean making your data normally distributed. GF prefers ‘standardizing’ or ‘scaling’ but you will see normalizing a lot."
  },
  {
    "objectID": "lectures/lec-03.html#standardizations-1",
    "href": "lectures/lec-03.html#standardizations-1",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Standardizations",
    "text": "Standardizations"
  },
  {
    "objectID": "lectures/lec-03.html#standardizations-2",
    "href": "lectures/lec-03.html#standardizations-2",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Standardizations",
    "text": "Standardizations"
  },
  {
    "objectID": "lectures/lec-03.html#standardizations-3",
    "href": "lectures/lec-03.html#standardizations-3",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Standardizations",
    "text": "Standardizations"
  },
  {
    "objectID": "lectures/lec-03.html#exploring-relationships",
    "href": "lectures/lec-03.html#exploring-relationships",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Exploring relationships",
    "text": "Exploring relationships\n‘Even if you don’t see it, it might still be there.’\nPlot your data as many ways as you can, particularly with respect to other variables in the dataset.\n\nThis may change your understanding of patterns in the data\nSimpson’s paradox"
  },
  {
    "objectID": "lectures/lec-03.html#simpsons-paradox",
    "href": "lectures/lec-03.html#simpsons-paradox",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Simpson’s paradox",
    "text": "Simpson’s paradox\n\nSimpson’s paradox illustrates the effect that omission of an explanatory variable can have on the measure of association between another explanatory variable and a response variable\nThe inclusion of a third variable in the analysis can change the apparent relationship between the other two variables"
  },
  {
    "objectID": "lectures/lec-03.html#simpsons-paradox-1",
    "href": "lectures/lec-03.html#simpsons-paradox-1",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Simpson’s paradox",
    "text": "Simpson’s paradox"
  },
  {
    "objectID": "lectures/lec-03.html#simpsons-paradox-2",
    "href": "lectures/lec-03.html#simpsons-paradox-2",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Simpson’s paradox",
    "text": "Simpson’s paradox"
  },
  {
    "objectID": "lectures/lec-03.html#simpsons-paradox-3",
    "href": "lectures/lec-03.html#simpsons-paradox-3",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Simpson’s paradox",
    "text": "Simpson’s paradox"
  },
  {
    "objectID": "lectures/lec-03.html#simpsons-paradox-4",
    "href": "lectures/lec-03.html#simpsons-paradox-4",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Simpson’s paradox",
    "text": "Simpson’s paradox"
  },
  {
    "objectID": "lectures/lec-03.html#summary",
    "href": "lectures/lec-03.html#summary",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Summary",
    "text": "Summary\nTake a peep at your data!\nPlot the data, then plot it a different way, and again…\n\nReasons for data transformation:\n\nReduce effect of outliers\nImprove linearity between variables\nMake error structure closer to normal\nStabilize relationship between mean and variance"
  },
  {
    "objectID": "lectures/lec-03.html#summary-1",
    "href": "lectures/lec-03.html#summary-1",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Summary",
    "text": "Summary\nGeneral approach:\n\nApply all explorations to raw data\nIf explanatory data have outliers, then transform\nApply analytical technique and explore residuals\nIf residuals have outliers, heterogeneity or patterns, then transform\nChoose the best transformation by trial & error, automatic selection or rules of thumb (e.g., sqrt for counts, arcsin for proportions, log for multiplicative relationships)"
  },
  {
    "objectID": "lectures/lec-03.html#supplemental-reading",
    "href": "lectures/lec-03.html#supplemental-reading",
    "title": "Biological Stats 2: Lecture 3",
    "section": "Supplemental Reading",
    "text": "Supplemental Reading\nIntroduction to Modern Statistics Chap 4-6\nR for Data Science, Chap 3\nCommunicating with Data, Chap 3-4\n\n\n\n\ngavinfay.github.io/mar536-biolstats2-s23"
  },
  {
    "objectID": "labs/lab-06.html#lab-schedule",
    "href": "labs/lab-06.html#lab-schedule",
    "title": "MAR 536 Lab 6",
    "section": "Lab schedule",
    "text": "Lab schedule\n1/18: Introduction to R and R Studio, working with data\n1/25: Intro to Visualization\n2/01: Probability, linear modeling\n2/08: Data wrangling, model summaries\n2/15: Simulation, Resampling\n2/22: Iteration\n3/01: Creating functions, debugging\n3/15: Flex: more modeling (brms, glmmTMB)\n3/29: Spatial data or tidymodeling"
  },
  {
    "objectID": "labs/lab-06.html#acknowledgements",
    "href": "labs/lab-06.html#acknowledgements",
    "title": "MAR 536 Lab 6",
    "section": "Acknowledgements",
    "text": "Acknowledgements\n\nDan Ovando\nMaia Kapur\nMine Çetinkaya-Rundel\n\nAlison Hill\nMegsie Siple\nSander Quyts"
  },
  {
    "objectID": "labs/lab-06.html#reducing-code-duplication",
    "href": "labs/lab-06.html#reducing-code-duplication",
    "title": "MAR 536 Lab 6",
    "section": "Reducing code duplication",
    "text": "Reducing code duplication\n\nEasier to see the intent of your code, eyes are drawn to what’s different, not what stays the same.\nEasier to respond to changes, only need to make changes in one place, rather than every place you copied-and-pasted.\nLikely to have fewer bugs because each line of code is used in more places.\n\nHow? Iteration (today) & Functions (next wk)"
  },
  {
    "objectID": "labs/lab-06.html#iteration",
    "href": "labs/lab-06.html#iteration",
    "title": "MAR 536 Lab 6",
    "section": "Iteration",
    "text": "Iteration\nWhen you need to do the same thing to multiple inputs: repeating the same operation on different columns, or on different datasets.\nTwo main paradigms:\n1. imperative programming\n2. functional programming"
  },
  {
    "objectID": "labs/lab-06.html#pivot-tables-loops",
    "href": "labs/lab-06.html#pivot-tables-loops",
    "title": "MAR 536 Lab 6",
    "section": "Pivot tables & loops",
    "text": "Pivot tables & loops\n\nlibrary(palmerpenguins)\nfor (species in unique(penguins$species)) {\n  mean_bodymass &lt;-\n      mean(penguins$body_mass_g[penguins$species == species],\n           na.rm = TRUE)\n  cat(i, mean_bodymass, \"\\n\")\n}\n\n\nwith(penguins,tapply(body_mass_g, species, mean, na.rm = TRUE))   \n\n\naggregate(penguins$body_mass_g, \n          by=list(penguins$species), \n          mean, na.rm = TRUE)\n\n\npenguins |&gt; \n  group_by(species) |&gt; \n  summarize(mean_bodymass = mean(body_mass_g, na.rm = TRUE))"
  },
  {
    "objectID": "labs/lab-06.html#looping",
    "href": "labs/lab-06.html#looping",
    "title": "MAR 536 Lab 6",
    "section": "Looping",
    "text": "Looping\nVector operations can do many things and are quick.\nBut sometimes we need to do more.\nLoops in R are of this form:\n\nfor (i in set) {\n  #do something\n}\n\nThis is a very flexible structure, try the following:\n\nfor (i in seq(from=1,to=5,by=1)) { print(i) }\nfor (i in 1:100) { print(i) }\nfor (i in c(\"1\",\"N\",\"L\")) { print(i) }"
  },
  {
    "objectID": "labs/lab-06.html#looping-through-species",
    "href": "labs/lab-06.html#looping-through-species",
    "title": "MAR 536 Lab 6",
    "section": "Looping through species",
    "text": "Looping through species\nImagine we need to calculate the mean flipper and bill lengths for every species in the palmerpenguins data set.\n\nfor (species in unique(penguins$species)) {\n  mean_flipper_length &lt;-\n      mean(penguins$flipper_length_mm[penguins$species == species])   \n  mean_bill_length &lt;-\n      mean(penguins$bill_length_mm[penguins$species == species])   \n  cat(species, mean_flipper_length, mean_bill_length, \"\\n\")\n}\n\nNB: We already know better ways to do this using summarize()."
  },
  {
    "objectID": "labs/lab-06.html#common-way-to-use-loops",
    "href": "labs/lab-06.html#common-way-to-use-loops",
    "title": "MAR 536 Lab 6",
    "section": "Common way to use loops",
    "text": "Common way to use loops\n\n#define the elements to loop over\nspecies &lt;- sort(unique(penguins$species))\n\n#define how many times to do the loop\nnspecies &lt;- length(species)\n\n#create a place to store results\nmean_mass &lt;- vector(length=nspecies)\n\n#get loopy\nfor (isp in 1:nspecies) {\n  species.data &lt;- penguins[penguins$species==species[isp], ]\n  mean_mass[isp] &lt;- mean(species.data$body_mass_g, na.rm = TRUE)\n  print(mean_mass[isp])\n  cat(\"Running species \", isp,\"\\n\")\n}\n\nA lot of this code is book-keeping rather than the thing we want to do."
  },
  {
    "objectID": "labs/lab-06.html#purrr",
    "href": "labs/lab-06.html#purrr",
    "title": "MAR 536 Lab 6",
    "section": "purrr",
    "text": "purrr\nfor loops are simple, but they require lots of code that is mostly book-keeping.\nAttention is then on this rather than the action the code is doing.\nFunctional programming abstracts the book-keeping of the loop to keep attention on the code that matters.\nSeries of apply functions in base R. (apply, tapply, sapply, lapply)\nThese all have slightly differences about how they are used.\npurrr package is the tidyverse solution to the apply functions."
  },
  {
    "objectID": "labs/lab-06.html#basics-of-purrr",
    "href": "labs/lab-06.html#basics-of-purrr",
    "title": "MAR 536 Lab 6",
    "section": "Basics of purrr",
    "text": "Basics of purrr\nThe map function is the workhorse of purrr.\ne.g. \n\nshades &lt;- colors()[1:5]\nfor (i in seq_along(shades)) { \n  print(shades[i])  \n}\n## [1] \"white\"\n## [1] \"aliceblue\"\n## [1] \"antiquewhite\"\n## [1] \"antiquewhite1\"\n## [1] \"antiquewhite2\"\n\n\na &lt;-  map(shades, print)\n## [1] \"white\"\n## [1] \"aliceblue\"\n## [1] \"antiquewhite\"\n## [1] \"antiquewhite1\"\n## [1] \"antiquewhite2\""
  },
  {
    "objectID": "labs/lab-06.html#map",
    "href": "labs/lab-06.html#map",
    "title": "MAR 536 Lab 6",
    "section": "map",
    "text": "map\nBasic syntax:\n\nmap(\"Lists to apply function to\",  \n    \"Function to apply across lists\",\n    \"Additional parameters\")\n\nmap by default returns a list. However we can specify the type of output:\nmap_dbl returns real numbers\nmap_lgl returns logicals\nmap_chr returns characters\nmap_int returns integers\nmap_df returns a dataframe\n\ncheatsheat: github.com/rstudio/cheatsheets/blob/master/purrr.pdf"
  },
  {
    "objectID": "labs/lab-06.html#shortcuts",
    "href": "labs/lab-06.html#shortcuts",
    "title": "MAR 536 Lab 6",
    "section": "Shortcuts",
    "text": "Shortcuts\n\nmodels &lt;- penguins %&gt;% \n  split(.$species) %&gt;% \n  map(function(df) lm(body_mass_g ~ flipper_length_mm, data = df))\n\nThe syntax for creating an anonymous function in R is quite verbose so purrr provides a convenient shortcut: a one-sided formula.\n\nmodels &lt;- penguins %&gt;%\n  split(.$species) %&gt;% \n  map(~lm(body_mass_g ~ flipper_length_mm, data = .))\n  #The 1st ~ is shorthand for a function\n  #The '.' shows where the stuff passed to map gets used."
  },
  {
    "objectID": "labs/lab-06.html#shortcuts-2",
    "href": "labs/lab-06.html#shortcuts-2",
    "title": "MAR 536 Lab 6",
    "section": "Shortcuts 2",
    "text": "Shortcuts 2\nExtracting summary statistics\n\nmodels |&gt;\n  map(summary) |&gt; \n  map_dbl(pluck, \"r.squared\")\n\n\nmodels |&gt;\n  map(summary) |&gt; #run 'summary() for each model\n  map_dbl(~.$r.squared) # find the R-squared\n\nExtracting named components is a common operation, so can use a string instead.\n\nmodels |&gt;\n  map(summary) |&gt; #run 'summary() for each model\n  map_dbl(\"r.squared\") #find the R-squared"
  },
  {
    "objectID": "labs/lab-06.html#exercise-1",
    "href": "labs/lab-06.html#exercise-1",
    "title": "MAR 536 Lab 6",
    "section": "Exercise 1",
    "text": "Exercise 1\nWrite code that uses one of the map functions to:\n\nCompute the mean of every numeric column in palmerpenguins::penguins.\n\n\n\n\n\nDetermine the type of each column in nycflights13::flights.\n\n\n\n\n\nCompute the number of unique values in each column of palmerpenguins::penguins.\n\n\n\n\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "labs/lab-06.html#extending-to-multiple-input-lists",
    "href": "labs/lab-06.html#extending-to-multiple-input-lists",
    "title": "MAR 536 Lab 6",
    "section": "Extending to multiple input lists",
    "text": "Extending to multiple input lists\nmap2 allows you to map over two sets of inputs.\n\nmap2(list1, list2, ~function(.x,.y), ...)\n\ne.g. generate 3 sets of 5 normal random variables, with the means & standard deviations different in each set.\n\nmu &lt;- list(5, 10, -3)\nsigma &lt;- list(1, 5, 10)\nmap2(mu, sigma, rnorm, n = 5) |&gt; str()\n## List of 3\n##  $ : num [1:5] 4.54 4.97 5.57 3.39 5\n##  $ : num [1:5] 11.28 9.39 4.62 13.42 3.85\n##  $ : num [1:5] -5.07 -5.9 -7.1 -21.36 -8.55"
  },
  {
    "objectID": "labs/lab-06.html#more-than-2-inputs-use-pmap",
    "href": "labs/lab-06.html#more-than-2-inputs-use-pmap",
    "title": "MAR 536 Lab 6",
    "section": "More than 2 inputs, use pmap",
    "text": "More than 2 inputs, use pmap\ne.g. same problem as previous, but now n varies in each set.\n\nn &lt;- list(1, 3, 5)\nmu &lt;- list(5, 10, -3)\nsigma &lt;- list(1, 5, 10)\n\nargs1 &lt;- list(mean = mu, sd = sigma, n = n)\nargs1 |&gt;\n  pmap(rnorm) |&gt;\n  str()\n## List of 3\n##  $ : num 4.91\n##  $ : num [1:3] 15.43 14.02 4.27\n##  $ : num [1:5] 4.542 -0.992 -9.346 2.794 -11.452\n\nSafest to use named arguments with pmap, as it will do positional matching if not."
  },
  {
    "objectID": "labs/lab-06.html#debugging-using-safely",
    "href": "labs/lab-06.html#debugging-using-safely",
    "title": "MAR 536 Lab 6",
    "section": "Debugging using safely",
    "text": "Debugging using safely\nHandling errors can be tricky to diagnose with map.\nIt’s not as obvious when/where things break.\nCan use safely(). e.g. \n\nsafe_log &lt;- safely(log, otherwise = NA_real_) \n#safe_log return a NA if log() returns error, plus error msg.  \nlist(\"a\", 10, 100) |&gt;\n  map(safe_log) |&gt;  #&lt;&lt;\n  transpose() |&gt;\n  simplify_all()\n## $result\n## [1]       NA 2.302585 4.605170\n## \n## $error\n## $error[[1]]\n## &lt;simpleError in .Primitive(\"log\")(x, base): non-numeric argument to mathematical function&gt;\n## \n## $error[[2]]\n## NULL\n## \n## $error[[3]]\n## NULL"
  },
  {
    "objectID": "labs/lab-06.html#exercise-2",
    "href": "labs/lab-06.html#exercise-2",
    "title": "MAR 536 Lab 6",
    "section": "Exercise 2",
    "text": "Exercise 2\n\nCreate a data frame of samples from the palmerpenguins::penguins dataset, that contains 3 Adelies, 6 Gentoos, and 4 Chinstraps.\n(your new data frame will have 13 rows, with 3, 6, and 4 of the three species) (hint: use a nested dataframe, map2(), and slice_sample())\nWe have data from several years of crab surveys. The data for each year is contained in separate “.csv” files.\n\nWe would like to read these data into R, and combine them into a single data frame so we can inspect and plot them.\n\nWrite code to read these data into R, and combine them into a single dataframe.\n\nb-d. Then produce 3 plots (of your choice) summarizing the full dataset. Include “b”, “c”, and “d” in the title of your plots.\nFor hints see next slide."
  },
  {
    "objectID": "labs/lab-06.html#steller-sea-lion-pups-revisited",
    "href": "labs/lab-06.html#steller-sea-lion-pups-revisited",
    "title": "MAR 536 Lab 6",
    "section": "Steller sea lion pups revisited",
    "text": "Steller sea lion pups revisited\nWe have data on Steller sea lion pup counts over time at a bunch of rookeries in Alaska.\n\nThe number of data points for each rookery is not the same.\nWe want to investigate the annual trend in counts for each rookery.\nWe want to plot the slopes of the regressions using a histogram.\nWe want to obtain confidence intervals of the slope estimates using bootstrapping."
  },
  {
    "objectID": "labs/lab-06.html#residual-bootstrapping",
    "href": "labs/lab-06.html#residual-bootstrapping",
    "title": "MAR 536 Lab 6",
    "section": "residual bootstrapping",
    "text": "residual bootstrapping\nresample residuals from the original models to obtain bootstrapped confidence intervals of the slopes.\n\nnboot &lt;- 100\n# first extract a table of fitted values and residuals using augment\nssl_boot &lt;- ssl_models |&gt;\n  mutate(tbl = map(model, augment)) |&gt; \n  select(sitename, tbl)\nssl_boot\n## # A tibble: 53 × 2\n## # Groups:   sitename [53]\n##    sitename             tbl              \n##    &lt;chr&gt;                &lt;list&gt;           \n##  1 ADAK/LAKE POINT      &lt;tibble [7 × 8]&gt; \n##  2 ADUGAK               &lt;tibble [8 × 8]&gt; \n##  3 AGATTU/CAPE SABAK    &lt;tibble [10 × 8]&gt;\n##  4 AGATTU/GILLON POINT  &lt;tibble [8 × 8]&gt; \n##  5 AKUN/BILLINGS HEAD   &lt;tibble [7 × 8]&gt; \n##  6 AKUTAN/CAPE MORGAN   &lt;tibble [8 × 8]&gt; \n##  7 AMCHITKA/COLUMN ROCK &lt;tibble [5 × 8]&gt; \n##  8 ATKINS               &lt;tibble [9 × 8]&gt; \n##  9 ATTU/CAPE WRANGELL   &lt;tibble [8 × 8]&gt; \n## 10 AYUGADAK             &lt;tibble [7 × 8]&gt; \n## # ℹ 43 more rows"
  },
  {
    "objectID": "labs/lab-06.html#residual-bootstrapping-1",
    "href": "labs/lab-06.html#residual-bootstrapping-1",
    "title": "MAR 536 Lab 6",
    "section": "residual bootstrapping",
    "text": "residual bootstrapping\n\nnboot &lt;- 100\n# first extract a table of fitted values and residuals using augment\nssl_boot &lt;- ssl_models |&gt;\n  mutate(tbl = map(model, augment)) |&gt; \n  select(sitename, tbl)|&gt; \n  unnest(cols=c(tbl)) |&gt; \n  janitor::clean_names() |&gt; \n  ungroup() |&gt;\n  I()\nssl_boot\n## # A tibble: 372 × 9\n##    sitename       log_count year2 fitted    resid   hat  sigma  cooksd std_resid\n##    &lt;chr&gt;              &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n##  1 ADAK/LAKE POI…      5.89     2   5.90 -0.00375 0.452 0.0868 0.00176   -0.0653\n##  2 ADAK/LAKE POI…      5.86     4   5.85  0.00614 0.277 0.0868 0.00166    0.0929\n##  3 ADAK/LAKE POI…      5.74     5   5.83 -0.0888  0.216 0.0709 0.231     -1.29  \n##  4 ADAK/LAKE POI…      5.82     9   5.74  0.0886  0.155 0.0722 0.141      1.24  \n##  5 ADAK/LAKE POI…      5.76    10   5.71  0.0509  0.184 0.0821 0.0595     0.726 \n##  6 ADAK/LAKE POI…      5.73    11   5.69  0.0454  0.232 0.0829 0.0673     0.667 \n##  7 ADAK/LAKE POI…      5.52    14   5.62 -0.0985  0.483 0.0533 1.46      -1.76  \n##  8 ADUGAK              5.03     0   4.99  0.0416  0.412 0.0857 0.155      0.666 \n##  9 ADUGAK              5.08     2   5.09 -0.0172  0.269 0.0886 0.0112    -0.247 \n## 10 ADUGAK              5.12     4   5.20 -0.0778  0.175 0.0804 0.118     -1.05  \n## # ℹ 362 more rows"
  },
  {
    "objectID": "labs/lab-06.html#residual-bootstrapping-2",
    "href": "labs/lab-06.html#residual-bootstrapping-2",
    "title": "MAR 536 Lab 6",
    "section": "residual bootstrapping",
    "text": "residual bootstrapping\n\n# we'll do resampling from the residuals for each year within each rookery\n# rather than getting complicated with nested lists, we'll use sample_frac() to do the resamples\ntosample &lt;- ssl_boot |&gt; \n  select(sitename, resid) |&gt; \n  group_by(sitename)\nresamples &lt;-\n   map_dfr(seq_len(nboot), ~slice_sample(tosample, prop = 1, replace = TRUE)) |&gt;\n   ungroup() |&gt; \n   mutate(replicate = rep(1:nboot, each = nrow(tosample)))\nresamples\n## # A tibble: 37,200 × 3\n##    sitename           resid replicate\n##    &lt;chr&gt;              &lt;dbl&gt;     &lt;int&gt;\n##  1 ADAK/LAKE POINT  0.0886          1\n##  2 ADAK/LAKE POINT  0.00614         1\n##  3 ADAK/LAKE POINT  0.0454          1\n##  4 ADAK/LAKE POINT -0.0888          1\n##  5 ADAK/LAKE POINT  0.0509          1\n##  6 ADAK/LAKE POINT  0.0454          1\n##  7 ADAK/LAKE POINT  0.0454          1\n##  8 ADUGAK           0.168           1\n##  9 ADUGAK          -0.0193          1\n## 10 ADUGAK           0.0416          1\n## # ℹ 37,190 more rows"
  },
  {
    "objectID": "labs/lab-06.html#accumulate",
    "href": "labs/lab-06.html#accumulate",
    "title": "MAR 536 Lab 6",
    "section": "accumulate()",
    "text": "accumulate()\nWe sometimes like to use the output of one iteration as input to the next. e.g. model population dynamics over time, iterated function is annual population update.\n\\[N_{t+1} = \\lambda N_{t} - h_{t}\\]\nCan achieve this using accumulate().\n\npop_update &lt;- function(N, h=0, lambda = 1.05) lambda*N - h\nh &lt;- rep(10,10)\ninitN &lt;- 100\naccumulate(h, pop_update, .init = initN, lambda = 1.05)\n##  [1] 100.00000  95.00000  89.75000  84.23750  78.44938  72.37184  65.99044\n##  [8]  59.28996  52.25446  44.86718  37.11054\n\n\naccumulate(letters[1:10], paste, sep = \" + \")\n##  [1] \"a\"                                    \n##  [2] \"a + b\"                                \n##  [3] \"a + b + c\"                            \n##  [4] \"a + b + c + d\"                        \n##  [5] \"a + b + c + d + e\"                    \n##  [6] \"a + b + c + d + e + f\"                \n##  [7] \"a + b + c + d + e + f + g\"            \n##  [8] \"a + b + c + d + e + f + g + h\"        \n##  [9] \"a + b + c + d + e + f + g + h + i\"    \n## [10] \"a + b + c + d + e + f + g + h + i + j\""
  },
  {
    "objectID": "labs/lab-06.html#population-projections",
    "href": "labs/lab-06.html#population-projections",
    "title": "MAR 536 Lab 6",
    "section": "Population projections",
    "text": "Population projections\nStatus for endangered species are often based on a risk evaluation of population projections. We want to project population dynamics forward in time given uncertainty in future dynamics. We want to do this lots of times to quantify the risk of extinction.\nCurrent (2022) estimates of the North Atlantic Right Whale population are 340 individuals. The population has been declining on average around 3% per year since 2011. What is the year in which the probability that the right whale population drops below 100 individuals is at least 50% (P(N&lt;100)&gt;=0.5)?\n\nnsim &lt;- 100\nnyr &lt;- 100\ninitN &lt;- 340\nsd_proc &lt;- 0.1\nlambda &lt;- 0.97\ngrowth_rates &lt;- map(seq_len(nsim), ~rlnorm(nyr,log(lambda),sd_proc))\n\n# population model\npop_update &lt;- function(N, growth_rate = 1) N*growth_rate\n\n# population projection for each time series of process errors\npop_proj &lt;- tibble(sim = seq_len(nsim)) |&gt;\n  mutate(popsize = map(growth_rates,~accumulate(., pop_update, \n                                                .init = initN))) |&gt;\n  unnest(cols = c(popsize)) |&gt;\n  mutate(year = rep(2022:2122, nsim))\npop_proj\n## # A tibble: 10,100 × 3\n##      sim popsize  year\n##    &lt;int&gt;   &lt;dbl&gt; &lt;int&gt;\n##  1     1    340   2022\n##  2     1    354.  2023\n##  3     1    373.  2024\n##  4     1    412.  2025\n##  5     1    386.  2026\n##  6     1    342.  2027\n##  7     1    351.  2028\n##  8     1    332.  2029\n##  9     1    374.  2030\n## 10     1    374.  2031\n## # ℹ 10,090 more rows"
  },
  {
    "objectID": "labs/lab-06.html#the-while-loop",
    "href": "labs/lab-06.html#the-while-loop",
    "title": "MAR 536 Lab 6",
    "section": "The while loop",
    "text": "The while loop\nOccasionally we don’t know how many times to execute the loop.\nCan use a while loop, which executes a series of statements for as long as some condition remains true.\nThe general syntax is:\n\nwhile (condition) {\n  #statements\n}"
  },
  {
    "objectID": "labs/lab-06.html#the-while-loop-1",
    "href": "labs/lab-06.html#the-while-loop-1",
    "title": "MAR 536 Lab 6",
    "section": "The while loop",
    "text": "The while loop\nIf there are 7,500 snow leopards in year 2023 and they are declining at 5% per year, in what year will they fall below 500 individuals?\n\nleopard.loop &lt;- function(N, year=2023) {\n  while (N&gt;=500) {\n    N &lt;- N*0.95\n    year &lt;- year+1\n  }\n  return(year)\n}\nleopard.loop(N=7500)\n[1] 2076\n\nPro-tip: when you end up in an infinite loop with no stopping point, press &lt;ESC&gt; to stop it running!"
  },
  {
    "objectID": "labs/lab-06.html#notes-on-for-loops",
    "href": "labs/lab-06.html#notes-on-for-loops",
    "title": "MAR 536 Lab 6",
    "section": "Notes on for loops",
    "text": "Notes on for loops\nfor() loops are used in R code much less often than in compiled languages.\nCode that takes a ‘whole object’ view is likely to be both clearer and faster in R.\nOther looping facilities include repeat, apply, tapply, lapply, sapply.\nThe break statement can be used to terminate any loop, possibly abnormally.\nThis is the only way to terminate repeat loops.\nThe next statement can be used to discontinue one particular cycle and skip to the “next”."
  },
  {
    "objectID": "labs/lab-06.html#improving-speed-of-loops",
    "href": "labs/lab-06.html#improving-speed-of-loops",
    "title": "MAR 536 Lab 6",
    "section": "Improving speed of loops",
    "text": "Improving speed of loops\nLooping over very large data sets can sometimes become slow in R. Overcome by:\n\ncreate storage objects apriori (don’t grow objects).\neliminate certain operations in loops or\n\navoidg loops over the data-intensive dimension in an object altogether.\n\n\nthe latter can be achieved by performing mainly vector-to-vecor or matrix-to-matrix computations (often &gt; 100x faster than for() or apply() or map()).\n\nMake use of existing speed-optimized R functions (e.g.: rowSums, rowMeans, table) or write your own fast functions.\n\nxdat &lt;- matrix(rnorm(1000000), 100000, 10)\nsystem.time(x_mean &lt;- apply(xdat, 1, mean))\n   user  system elapsed \n  0.200   0.001   0.201 \nsystem.time(x_mean &lt;- rowMeans(xdat))\n   user  system elapsed \n      0       0       0"
  },
  {
    "objectID": "labs/lab-06.html#lab-exercise-33",
    "href": "labs/lab-06.html#lab-exercise-33",
    "title": "MAR 536 Lab 6",
    "section": "Lab Exercise 3/3",
    "text": "Lab Exercise 3/3\ndata/eukaryotes.tsv contains a NCBI Eukaryotic genome dataset, with basic information about the genomic content of all eukaryotes that were uploaded to the NCBI Genome database.\nIt contains accession numbers, information about the quality of the genome and stats such a average genome size and GC-content.\nUse glimpse() and other data exploration to get familiar with the data. Then use map_* functions to answer the following:\n\nHow many different organisms are there in the dataset?\n\nHow many different institutes (centers) submitted a genome?\n\nThe data seem to be grouped in groups. How many groups are there?\n\nHow many sub groups are there?\n\nHow many different organisms are there per group?\nHow many different institutes (centers) submitted a genome per group?\nHow many sub groups are there per group?"
  },
  {
    "objectID": "labs/lab-06.html#lab-exercise-3-continued",
    "href": "labs/lab-06.html#lab-exercise-3-continued",
    "title": "MAR 536 Lab 6",
    "section": "Lab Exercise 3 continued…",
    "text": "Lab Exercise 3 continued…\nWe might hypothesisze that “The bigger the size of a genome, the higher the number of proteins”.\n\nFit a linear model of log10_proteins ~ log10_size_mb for each group.\n\nExtract the R^2 for each model and print these for each group.\n\nAssess the validity of your modeling approach.\n\nObtain and plot predictions for each group for genome sizes 0.5, 123, and 500 MB.\n\nHow do you interpret the results in terms of the original hypothesis?\n\nBONUS use residual bootstrapping to obtain distributions for the predictions made in part 11.\n\n\n\n\ngavinfay.github.io/mar536-biolstats2-s23"
  },
  {
    "objectID": "labs/lab-01.html#lab-schedule",
    "href": "labs/lab-01.html#lab-schedule",
    "title": "Biological Stats 2: Lab 1",
    "section": "Lab schedule",
    "text": "Lab schedule\n1/22: Introduction to R and R Studio, working with data\n1/29: Visualizing data\n2/05: Probability, linear modeling\n2/12: Data wrangling, model summaries\n2/19: Simulation, Resampling\n2/26: Iteration\n3/05: Creating functions, debugging\n3/19: Flex: automated reporting & Quarto\n4/02: working with Spatial data"
  },
  {
    "objectID": "labs/lab-01.html#format-for-lab-component",
    "href": "labs/lab-01.html#format-for-lab-component",
    "title": "Biological Stats 2: Lab 1",
    "section": "Format for lab component",
    "text": "Format for lab component\n\nDescription/overview of concepts by instructor\nLive coding. Interactive, follow along yourselves\nLab exercises to practice material\nAssignment each week is to finish the exercises\nExtra credit: #TidyTuesday\nCommunity support\n“Try stuff and see what happens”"
  },
  {
    "objectID": "labs/lab-01.html#why-r",
    "href": "labs/lab-01.html#why-r",
    "title": "Biological Stats 2: Lab 1",
    "section": "Why R?",
    "text": "Why R?\nReproducible\n- command line interface encourages organization\n- scripts allow others (and you!) to reproduce analyses from end-to-end\n- integration of analysis with document creation\nExtensible\n- new methods delivered as developed\n- continual expansion through new packages\nOpen-source\n- all code can be examined by the user\nFree\n- available to large set of users (and therefore developers)\nR is not the only solution out there.\nThe real goal is not to teach R, but concepts that all programming depends on."
  },
  {
    "objectID": "labs/lab-01.html#recommended-reading",
    "href": "labs/lab-01.html#recommended-reading",
    "title": "Biological Stats 2: Lab 1",
    "section": "Recommended reading",
    "text": "Recommended reading\nR for Data Science, 2017 (Wickham and Grolemund)\nhttps://r4ds.had.co.nz/"
  },
  {
    "objectID": "labs/lab-01.html#recommended-reading-1",
    "href": "labs/lab-01.html#recommended-reading-1",
    "title": "Biological Stats 2: Lab 1",
    "section": "Recommended reading",
    "text": "Recommended reading\nAn introduction to R (Venables et al.)\n– http://cran.r-project.org/doc/manuals/R-intro.pdf\nR reference card 2.0 (Baggott)\n– http://cran.r-project.org/doc/contrib/Baggott-refcard-v2.pdf\n– Extremely useful handout: put on wall in view of your desk\nCheatsheets\n- https://posit.co/resources/cheatsheets/\nThere are many (many) R books out there. Good for reference. e.g.\n- The R Book, 2007 (Crawley)\n- Modern Applied Statistics with S, 20002 (Venables and Ripley)\n- Introductory Statistics with R, 2002 (Dalgaard)"
  },
  {
    "objectID": "labs/lab-01.html#reproducibility-checklist",
    "href": "labs/lab-01.html#reproducibility-checklist",
    "title": "Biological Stats 2: Lab 1",
    "section": "Reproducibility checklist",
    "text": "Reproducibility checklist\nWhat does it mean for a data analysis to be “reproducible”?\n\nNear-term goals:\n\nAre the tables and figures reproducible from the code and data?\nDoes the code actually do what you think it does?\nIn addition to what was done, is it clear why it was done?\n\nLong-term goals:\n\nCan the code be used for other data?\nCan you extend the code to do other things?"
  },
  {
    "objectID": "labs/lab-01.html#toolkit-for-reproducibility",
    "href": "labs/lab-01.html#toolkit-for-reproducibility",
    "title": "Biological Stats 2: Lab 1",
    "section": "Toolkit for reproducibility",
    "text": "Toolkit for reproducibility\n\nScriptability \\(\\rightarrow\\) R\nLiterate programming (code, narrative, output in one place) \\(\\rightarrow\\) R Markdown\nVersion control \\(\\rightarrow\\) Git / GitHub"
  },
  {
    "objectID": "labs/lab-01.html#r-and-rstudio",
    "href": "labs/lab-01.html#r-and-rstudio",
    "title": "Biological Stats 2: Lab 1",
    "section": "R and RStudio",
    "text": "R and RStudio\n\n\n\n\n\n\n\n\n\n\n\n\nR is an open-source statistical programming language\nR is also an environment for statistical computing and graphics\nIt’s easily extensible with packages\n\n\n\n\n\n\n\n\n\n\n\n\nRStudio is a convenient interface for R called an IDE (integrated development environment), e.g. “I write R code in the RStudio IDE”\nRStudio is not a requirement for programming with R, but it’s very commonly used by R programmers and data scientists"
  },
  {
    "objectID": "labs/lab-01.html#using-r-today-rstudio-cloud",
    "href": "labs/lab-01.html#using-r-today-rstudio-cloud",
    "title": "Biological Stats 2: Lab 1",
    "section": "Using R today: RStudio Cloud",
    "text": "Using R today: RStudio Cloud\nAn alternative:\n\nweb browser interface https://posit.cloud/content/5243518"
  },
  {
    "objectID": "labs/lab-01.html#r-packages",
    "href": "labs/lab-01.html#r-packages",
    "title": "Biological Stats 2: Lab 1",
    "section": "R packages",
    "text": "R packages\n\nPackages are the fundamental units of reproducible R code. They include reusable R functions, the documentation that describes how to use them, and sample data 1\nAs of September 2020, there are over 16,000 R packages available on CRAN (the Comprehensive R Archive Network)2\nWe’re going to work with a small (but important) subset of these!\n\nWickham and Bryan, R PackagesCRAN contributed packages"
  },
  {
    "objectID": "labs/lab-01.html#tour-r-and-rstudio",
    "href": "labs/lab-01.html#tour-r-and-rstudio",
    "title": "Biological Stats 2: Lab 1",
    "section": "Tour: R and RStudio",
    "text": "Tour: R and RStudio"
  },
  {
    "objectID": "labs/lab-01.html#a-short-list-for-now-of-r-essentials",
    "href": "labs/lab-01.html#a-short-list-for-now-of-r-essentials",
    "title": "Biological Stats 2: Lab 1",
    "section": "A short list (for now) of R essentials",
    "text": "A short list (for now) of R essentials\n\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses:\n\n\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n\n\n\nPackages are installed with the install.packages function and loaded with the library function, once per session:\n\n\ninstall.packages(\"package_name\")\nlibrary(package_name)"
  },
  {
    "objectID": "labs/lab-01.html#tidyverse",
    "href": "labs/lab-01.html#tidyverse",
    "title": "Biological Stats 2: Lab 1",
    "section": "tidyverse",
    "text": "tidyverse\n\n\n\n\n\n\n\n\n\n\n\n\ntidyverse.org\n\nThe tidyverse is an opinionated collection of R packages designed for data science\nAll packages share an underlying philosophy and a common grammar"
  },
  {
    "objectID": "labs/lab-01.html#getting-started",
    "href": "labs/lab-01.html#getting-started",
    "title": "Biological Stats 2: Lab 1",
    "section": "Getting started",
    "text": "Getting started\nEnter instructions at R console command line prompt (&gt;): e.g. type\n\n&gt; 2 + 2\n\nR acts as a calculator and returns (prints) the result.\n\n&gt; 2 + 2\n[1] 4"
  },
  {
    "objectID": "labs/lab-01.html#simple-commands",
    "href": "labs/lab-01.html#simple-commands",
    "title": "Biological Stats 2: Lab 1",
    "section": "Simple commands",
    "text": "Simple commands\n\n&gt; 3^2\n[1] 9\n&gt; 2*(2+2)\n[1] 8\n&gt; 2*2+2\n[1] 6\n&gt; log(10)\n[1] 2.302585\n&gt; exp(1)\n[1] 2.718282\n&gt; x &lt;- 3\n&gt; 2*x\n[1] 6\n\nThe &lt;- means ‘assign’. i.e. ‘assign a value of 3 to the variable x’. &lt;- is preferable to using ="
  },
  {
    "objectID": "labs/lab-01.html#scripts-and-rstudio",
    "href": "labs/lab-01.html#scripts-and-rstudio",
    "title": "Biological Stats 2: Lab 1",
    "section": "Scripts and RStudio",
    "text": "Scripts and RStudio\n\nTyping commands into the console can get tedious.\nScripts are text files containing lines of code.\nScripts provide a complete record of analyses.\nCode can be run (executed) from these files repeatedly.\nScripts can be created in a text editor and copied into the R console.\n\n\nOr…\n\nRStudio integrates scripts, R console, and output in a user-friendly development environment.\nTo run code in RStudio, select code and type\nCtrl+Enter (Windows)\nCommand+Enter (Mac)\nThe code will run in the R console."
  },
  {
    "objectID": "labs/lab-01.html#rmarkdown",
    "href": "labs/lab-01.html#rmarkdown",
    "title": "Biological Stats 2: Lab 1",
    "section": "rmarkdown",
    "text": "rmarkdown\n\n\nrmarkdown.rstudio.com\n\nrmarkdown and the various packages that support it enable R users to write their code and prose in reproducible computational documents\nWe will generally refer to R Markdown documents (with .Rmd extension), e.g. “Do this in your R Markdown document” and rarely discuss loading the rmarkdown package"
  },
  {
    "objectID": "labs/lab-01.html#r-markdown",
    "href": "labs/lab-01.html#r-markdown",
    "title": "Biological Stats 2: Lab 1",
    "section": "R Markdown",
    "text": "R Markdown\n\nFully reproducible reports – each time you knit the analysis is ran from the beginning\nSimple markdown syntax for text\nCode goes in chunks, defined by three backticks, narrative goes outside of chunks"
  },
  {
    "objectID": "labs/lab-01.html#tour-r-markdown",
    "href": "labs/lab-01.html#tour-r-markdown",
    "title": "Biological Stats 2: Lab 1",
    "section": "Tour: R Markdown",
    "text": "Tour: R Markdown"
  },
  {
    "objectID": "labs/lab-01.html#getting-help-in-r",
    "href": "labs/lab-01.html#getting-help-in-r",
    "title": "Biological Stats 2: Lab 1",
    "section": "Getting Help in R",
    "text": "Getting Help in R\nR is a programming language, there is a learning curve.\nFortunately, there are lots of resources:\n\nDon’t summon a wish-granting computer demon."
  },
  {
    "objectID": "labs/lab-01.html#getting-help-in-r-1",
    "href": "labs/lab-01.html#getting-help-in-r-1",
    "title": "Biological Stats 2: Lab 1",
    "section": "Getting Help in R",
    "text": "Getting Help in R\nR is a programming language, there is a learning curve.\nFortunately, there are lots of resources:\n- help files\n- online search results\n- books\n- colleagues\n- RStudio Community\n\n&gt; ?(mean)\n&gt; help(\"mean\")\n\nThe above both get help for the function mean.\nUse help.search(\"function.name\") to search across packages.\nstr(object.name) shows the structure of an object."
  },
  {
    "objectID": "labs/lab-01.html#r-help-files-mean",
    "href": "labs/lab-01.html#r-help-files-mean",
    "title": "Biological Stats 2: Lab 1",
    "section": "R Help files (?mean)",
    "text": "R Help files (?mean)\nCommon format:\n\nDescription (what the function does)\n\nUsage (how to use it)\n\nArguments (what the function needs, options)\n\nValue (what does the function return)\n\nSee Also (related functions)\n\nExamples (sample code showing how the function works)\n\nRead function documentation and explore behavior by running examples!"
  },
  {
    "objectID": "labs/lab-01.html#r-markdown-help",
    "href": "labs/lab-01.html#r-markdown-help",
    "title": "Biological Stats 2: Lab 1",
    "section": "R Markdown help",
    "text": "R Markdown help\n\n\nR Markdown Cheat Sheet\nHelp -&gt; Cheatsheets\n\n\n\n\n\n\n\n\n\n\n\nMarkdown Quick Reference\nHelp -&gt; Markdown Quick Reference"
  },
  {
    "objectID": "labs/lab-01.html#projects-in-rstudio",
    "href": "labs/lab-01.html#projects-in-rstudio",
    "title": "Biological Stats 2: Lab 1",
    "section": "Projects in RStudio",
    "text": "Projects in RStudio\nGood to keep all the files associated with a particular project organized together – input data, R scripts, analytical results, figures.\nRStudio has built-in support for this via its projects.\nProjects provide an easy organization of your files and analyses.\nR runs from a working directory, the location (folder) on your computer that R will use as a default when looking for data files, producing output, etc.\nProject files (.Rproj)\nWhen you open a project, RStudio sets the working directory to the folder in which the .Rproj file exists.\nUsing projects can be VERY helpful."
  },
  {
    "objectID": "labs/lab-01.html#lab-exercise-14",
    "href": "labs/lab-01.html#lab-exercise-14",
    "title": "Biological Stats 2: Lab 1",
    "section": "Lab exercise 1/4",
    "text": "Lab exercise 1/4\n(Instructions also in lab-exercise-01.pdf)\nStart a new project. (call it biostats2 or something similar)\nOpen a new R markdown file. Save it. (name it lastname_lab1.Rmd or something similar)\nAt the top of the script, add comments with your name and lab 1.\nWork in pairs or individually.\nSubmit your .Rmd file via myCourses before lab next week.\nWrite code that evaluates the following when run. \\[7 + 5(4+3)\\] \\[e^{-5(0.2+0.15)}\\] \\[\\frac{\\sqrt{1+2(3+2)}}{\\ln(3^2+2)}\\]"
  },
  {
    "objectID": "labs/lab-01.html#objects",
    "href": "labs/lab-01.html#objects",
    "title": "Biological Stats 2: Lab 1",
    "section": "Objects",
    "text": "Objects\nCommon types of objects\n- Numbers\n- Characters (i.e. text or strings)\n- Tables\n- Vectors and matrices\n- Plots\n- Statistical output\n- Functions\nObjects in R are global\nViewing objects: In RStudio see top-right Workspace tab\nMore generally:\n\n\n&gt;   print(myobject)\n&gt;   myobject\n\nls() lists all objects in the workspace.\nUse rm() to remove an object."
  },
  {
    "objectID": "labs/lab-01.html#data-types-modes",
    "href": "labs/lab-01.html#data-types-modes",
    "title": "Biological Stats 2: Lab 1",
    "section": "Data types (modes)",
    "text": "Data types (modes)\nDescribe how objects are stored in computer memory.\nIn R you do not need to specify the data type.\nCommon data types:\n\nNumeric (integer, floating point numbers or doubles)\nLogical (Boolean, true or false)\nCharacters (text or string data)\n\nTypes are not always obvious in R, but can be important to know."
  },
  {
    "objectID": "labs/lab-01.html#data-types-ii",
    "href": "labs/lab-01.html#data-types-ii",
    "title": "Biological Stats 2: Lab 1",
    "section": "Data types II",
    "text": "Data types II\n\n&gt; myobject &lt;- log(10)\n&gt; mode(myobject)\n[1] \"numeric\"\n&gt; is.numeric(myobject)\n[1] TRUE\n&gt; typeof(myobject)\n[1] \"double\"\n&gt; newobject &lt;- as.integer(myobject)\n&gt; typeof(newobject)\n[1] \"integer\"\n&gt; is.character(myobject)\n[1] FALSE\n&gt; typeof(\"hello world\")\n[1] \"character\""
  },
  {
    "objectID": "labs/lab-01.html#vectors",
    "href": "labs/lab-01.html#vectors",
    "title": "Biological Stats 2: Lab 1",
    "section": "Vectors",
    "text": "Vectors\n\n&gt; weights &lt;- c(2.3,5.4,7.5,9)\n&gt; print(weights)\n[1] 2.3 5.4 7.5 9.0\n&gt; years &lt;- 2007:2016\n&gt; print(years)\n [1] 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016\n&gt; years &lt;- seq(from=2000,to=2016,by=2)\n&gt; print(years)\n[1] 2000 2002 2004 2006 2008 2010 2012 2014 2016\n&gt; x &lt;- rep(3,times=10)\n&gt; print(x)\n [1] 3 3 3 3 3 3 3 3 3 3\n&gt; rep(1:3,times=3)\n[1] 1 2 3 1 2 3 1 2 3\n&gt; rep(1:3,length=10)\n [1] 1 2 3 1 2 3 1 2 3 1"
  },
  {
    "objectID": "labs/lab-01.html#more-on-vectors",
    "href": "labs/lab-01.html#more-on-vectors",
    "title": "Biological Stats 2: Lab 1",
    "section": "More on Vectors",
    "text": "More on Vectors\nVectors are ordered and can be referred to by element(s) using [ ]\n\n&gt; (years &lt;- 2007:2016)\n [1] 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016\n&gt; years[3]\n[1] 2009\n&gt; years[5:6]\n[1] 2011 2012\n&gt; which(years==2010)\n[1] 4\n&gt; years[-c(2,4)] # A negative index excludes elements\n[1] 2007 2009 2011 2012 2013 2014 2015 2016\n\nVector operations are element-wise\n\n&gt; (x &lt;- 1:5)\n[1] 1 2 3 4 5\n&gt; 2*x\n[1]  2  4  6  8 10"
  },
  {
    "objectID": "labs/lab-01.html#lab-exercise-24",
    "href": "labs/lab-01.html#lab-exercise-24",
    "title": "Biological Stats 2: Lab 1",
    "section": "Lab exercise 2/4",
    "text": "Lab exercise 2/4\n(Instructions also in lab-exercise-01.pdf)\nCreate vectors using seq(), rep(), and mathematical operators. Only use c() when absolutely necessary.\nhint Remember you can get help on a function by typing ?functionname\n\nPositive integers from 1 to 99\n\nOdd integers between 1 and 99\n\nThe numbers 1,1,1, 2,2,2, 3,3,3\n\nThe numbers -5,-4,-3,-5,-4,-3,-5,-4,-3\n\nThe fractions 1, 1/2, 1/3, 1/4, …, 1/10\n\nThe cubes 1, 8, 27, 64, 125, 216"
  },
  {
    "objectID": "labs/lab-01.html#useful-functions",
    "href": "labs/lab-01.html#useful-functions",
    "title": "Biological Stats 2: Lab 1",
    "section": "Useful functions",
    "text": "Useful functions\n\n&gt; x &lt;- c(5,3,2,6,3,9,1,18)\n&gt; length(x)  # length of vector x\n[1] 8\n&gt; sort(unique(x))  # sorted vector of unique values in x\n[1]  1  2  3  5  6  9 18\n&gt; min(x)     # minimum value in x\n[1] 1\n&gt; max(x)     # maximum value in x\n[1] 18\n&gt; mean(x)    # mean of x\n[1] 5.875\n&gt; median(x)  # median of x\n[1] 4\n&gt; sd(x)      # standard deviation of x\n[1] 5.514591\n&gt; range(x)   # range of values in x\n[1]  1 18\n&gt; range(x)[2]  # 2nd element of values returned by range()\n[1] 18\n&gt; quantile(x) # optional argument 'probs' can be handy\n   0%   25%   50%   75%  100% \n 1.00  2.75  4.00  6.75 18.00"
  },
  {
    "objectID": "labs/lab-01.html#boolean-logic-operators",
    "href": "labs/lab-01.html#boolean-logic-operators",
    "title": "Biological Stats 2: Lab 1",
    "section": "Boolean logic operators",
    "text": "Boolean logic operators\n\n\n\nOperator\nR Code\n\n\n\n\nAND\n& (&&)\n\n\nOR\n| (||)\n\n\nNOT\n!\n\n\nless than\n&lt;\n\n\ngreater than\n&gt;\n\n\nless than or equal\n&lt;=\n\n\ngreater than or equal\n&gt;=\n\n\nequals\n==\n\n\nNOT equal\n!=\n\n\n\n&& and || are used when asking IF statements.\nThese only use a single value, not a vector."
  },
  {
    "objectID": "labs/lab-01.html#boolean-examples",
    "href": "labs/lab-01.html#boolean-examples",
    "title": "Biological Stats 2: Lab 1",
    "section": "Boolean examples",
    "text": "Boolean examples\n\n&gt; x &lt;- 7 \n&gt; x == 7 \n[1] TRUE\n&gt; x &lt; 10 \n[1] TRUE\n&gt; x &lt; -3 \n[1] FALSE\n&gt; x &gt; 0 & x &lt;= 12\n[1] TRUE\n&gt; x &gt;= 10 | x &lt; 0 \n[1] FALSE\n\n\n&gt; y &lt;- c(4,8)\n&gt; y &gt; 5   #returns a logical vector\n[1] FALSE  TRUE\n&gt; y[y&gt;5]  #returns elements of y that meet condition\n[1] 8\n&gt; which(y&gt;5) #index of y that meets condition\n[1] 2\n&gt; any(y&gt;5)\n[1] TRUE\n&gt; all(y&gt;5)\n[1] FALSE"
  },
  {
    "objectID": "labs/lab-01.html#lab-exercise-34",
    "href": "labs/lab-01.html#lab-exercise-34",
    "title": "Biological Stats 2: Lab 1",
    "section": "Lab exercise 3/4",
    "text": "Lab exercise 3/4\nComplete the following using the vector y:\ny &lt;- c(3,2,15,-1,22,1,9,17,5)\n\nDisplay the first and last values.\n\nFind the last value for a vector of any length.\n\nDisplay the values that are greater than the mean of y.\n\nDisplay the positions (indices) of the values greater than the mean.\n\nAre all the values positive?\n\nAre any of the values equal to the mean?\n\nAre any of the values equal to the median?"
  },
  {
    "objectID": "labs/lab-01.html#other-types-of-objects",
    "href": "labs/lab-01.html#other-types-of-objects",
    "title": "Biological Stats 2: Lab 1",
    "section": "Other types of objects",
    "text": "Other types of objects\nmatrices (more generally, arrays)\n- multi-dimensional generalizations of vectors.\n- are vectors that can be indexed by two or more indices.\nfactors\n- compact ways to handle categorical data.\nlists\n- general form of vector, elements need not be the same type.\n- elements often themselves vectors or lists.\n- convenient way to return results of statistical computations.\ndataframes\n- matrix-like structures, columns can be of different types.\n- often ‘data matrices’ with one row per observational unit but with (possibly) both numerical and categorical variables.\n\nfunctions\n- are themselves objects in R which can be stored in the project’s workspace.\n- provide a simple and convenient way to extend R."
  },
  {
    "objectID": "labs/lab-01.html#dataframes",
    "href": "labs/lab-01.html#dataframes",
    "title": "Biological Stats 2: Lab 1",
    "section": "Dataframes",
    "text": "Dataframes\nThere are lots of data set examples in R.\ne.g. record times for 35 Scottish hill races\n\n\n&gt; library(MASS)\n&gt; head(hills,n=3) # shows first few lines. Also tail()\n             dist climb   time\nGreenmantle   2.5   650 16.083\nCarnethy      6.0  2500 48.350\nCraig Dunain  6.0   900 33.650\n&gt; names(hills)  # get the names of the data frame\n[1] \"dist\"  \"climb\" \"time\" \n\n\nCreating dataframes\n\n&gt; fish &lt;- c(\"cod\",\"haddock\",\"dogfish\",\"pollock\")\n&gt; length &lt;- c(34,23,75,18)\n&gt; age &lt;- c(6,3,17,2)\n&gt; fish.data &lt;- data.frame(fish=fish,length=length,age=age)\n&gt; head(fish.data)\n     fish length age\n1     cod     34   6\n2 haddock     23   3\n3 dogfish     75  17\n4 pollock     18   2"
  },
  {
    "objectID": "labs/lab-01.html#extracting-information-from-data-frames",
    "href": "labs/lab-01.html#extracting-information-from-data-frames",
    "title": "Biological Stats 2: Lab 1",
    "section": "Extracting information from data frames",
    "text": "Extracting information from data frames\nUse the $ to extract vectors from a data frame\n\n&gt; hills$dist\n [1]  2.5  6.0  6.0  7.5  8.0  8.0 16.0  6.0  5.0  6.0 28.0  5.0  9.5  6.0  4.5\n[16] 10.0 14.0  3.0  4.5  5.5  3.0  3.5  6.0  2.0  3.0  4.0  6.0  5.0  6.5  5.0\n[31] 10.0  6.0 18.0  4.5 20.0\n\nYou can also specify the row index, column index, or both object[row,column]\n\n&gt; # extract the element in row 1, column 2\n&gt; hills[1,2]\n[1] 650\n&gt; hills$climb[1]\n[1] 650\n&gt; # extract the first row\n&gt; hills[1,]\n            dist climb   time\nGreenmantle  2.5   650 16.083"
  },
  {
    "objectID": "labs/lab-01.html#extracting-information-from-data-frames-2",
    "href": "labs/lab-01.html#extracting-information-from-data-frames-2",
    "title": "Biological Stats 2: Lab 1",
    "section": "Extracting information from data frames (2)",
    "text": "Extracting information from data frames (2)\nData frames are commonly used in a structure called a ‘tibble’, from the tidyverse.\n\n&gt; #install.packages('tidyverse')\n&gt; library(tidyverse)\n\n\n&gt; hills_tbl &lt;- as_tibble(hills)\n&gt; hills_tbl\n# A tibble: 35 × 3\n    dist climb  time\n   &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt;\n 1   2.5   650  16.1\n 2   6    2500  48.4\n 3   6     900  33.6\n 4   7.5   800  45.6\n 5   8    3070  62.3\n 6   8    2866  73.2\n 7  16    7500 205. \n 8   6     800  36.4\n 9   5     800  29.8\n10   6     650  39.8\n# ℹ 25 more rows"
  },
  {
    "objectID": "labs/lab-01.html#quickly-visualize-the-dataset",
    "href": "labs/lab-01.html#quickly-visualize-the-dataset",
    "title": "Biological Stats 2: Lab 1",
    "section": "Quickly visualize the dataset",
    "text": "Quickly visualize the dataset\n\n\n\n\n\n\n\n\n\n\n\n\n\n&gt; library(ggplot2)\n&gt; ggplot(data = hills_tbl, mapping = aes(x=dist,y=time)) +\n+   geom_point(aes(size = climb), alpha = 1/3) +\n+   xlab(\"Distance (miles)\") +\n+   ylab(\"Record Time (mins)\") +\n+   xlim(0,30) + ylim(0,225)"
  },
  {
    "objectID": "labs/lab-01.html#extracting-elements-logically",
    "href": "labs/lab-01.html#extracting-elements-logically",
    "title": "Biological Stats 2: Lab 1",
    "section": "Extracting elements logically",
    "text": "Extracting elements logically\n\n&gt; fish &lt;- c(\"cod\",\"haddock\",\"dogfish\",\"pollock\")\n&gt; length &lt;- c(34,23,75,18)\n&gt; age &lt;- c(6,3,17,2)\n&gt; fish_data &lt;- tibble(fish=fish,length=length,age=age)\n&gt; fish_data$age   # a vector\n[1]  6  3 17  2\n&gt; fish_data$age &gt; 5  # a logical vector\n[1]  TRUE FALSE  TRUE FALSE\n&gt; filter(fish_data, age&gt;5) #avoids having to create a logical vector\n# A tibble: 2 × 3\n  fish    length   age\n  &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n1 cod         34     6\n2 dogfish     75    17\n&gt; # combining conditions\n&gt; filter(fish_data, age &gt; 5, fish == \"dogfish\")\n# A tibble: 1 × 3\n  fish    length   age\n  &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n1 dogfish     75    17\n&gt; filter(fish_data, length &lt; 25 | length &gt;= 50)\n# A tibble: 3 × 3\n  fish    length   age\n  &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n1 haddock     23     3\n2 dogfish     75    17\n3 pollock     18     2"
  },
  {
    "objectID": "labs/lab-01.html#using-the-pipe",
    "href": "labs/lab-01.html#using-the-pipe",
    "title": "Biological Stats 2: Lab 1",
    "section": "Using the Pipe",
    "text": "Using the Pipe\nCombine verb operations with the pipe operator (|&gt;) e.g.\n\n&gt; fish_data |&gt;\n+   mutate(weight = (length/100)^3) |&gt;\n+   filter(age &gt; 5)\n# A tibble: 2 × 4\n  fish    length   age weight\n  &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 cod         34     6 0.0393\n2 dogfish     75    17 0.422 \n\nThe pipe passes the result from one function call to the next.\nCan be read as “and then”.\n(also the older tidyverse pipe: %&gt;% )"
  },
  {
    "objectID": "labs/lab-01.html#summarizing-data",
    "href": "labs/lab-01.html#summarizing-data",
    "title": "Biological Stats 2: Lab 1",
    "section": "Summarizing Data",
    "text": "Summarizing Data\nAfter selecting data we might like to perform analyses on it.\nWe can use group_by() to recognize structure in the data.\nThen apply functions to variables using summarize()\nRecall gapminder data, find the average life expectancy in 2007 for each continent\n\n&gt; #install.packages('gapminder')\n&gt; library(gapminder)\n&gt; gapminder |&gt; \n+   filter(year == 2007) |&gt; \n+   group_by(continent) |&gt;\n+   summarize(avg_lifeExp = mean(lifeExp))\n# A tibble: 5 × 2\n  continent avg_lifeExp\n  &lt;fct&gt;           &lt;dbl&gt;\n1 Africa           54.8\n2 Americas         73.6\n3 Asia             70.7\n4 Europe           77.6\n5 Oceania          80.7"
  },
  {
    "objectID": "labs/lab-01.html#tips-and-tricks",
    "href": "labs/lab-01.html#tips-and-tricks",
    "title": "Biological Stats 2: Lab 1",
    "section": "Tips and Tricks",
    "text": "Tips and Tricks\nComments\nUse comments within R code to document the purpose of your code. Anything on a line after a # is ignored by R. RStudio uses a different color to help readability.\nSAVE your scripts(!), not workspaces. Use meaningful variable names. Adopt a coding style and use consistently.\n(e.g. https://google.github.io/styleguide/Rguide.xml)\nThe str() function can be incredibly helpful when querying objects.\nMake use of help() documentation.\nThere are almost always multiple ways of getting the same result.\nWe’ll mostly use low level functions to help you understand how R works.\nSome advanced functions are cleaner and do things more quickly."
  },
  {
    "objectID": "labs/lab-01.html#lab-exercise-44-data-frames-using-hills",
    "href": "labs/lab-01.html#lab-exercise-44-data-frames-using-hills",
    "title": "Biological Stats 2: Lab 1",
    "section": "Lab exercise 4/4 (data frames using hills)",
    "text": "Lab exercise 4/4 (data frames using hills)\n\nDisplay the first 5 rows of the hills dataframe.\n\nFind the fastest time.\n\nDisplay the hill races (and distance, climbs, and times) with the 3 fastest times.\n\nExtract and display the record time for Cairngorm.\n\nFind how many hill races have a climb greater than the mean.\n\nDisplay the names of the hill races that have a climb greater than the mean.\n\nDisplay the names and times of the races that are at least 10 miles long and have a climb greater than 4000 feet.\n\nFind the standard deviation of the record times for all races except for the highest climb, the Bens of Jura.\n\nDisplay the range (minimum and maximum) of the average speed for the races.\n\nFind the race that had the fastest average speed.\n\nBONUS Find the mean of the record times for races whose names start with letters A through K."
  },
  {
    "objectID": "labs/lab-01.html#next-time",
    "href": "labs/lab-01.html#next-time",
    "title": "Biological Stats 2: Lab 1",
    "section": "Next time…",
    "text": "Next time…\n1/22: Introduction to R and R Studio, working with data\n1/29: Visualizing data\n2/05: Probability, linear modeling\n2/12: Data wrangling, model summaries\n2/19: Simulation, Resampling\n2/26: Iteration\n3/05: Creating functions, debugging\n3/19: Flex: automated reporting & Quarto\n4/02: working with Spatial data\n\n\n\n\ngavinfay.github.io/mar536-biolstats2-s25"
  },
  {
    "objectID": "labs/lab-07.html#recommended-reading",
    "href": "labs/lab-07.html#recommended-reading",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Recommended reading",
    "text": "Recommended reading\nAn introduction to R (Venables et al.)\n– http://cran.r-project.org/doc/manuals/R-intro.pdf\n- Today’s material: Chapter 10\nAdvanced R (Wickham)\n- Chapter 6, 9"
  },
  {
    "objectID": "labs/lab-07.html#functions",
    "href": "labs/lab-07.html#functions",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Functions",
    "text": "Functions\nR allows the user to create objects of mode function.\nMost of the functions supplied as part of R are themselves written in R and do not differ from user written functions.\nA function is defined by an assignment of the form:\n\nfn_name &lt;- function(arg_1, arg_2, ...) expression\n\nThe expression is usually a grouped expression, that uses the arguments to calculate a value.\nThe value of the expression is the value returned for the function.\nA call to the function takes the form:\n\nfn_name(expr_1, expr2, ...)"
  },
  {
    "objectID": "labs/lab-07.html#scripts-vs-functions",
    "href": "labs/lab-07.html#scripts-vs-functions",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Scripts vs Functions",
    "text": "Scripts vs Functions\nR scripts/markdown files containing lots of lines of code are fine for one-off analyses, but tedious if repeating the same analysis on many datasets.\nInstead use functions to code commonly performed tasks.\nAllows you to avoid global variables that can be accessed and changed anywhere.\nTo avoid duplicating code: if you have multiple copies of almost identical code, put it into a function."
  },
  {
    "objectID": "labs/lab-07.html#scripts-vs-functions-1",
    "href": "labs/lab-07.html#scripts-vs-functions-1",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Scripts vs Functions",
    "text": "Scripts vs Functions\nYou can create a function when R does not have a built-in function for your needs.\nWhen running an analysis over and over again, you can just call the function (one line) instead of running many lines of code.\n“…learning to write useful functions is one of the main ways to make your use of R comfortable and productive.”\n(Venables et al. R manual)"
  },
  {
    "objectID": "labs/lab-07.html#a-simple-function-cv",
    "href": "labs/lab-07.html#a-simple-function-cv",
    "title": "MAR 536 Lab 7: Functions",
    "section": "A simple function: cv()",
    "text": "A simple function: cv()\nThere is no R function for the CV, or coefficient of variation (standard deviation divided by the mean)\n\ncv &lt;- function(xvec) { \n   cv_value &lt;- sd(xvec)/mean(xvec) \n   return(cv_value) \n} \nvalues &lt;- rnorm(n=1000, mean=5, sd=2) \ncv(values) \n[1] 0.3877163\n\nAvailable objects\nOnly the new function cv() and the object values are available in the workspace (they are global).\nObject cv_value (defined inside the function) is encapsulated within the function cv() and not available outside it.\nWell-designed functions only receive inputs through their arguments."
  },
  {
    "objectID": "labs/lab-07.html#optional-arguments",
    "href": "labs/lab-07.html#optional-arguments",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Optional arguments",
    "text": "Optional arguments\nIf xvec includes NAs the function won’t work, instead, add an optional argument.\n\ncv_new &lt;- function(xvec, na.rm = FALSE) {  \n   cv_value &lt;- sd(xvec, na.rm = na.rm)/\n               mean(xvec, na.rm = na.rm) \n   return(cv_value) \n} \nvalues &lt;- rnorm(n=1000, mean=5, sd=2)\nvalues[100] &lt;- NA \ncv_new(values)\n[1] NA\ncv_new(values[-100])\n[1] 0.3837022\ncv_new(values, na.rm = TRUE) \n[1] 0.3837022\n\nSome built-in R functions (e.g. lm()) have many optional arguments.\nqnorm(0.25,0,1), qnorm(x = 0.25), and qnorm(0.25,sd=1) all return the same result."
  },
  {
    "objectID": "labs/lab-07.html#lab-exercise-14",
    "href": "labs/lab-07.html#lab-exercise-14",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Lab exercise 1/4",
    "text": "Lab exercise 1/4\nCreate a function wtlen() with three arguments: a vector of lengths, and values a and b.\nThe function should return the weights of the fishes using the weight-length equation: \\(W = aL^b\\)\nUse the function to calculate the weight (in g) of fish of length 100, 200, 300 cm for:\n\n\n\nSpecies\na\nb\n\n\n\n\nMola mola\n0.0454\n3.05\n\n\nRegalecus glesne\n0.0039\n2.90\n\n\n\ni.e. you can run your function twice, once with the paramters for Mola & once for Regalecus."
  },
  {
    "objectID": "labs/lab-07.html#properties-of-functions",
    "href": "labs/lab-07.html#properties-of-functions",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Properties of functions",
    "text": "Properties of functions\nFunctions:\n- Have a name\n- Are provided with input (“passed” some input)\n- Do something\n- Return something for later use\nFunctions can call other functions.\nA program is a collection of functions.\nFunctions can be re-used.\nA good function is general, carefully written, and well documented."
  },
  {
    "objectID": "labs/lab-07.html#help-with-functions",
    "href": "labs/lab-07.html#help-with-functions",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Help with functions",
    "text": "Help with functions\nType ls() at the prompt in the console to see all of your current objects, including functions.\nType the name of a function to see how it was created, e.g. lm\nTo copy and then change the source code of a built-in function in R, use the edit function, e.g. edit(lm)\nR contains numerous functions, the trick is finding the right one and being able to understand the documentation."
  },
  {
    "objectID": "labs/lab-07.html#outputs-of-functions",
    "href": "labs/lab-07.html#outputs-of-functions",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Outputs of functions",
    "text": "Outputs of functions\nThe command return(my_object) makes the object my_object available to whatever called the function.\nIf the function is called from the console, return(my_object) prints out the object.\nReplacing return(my_object) with invisible(my_object) returns the value without printing out the object.\nWhat is the most common function that returns invisibly?\n(Hint: you use it on nearly every line of code)\nFunctions do not have to return anything.\nYou can pass and return all sorts of things: a single number, a vector of numbers, a character, a boolean value, and even another function (!)"
  },
  {
    "objectID": "labs/lab-07.html#outputting-many-values-from-a-function",
    "href": "labs/lab-07.html#outputting-many-values-from-a-function",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Outputting many values from a function",
    "text": "Outputting many values from a function\nAchieved by returning a list object.\n(e.g. value returned by lm())\n\ncompute_stats &lt;- function(xvec) {\n  ave &lt;- mean(xvec)\n  var &lt;- var(xvec)\n  cv &lt;- cv_new(xvec)  # call to our own function    \n  cat(ave, var, cv, \"\\n\") \n  out &lt;- list(ave = ave, var = var, \n              sd = sqrt(var), cv = cv)\n  return(out)\n}\nvalues &lt;- rnorm(n=1000, mean=5, sd=2)\nvalues_summary &lt;- compute_stats(values) \n5.016149 3.78282 0.3877371"
  },
  {
    "objectID": "labs/lab-07.html#lab-exercise-24",
    "href": "labs/lab-07.html#lab-exercise-24",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Lab exercise 2/4",
    "text": "Lab exercise 2/4\nWrite a function cor_vec() which takes two vectors X and Y which:\n1. Centers both vectors (subtract their respective means) so they average 0\n2. Plots X versus Y\n3. Returns the correlation between X and Y.\nApply your function to the following data set:\n\nset.seed(66)\nxx &lt;- seq(from = 1, to = 100, by = 1)\nyy &lt;- 0.2 + xx*0.5 + rnorm(n = length(xx), mean = 0, sd = 5)\n\nAdd , ... to your function’s argument list and to the call to your plot’s geom_() command.\nThe ... stands for any parameter.\nCall the function with parameters that change the color & size of points."
  },
  {
    "objectID": "labs/lab-07.html#scope-where-is-an-object-visible",
    "href": "labs/lab-07.html#scope-where-is-an-object-visible",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Scope: where is an object visible?",
    "text": "Scope: where is an object visible?\n\nrm(list=ls())\nx1 &lt;- 10\nfunc1 &lt;- function(x,y) {\n   print(x)\n   print(y)\n   print(x1)\n}\nfunc1(x=5, y=6) \n[1] 5\n[1] 6\n[1] 10\nprint(x) \nError in eval(expr, envir, enclos): object 'x' not found\nprint(y) \nError in eval(expr, envir, enclos): object 'y' not found\n\nScoping rule: if there is a local variable and a global variable with the same name, R will use the local variable."
  },
  {
    "objectID": "labs/lab-07.html#first-rule-of-good-programming",
    "href": "labs/lab-07.html#first-rule-of-good-programming",
    "title": "MAR 536 Lab 7: Functions",
    "section": "First rule of good programming",
    "text": "First rule of good programming\nAVOID GLOBAL VARIABLES [whenever possible]\nEach function should be self-contained.\nAll inputs passed as parameters.\nAll outputs returned using return() or invisible()."
  },
  {
    "objectID": "labs/lab-07.html#lab-exercise-34",
    "href": "labs/lab-07.html#lab-exercise-34",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Lab exercise 3/4",
    "text": "Lab exercise 3/4\nWrite a function which:\n1. Takes a file name and two numbers (the defaults for the two numbers should be 1 and 2),\n2. Reads in a table of data (assume that the file is comma delimited),\n3. Plots the columns represented by the two numbers against each other.\nHints:\nUse the read_csv() function.\nUse print() to check the values of intermediate results (to see if your function is working).\nUse the hake.csv file we used previously to check your program."
  },
  {
    "objectID": "labs/lab-07.html#dynamic-lookup",
    "href": "labs/lab-07.html#dynamic-lookup",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Dynamic lookup",
    "text": "Dynamic lookup\nR looks for values when the function is run, not when it’s created.\nThe output of a function can be different depending on objects outside its environment:\n\nf &lt;- function() x\nx &lt;- 15\nf()\n[1] 15\nx &lt;- 20\nf()\n[1] 20\n\nWe generally want to avoid this behavior - function is not self-contained.\nDetect using findGlobals() function from package codetools.\n\nf &lt;- function() x + 1\ncodetools::findGlobals(f)\n[1] \"+\" \"x\"\n\nAll of the standard operators in R are in fact functions.\nYou can therefore override them with your own alternatives.\n- may or may not be a good April Fool’s joke if your colleague leaves their computer unlocked."
  },
  {
    "objectID": "labs/lab-07.html#arguments",
    "href": "labs/lab-07.html#arguments",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Arguments",
    "text": "Arguments\nArguments can be specified by position, by complete name, or by partial name.\nAvoid using positional matching for less commonly used arguments.\nCalling a function given a list of arguments using do.call()\n\nargs &lt;- list(1:10, na.rm = TRUE)\ndo.call(mean, list(1:10, na.rm = TRUE))\n[1] 5.5\n\nDetermine if an argument was supplied or not using missing().\n\ni &lt;- function(a, b) c(missing(a), missing(b))\ni()\n[1] TRUE TRUE\ni(a = 1)\n[1] FALSE  TRUE\ni(b = 2)\n[1]  TRUE FALSE"
  },
  {
    "objectID": "labs/lab-07.html#infix-functions",
    "href": "labs/lab-07.html#infix-functions",
    "title": "MAR 536 Lab 7: Functions",
    "section": "infix functions",
    "text": "infix functions\nMost functions in R are prefix functions, the function name comes before the arguments.\nCan also have infix arguments where function comes between the arguments, like + or -.\nAll user-created infix functions must start and end with %\ne.g. new function to paste together two strings\n\n`%+%` &lt;- function(a, b) paste(a, b, sep = \"\")\n\"new\" %+% \"string\"\n[1] \"newstring\"\n\nNB: when creating, function name has to be put in backticks."
  },
  {
    "objectID": "labs/lab-07.html#debugging-defensive-programming",
    "href": "labs/lab-07.html#debugging-defensive-programming",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Debugging + defensive programming",
    "text": "Debugging + defensive programming\nWhat happens when something goes wrong with your R code?"
  },
  {
    "objectID": "labs/lab-07.html#debugging-defensive-programming-1",
    "href": "labs/lab-07.html#debugging-defensive-programming-1",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Debugging + defensive programming",
    "text": "Debugging + defensive programming\nWhat happens when something goes wrong with your R code?\nWhat do you do? What tools do you have to address the problem?\nDebugging is the art and science of fixing unexpected problems in your code.\nRead the error message!\nUseful functions include traceback() and browser(). Also interactive tools in RStudio."
  },
  {
    "objectID": "labs/lab-07.html#debugging-defensive-programming-2",
    "href": "labs/lab-07.html#debugging-defensive-programming-2",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Debugging + defensive programming",
    "text": "Debugging + defensive programming\nNot all problems are unexpected, you can often anticipate potential problems.\n“Finding your bug is a process of confirming the many things that you believe are true - until you find one which is not true.”\n(Norm Matloff)\nAdd statements to your function that stop the calculations and return messages when function assumptions are not met.\nYou can debug with just print(), there are times when additional help is welcome."
  },
  {
    "objectID": "labs/lab-07.html#debugging-procedure",
    "href": "labs/lab-07.html#debugging-procedure",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Debugging procedure",
    "text": "Debugging procedure\nRealize that you have a bug.\n- (the first step is admitting you have a problem….)\nMake it repeatable.\n- once found, need to be able to reproduce it on command.\n- slowly whittle down to the smallest snippet that still causes the error.\n- binary search is useful for this. (repeatedly remove half the code).\n- if generating the bug takes time, figure out how to get it faster (create minimal example).\n- during this you’ll discover similar inputs that don’t trigger the bug. WRITE THESE DOWN."
  },
  {
    "objectID": "labs/lab-07.html#debugging-procedure-1",
    "href": "labs/lab-07.html#debugging-procedure-1",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Debugging procedure",
    "text": "Debugging procedure\nFigure out where the bug is.\n- Use helpful tools to try and identify the offending line of code.\n- Generate hypotheses, design experiments to test them, record results.\n- A systematic approach will often end up saving you time.\nFix it and test it.\n- Figure out how to fix it and to check that the fix worked.\n- Carefully record the correct output, and check against the inputs that previously failed."
  },
  {
    "objectID": "labs/lab-07.html#lab-exercise-44",
    "href": "labs/lab-07.html#lab-exercise-44",
    "title": "MAR 536 Lab 7: Functions",
    "section": "Lab exercise 4/4",
    "text": "Lab exercise 4/4\nWrite a function (or set of functions) that:\na. takes two vectors of data,\nb. produces a scatterplot of one vector vs the other,\nc. adds a title that is a species name,\nd. performs a regression if there is enough data,\ne. adds the estimated regression line to the plot, and\nf. returns the coefficients of the regression.\nAdd an argument that determines whether the regression should be based on the logs of the input vectors.\nHint Test your functions with some dummy data. Reuse code from earlier today and from other labs.\nApply your function(s) to the Laengelmavesi2 data.\n\n\n\n\ngavinfay.github.io/mar536-biolstats2-s23"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "weeks/week-09.html",
    "href": "weeks/week-09.html",
    "title": "Week 9",
    "section": "",
    "text": "Note that there is no lab on Wednesday due to the UMass Marine Science Symposium (all are welcome to attend).\nGavin is out sick so there is a slight change in plans. Lecture materials are via recordings, class sessions on Tuesday and Thursday will be question/answer sessions and chances to get feedback/help from others on your projects."
  },
  {
    "objectID": "weeks/week-09.html#prepare",
    "href": "weeks/week-09.html#prepare",
    "title": "Week 9",
    "section": "Prepare",
    "text": "Prepare\n📖 Tue:\n\nLecture 14 - Zero inflated models (Recording)\nReading: Chapter 11 of Zuur et al. 2009\n\n📖 Thu:\n\nLecture 15 - Spatial GLM(M)s (Recording - lecture starts ~20 min in)"
  },
  {
    "objectID": "weeks/week-09.html#participate",
    "href": "weeks/week-09.html#participate",
    "title": "Week 9",
    "section": "Participate",
    "text": "Participate\n🖥️ Lecture 14 slide deck (from 2020)\n\nRmd with examples from the lecture\nNB: Today I would likely fit the models in the lecture solely using glmmTMB, e.g. using code similar to the owls example below\nOwls example, zero inflation using glmmTMB (Brooks et al. 2017)\n\npaper with rationale for models by Bolker et al. (2012)\n\nData sets can be found in the class-data folder.\n\n🖥️ Lecture 15 slide deck (from 2020)\n\nRmd with examples from the lecture\nNB: In future offerings, I will replace a lot of this material with focus on sdmTMB, which allows us to use the same type of formula syntax we’ve been using. Here’s a bonus lecture on sdmTMB (recording from my Ecosystem models class, lecture by Dr. Eric Ward)\n\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-07.html",
    "href": "weeks/week-07.html",
    "title": "Week 7",
    "section": "",
    "text": "Take-home MIDTERM distributed this week."
  },
  {
    "objectID": "weeks/week-07.html#prepare",
    "href": "weeks/week-07.html#prepare",
    "title": "Week 7",
    "section": "Prepare",
    "text": "Prepare\n📖 Tue + Thu: Read Chapter 12 Zuur et al. 2007."
  },
  {
    "objectID": "weeks/week-07.html#participate",
    "href": "weeks/week-07.html#participate",
    "title": "Week 7",
    "section": "Participate",
    "text": "Participate\n🖥️ Lecture 11 - Matrix Algebra Review\n⌨️ Lab 7 - Functions (just the exercises)\n\nData sets for the lab can be found in the class-data folder.\n\n🖥️ Lecture 12 - Principal Component Analysis\n\nPCA with palmerpenguins from Dr. Allison Horst"
  },
  {
    "objectID": "weeks/week-07.html#practice",
    "href": "weeks/week-07.html#practice",
    "title": "Week 7",
    "section": "Practice",
    "text": "Practice\nLab 7 exercise is due before lab on Wednesday Mar 22.\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-05.html",
    "href": "weeks/week-05.html",
    "title": "Week 5",
    "section": "",
    "text": "📖 Tue: Read Chapter 5 of James et al. (Introduction to Statistical Learning with R)\n📖 Thu: Read Chapter 7 of James et al. (Introduction to Statistical Learning with R)"
  },
  {
    "objectID": "weeks/week-05.html#prepare",
    "href": "weeks/week-05.html#prepare",
    "title": "Week 5",
    "section": "",
    "text": "📖 Tue: Read Chapter 5 of James et al. (Introduction to Statistical Learning with R)\n📖 Thu: Read Chapter 7 of James et al. (Introduction to Statistical Learning with R)"
  },
  {
    "objectID": "weeks/week-05.html#participate",
    "href": "weeks/week-05.html#participate",
    "title": "Week 5",
    "section": "Participate",
    "text": "Participate\n🖥️ Lecture 8 - Resampling\n⌨️ Lab 5 - Simulation (just the exercise)\n\nData sets for the lab can be found in the class-data folder.\n\n🖥️ Lecture 9 - Nonlinear models, splines"
  },
  {
    "objectID": "weeks/week-05.html#practice",
    "href": "weeks/week-05.html#practice",
    "title": "Week 5",
    "section": "Practice",
    "text": "Practice\nLab 5 exercise is due before lab on Wednesday Feb 22.\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-03.html",
    "href": "weeks/week-03.html",
    "title": "Week 3",
    "section": "",
    "text": "📖 Read Chapters 8 & 11 of “An introduction to R (Venables et al.)” (Tue)\n📖 Read Chapter 7 of Hilborn & Mangel 1997 (Thu)"
  },
  {
    "objectID": "weeks/week-03.html#prepare",
    "href": "weeks/week-03.html#prepare",
    "title": "Week 3",
    "section": "",
    "text": "📖 Read Chapters 8 & 11 of “An introduction to R (Venables et al.)” (Tue)\n📖 Read Chapter 7 of Hilborn & Mangel 1997 (Thu)"
  },
  {
    "objectID": "weeks/week-03.html#participate",
    "href": "weeks/week-03.html#participate",
    "title": "Week 3",
    "section": "Participate",
    "text": "Participate\n⌨️ Lab 3 - Probability & Linear Modeling in R (just the exercise)\n\nspecies richness on beaches data (RIKZ.txt, Zuur Chapter 5, 27)\n\n🖥️ Tutorial - data exploration & catch rate model selection for cod (L McGinnis)\n🖥️ Lecture 5 - Likelihood"
  },
  {
    "objectID": "weeks/week-03.html#practice",
    "href": "weeks/week-03.html#practice",
    "title": "Week 3",
    "section": "Practice",
    "text": "Practice\nLab 3 exercise is due before lab on Wednesday Feb 8.\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-01.html",
    "href": "weeks/week-01.html",
    "title": "Week 1",
    "section": "",
    "text": "📖 Read the syllabus\n📖 Read Chapter 1.1-1.2 of McElreath (Tue)\n📖 Read/reference Chapter 4 of Bolker 2008 (Thu)",
    "crumbs": [
      "Weekly materials",
      "Week 1"
    ]
  },
  {
    "objectID": "weeks/week-01.html#prepare",
    "href": "weeks/week-01.html#prepare",
    "title": "Week 1",
    "section": "",
    "text": "📖 Read the syllabus\n📖 Read Chapter 1.1-1.2 of McElreath (Tue)\n📖 Read/reference Chapter 4 of Bolker 2008 (Thu)",
    "crumbs": [
      "Weekly materials",
      "Week 1"
    ]
  },
  {
    "objectID": "weeks/week-01.html#participate",
    "href": "weeks/week-01.html#participate",
    "title": "Week 1",
    "section": "Participate",
    "text": "Participate\n🖥️ Lecture 1 -Introduction (📋 gapminder data)\n⌨️ Lab 1 -Intro to R (just the exercise)\n🖥️ Lecture 2 - Probability review",
    "crumbs": [
      "Weekly materials",
      "Week 1"
    ]
  },
  {
    "objectID": "weeks/week-01.html#practice",
    "href": "weeks/week-01.html#practice",
    "title": "Week 1",
    "section": "Practice",
    "text": "Practice\nLab 1 exercise is due before class on Tuesday Jan 28.\n\n\nBack to course schedule ⏎",
    "crumbs": [
      "Weekly materials",
      "Week 1"
    ]
  },
  {
    "objectID": "midterm.html",
    "href": "midterm.html",
    "title": "Midterm",
    "section": "",
    "text": "The midterm (20% of course grade) is a take home exam covering core course topics, through (and including) material in week 7 (up to PCA).\nAs detailed on the syllabus this will be distributed Mar 04 and is due Mar 20.\nA practice midterm will be posted here early in the semester.",
    "crumbs": [
      "Midterm exam"
    ]
  },
  {
    "objectID": "course-syllabus.html",
    "href": "course-syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Click here to download a PDF copy of the syllabus. (last updated 2025-01-17)",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-info",
    "href": "course-syllabus.html#course-info",
    "title": "Syllabus",
    "section": "Course info",
    "text": "Course info\nInstructor: Gavin Fay, Associate Professor, Fisheries Oceanography\nStudent Hours:\n\nR open office: Mon 1-3, SMAST-E 235\nBy appointment: Tue 4-5, Thu 1-3\n\n\n\n\n\nDay\nTime\nLocation\n\n\n\n\nLectures\nTue & Thu\n10:00 am - 11:00 am\nSMAST-East 102\n\n\nLabs\nWed\n10:00 am - 11:30 pm\nSMAST-East 102",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-description",
    "href": "course-syllabus.html#course-description",
    "title": "Syllabus",
    "section": "Course Description",
    "text": "Course Description\nStatistical analysis of ecological data. This course provides guided learning in advanced statistical analysis, as applied to ecological research and other fields of marine science. Advanced concepts in probability, statistical model building, hypothesis testing, inference, estimation and prediction, including analyses of example data sets and problems. Students will be required to learn and present topics to the class that are relevant to their graduate research and complete a class project. Course materials will be presented using the statistical programming language R; a computer lab focused on introductory and intermediate R programming will be held for the first half of the semester.\n\nCourse Objectives\n\nSelf-learning in advanced quantitative concepts and methods\nFamiliarity with advanced statistical methods\nExperience communicating advanced quantitative topics\nExperience in statistical programming\n\n\n\n\nWorld events, including COVID-19, and other shared and non-visible topics, continue to create uncertainty. These and other topics (both shared and non visible) will at times create stress within our learning community. I want you to succeed in this course and will do what I can to help support your being able to meet our learning objectives. Please communicate with me if there are additional things I can do to help support you.\n\n\nCode of Conduct\nThis class follows the Fay Lab Code of Conduct, which applies to all class spaces, including classrooms, Zoom calls, class GoogleDocs or other materials, and student hours. You can also read my lab’s lab culture and philosophy, which underpins my approach to teaching and collaboration.\n\n\nCommunication\nAll lecture notes, assignment instructions, an up-to-date schedule, and other course materials may be found on this course website.\nI will regularly send course announcements via email. Make sure to check one or the other of these regularly. If an announcement is sent Monday through Thursday, I will assume that you have read the announcement by the next day. If an announcement is sent on a Friday or over the weekend, I will assume that you have read it by Monday.\n\n\nWhere to get help\n\nIf you have a question during lecture or lab, feel free to ask it! There are likely other students with the same question, so by asking you will create a learning opportunity for everyone.\nWe are here to help you be successful in the course. You are encouraged to attend student hours (sometimes called ‘office hours’) to ask questions about the course content and assignments. Many questions are most effectively answered as you discuss them with others, so these times are a valuable resource. Please use them!\nIf you email me (Gavin), please include “MAR 536” in the subject line. Barring extenuating circumstances, I will respond to MAR 536 emails within 48 hours Monday - Friday. Response time may be slower for emails sent Friday evening - Sunday.\n\n\n\nPrerequisites\nStudents should have taken an introductory graduate statistics course (e.g. MAR 535 Biological Statistics I or equivalent), or seek permission from the instructor.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#evaluation-procedures",
    "href": "course-syllabus.html#evaluation-procedures",
    "title": "Syllabus",
    "section": "Evaluation procedures",
    "text": "Evaluation procedures\n\nAn advanced statistical analysis of data relevant to the student’s graduate research topic, including a detailed report and oral presentation (60% of course grade). Elements include:\n\n\n\n1-2 sentence project topic idea due Jan 30 (1% of course grade).\nBrief (1-2 page) description of the topic including a statement of the problem, proposed statistical method, and supplemental reference(s) is due Feb 13 (4% of course grade).\nData exploration report containing data summaries and visualizations of the dataset to be used in the project, including observations of implications of data structure for the analyses to be conducted, and brief in-class update. Due Feb 27. (10% of course grade).\nIn-class verbal update (3 minute presentation) on project progress on Apr 1. (5% of course grade).\nStudent project presentation with chapter assignment or supplemental reading on the statistical method used in the project. A 10-minute lecture on the method, and demonstration of the method using the project dataset. Presentations will be graded based on the instructors’ evaluation of accuracy, clarity, and comprehensiveness. Feedback from other students will also be considered in evaluation of presentations (20% of course grade).\nProject report (due May 02). A written description of the methods and results of the project in the form of a draft scientific manuscript (Introduction, Methods, Results, Discussion). (20% of course grade).\n\n\n\nMid-term examination on statistical concepts and literacy (20% of course grade). Take home exam. Exam distributed Mar 4. Due Mar 20.\nComputer lab exercises (20% of course grade). Completion of short laboratory exercises using R. Lab exercises are due before lab session the following week. Individual weekly exercises will not be assigned numeric grades, assessment of the R lab component will take the form of i) completion of the exercises and ii) two self-reflection statements in the middle and at the end of the course asking students to assess their learning in R and ability to use these tools to address data-related and scientific questions. Additionally, the instructor and teaching assistant will provide general and specific feedback on R lab components and coding.\nExtra credit: An additional 1% towards the total course grade can be obtained by students contributing to the #TidyTuesday, a public weekly data project in R from the R4DS online learning community (https://github.com/rfordatascience/tidytuesday). To obtain course credit, students should send Gavin Fay an email containing a visualization of analysis of one Tidy Tuesday data set, and a link to a repository containing code that reproduces the analysis and visualization (sharing of work with the #RStats community via Slack or other social media is encouraged but not required for course credit).",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#class-policies",
    "href": "course-syllabus.html#class-policies",
    "title": "Syllabus",
    "section": "Class Policies",
    "text": "Class Policies\n\nGrades will be reduced for all unexcused late submissions of assignments, with a 10% reduction for each day after the deadline. Requests for extended deadlines will be considered up to one day before the deadline. Unexcused assignments submitted later than three days after the deadline will not be graded.\nFailure to complete any of the requirements for evaluation will result in a score of zero for missing components. At the student’s request, and no more than 48 hours after the final exam or class, an incomplete grade may be given only in exceptional circumstances at the discretion of the instructor. The student must be passing the course at the time of the request or be sufficiently close to passing that the instructor believes that upon completion of the work, the student will pass the course. If the work is not completed within one year of recording the I, the grade will become an F(I).\nThis 4-credit class involves four hours per week of in-class work and an average of eight hours per week of out-of-class work is expected.\nUniversity policy on academic dishonesty, including plagiarism, applies (see: https://www.umassd.edu/studentaffairs/studenthandbook/academic-regulations-and-procedures/).\nAssignment submissions should be made via a myCourses website. Students are responsible for all official correspondence sent to their umassd.edu e-mail address.\nThis course, including student participation, will be recorded on video by the instructor and will be available to students in the course for viewing remotely and after each session. As the Zoom recordings will contain student work, please do not share videos beyond the course attendees without the explicit permission of the instructor. Other course materials will be publicly available online.\nIf you have read this far, please use google search to find a picture or gif of an animal that best reflects your opinion of statistics, and send it to Gavin Fay attached to an email with the subject line “Here is a statistical opinion”, worth an extra 5 points on the midterm.\nAvailable academic support services are available at: www.umassd.edu/nfi/teaching-and-advising/course-syllabus/sample-disability-statement\nSMAST Code of Conduct and Diversity statement: https://www.umassd.edu/media/umassdartmouth/smast/lab-pdf-files/SMAST-Code-of-Conduct-and-Diversity-Statement.pdf\n\nA full description of Academic Policies associated with this and other UMass Dartmouth courses can be found at: https://www.umassd.edu/provost/resourcesforfaculty/syllabus-language/",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#computing",
    "href": "course-syllabus.html#computing",
    "title": "Syllabus",
    "section": "Computing",
    "text": "Computing\n\nRequired Hardware:\nClass will take place in a SMAST-East classroom; individual laptop computers will be required to complete in-class and in-lab exercises and coursework. Pair programming approaches are encouraged during class sessions. Please contact the instructor if the computing requirement creates difficulty for your participation in the course; SMAST laptops may be able to be made available for in-class use. The university library also has laptops available for students to borrow.\n\n\nRequired Software:\nR (free download at http://r-project.org, students should also install Rstudio, an integrated development environment for R, free download at https://posit.co/download/rstudio-desktop/). I will walk through installation and use of this software during our first lab session. It is recommended to update your version of both R and RStudio for the course. Web browser access to R sessions will also be provided through a cloud-based instance of RStudio via posit.cloud.\n\n\nCourse Materials:\nMaterials will be distributed through a dedicated course website and RStudio Cloud project. All lectures and labs will be recorded using Zoom.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#remote-participation",
    "href": "course-syllabus.html#remote-participation",
    "title": "Syllabus",
    "section": "Remote participation",
    "text": "Remote participation\nTo facilitate off-campus attendance and engagement in the course, as well as ensuring the course is available and accessible, class sessions will be broadcast via Zoom in addition to in-person meetings.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#textbooks",
    "href": "course-syllabus.html#textbooks",
    "title": "Syllabus",
    "section": "Textbooks",
    "text": "Textbooks\nI will draw from several sources. The primary text we will use is:\nZuur, A.F., Ieno, E.N. and Smith, G.M. (2007). Analysing Ecological Data. Springer. 700p. Series: Statistics for Biology and Health. (available free ebook available through the UMass Amherst library system, or hard copy ~$100 online).\nSupport website for book, including data & R code\n\nSupplementary Texts\n(all either available online or GF will provide access to appropriate sections):\nBolker, B.M. 2008. Ecological Models and Data in R. Princeton University Press. (http://ms.mcmaster.ca/~bolker/emdbook/index.html, http://emdbolker.wikidot.com/)\nIsmay, C. and Kim, A.Y., 2025. Statistical Inference via Data Science: A ModernDive into R and the Tidyverse. CRC Press. https://moderndive.com/v2/\nJames, G., Wittem, D., Hastie, T., and Tibshirani, R. (2023). An Introduction to Statistical Learning, with Applications in R. 2nd edition. Springer. (ebook freely available online at https://www.statlearning.com/)\nMcElreath, R., 2018. Statistical rethinking: A Bayesian course with examples in R and Stan. Chapman and Hall/CRC. (https://xcelab.net/rm/))\nWickham, H., Cetinkaya-Rundel, M., and Grolemund, G., 2023. R for data science. O’Reilly. (https://r4ds.hadley.nz/)",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#title-ix-statement",
    "href": "course-syllabus.html#title-ix-statement",
    "title": "Syllabus",
    "section": "Title IX statement",
    "text": "Title IX statement\nThe purpose of a university is to disseminate information, as well as to explore a universe of ideas, to encourage diverse perspectives and robust expression, and to foster the development of critical and analytical thinking skills. In many classes, including this one, students and faculty examine and analyze challenging and controversial topics.\nIf a topic covered in this class triggers post-traumatic stress or other emotional distress, please discuss the matter with the professor or seek out confidential resources available from the Counseling Center, http://www.umassd.edu/counselling/, 508-999-8648 or -8650, or the Victim Advocate in the Center for Women, Gender and Sexuality, http://www.umassd.edu/sexualviolence/, 508-910-4584. In an emergency contact the Department of Public Safety at 508-999-9191 24 hrs./day.\nUMass Dartmouth, following national guidance from the Office of Civil Rights, requires that faculty follow UMass Dartmouth policy as a “mandated reporter” of any disclosure of sexual harassment, abuse, and/or violence shared with the faculty member in person and/or via email. These disclosures include but are not limited to reports of sexual assault, relational abuse, relational/domestic violence, and stalking. While faculty are often able to help students locate appropriate channels of assistance on campus, disclosure by the student to the faculty member requires that the faculty member inform the University’s Title IX Coordinator in the Office of Diversity, Equity and Inclusion at 508-999-8008 to help ensure that the student’s safety and welfare is being addressed, even if the student requests that the disclosure not be shared.\nFor confidential counseling support and assistance, please go to http://www.umassd.edu/sexualviolence/",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#important-dates",
    "href": "course-syllabus.html#important-dates",
    "title": "Syllabus",
    "section": "Important dates",
    "text": "Important dates\n\nJanuary 21: Classes begin\nJanuary 28: Drop/add ends\nMarch 10-14: Spring break, no classes are held\nApril 11: Last day to withdraw from a class\n\nClick here for the full UMass Dartmouth academic calendar.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "class-data.html",
    "href": "class-data.html",
    "title": "Course Data Sets",
    "section": "",
    "text": "A folder with all our class data sets from labs and lecture examples can be found here.",
    "crumbs": [
      "Course Data Sets"
    ]
  },
  {
    "objectID": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "href": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "title": "Attribution-ShareAlike 4.0 International",
    "section": "Creative Commons Attribution-ShareAlike 4.0 International Public License",
    "text": "Creative Commons Attribution-ShareAlike 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\n\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nBY-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses, approved by Creative Commons as essentially the equivalent of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicense Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\n\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\nA. reproduce and Share the Licensed Material, in whole or in part; and\nB. produce, reproduce, and Share Adapted Material.\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material.\nDownstream recipients.\nA. Offer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nB. Additional offer from the Licensor – Adapted Material. Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter’s License You apply.\nC. No downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\nA. retain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nB. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nC. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\n\nShareAlike.\n\nIn addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply.\n\nThe Adapter’s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-SA Compatible License.\nYou must include the text of, or the URI or hyperlink to, the Adapter’s License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material.\nYou may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter’s License You apply.\n\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\n\n\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUnless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You.\nTo the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\n\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\n\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\n\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org."
  },
  {
    "objectID": "course-overview.html",
    "href": "course-overview.html",
    "title": "MAR 536: Biological Statistics II",
    "section": "",
    "text": "Statistical analysis of ecological data. This course provides guided learning in advanced statistical analysis, as applied to ecological research and other fields of marine science. Advanced concepts in probability, statistical model building, hypothesis testing, inference, estimation and prediction, including analyses of example data sets and problems. Students will be required to learn and present topics to the class that are relevant to their graduate research and complete a class project. Course materials will be presented using the statistical programming language R; a computer lab focused on introductory and intermediate R programming will be held for the first half of the semester.",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "project-description.html",
    "href": "project-description.html",
    "title": "Project description",
    "section": "",
    "text": "Students complete a term project as part of the course. Projects will constitute an advanced statistical analysis of data relevant to the student’s graduate research topic, including a detailed report and oral presentation. The project is worth 60% of the course grade.\nStudents are encouraged to discuss their project ideas with Gavin to identify scope. Note that the project does not have to be related to your graduate research, but many students in previous semesters have found that this is beneficial in developing the basis for their thesis (or a particular chapter). Gavin also has a list of potential student project ideas. Regardless, try to view the project as an analysis that is potentially publishable. Previous published journal articles that were based on MAR 536 student projects include Winton et al. (2018), Silva et al. (2019), Hart & Fay (2020), Silva et al. (2020), Velikaneye & Kozak (2024), Duarte & Cadrin (2024).\nDeliverables include:\n\n1-2 sentence project topic idea due Jan 30 (1% of course grade).\nBrief (1-2 page) project description including a statement of the problem, proposed statistical method, and supplemental reference(s) is due Feb 13 (4% of course grade).\nData exploration report containing data summaries and visualizations of the dataset to be used in the project, including observations of implications of data structure for the analyses to be conducted, and a brief in-class update. Due Feb 27. (10% of course grade).\nIn-class verbal update (3 minute presentation) on project progress. Apr 1. (5% of course grade).\nStudent project presentation with chapter assignment or supplemental reading on the statistical method used in the project. A 10-minute lecture on the method, and demonstration of the method using the project data set. Presentations will be graded based on the instructors’ evaluation of accuracy, clarity, and comprehensiveness. Feedback from other students will also be considered in evaluation of presentations (20% of course grade).\nProject report (due May 02). A written description of the methods and results of the project in the form of a draft scientific manuscript (Introduction, Methods, Results, Discussion). (20% of course grade).\n\nProject report expectations\nA rubric for the project report can be found here.\nProject presentation scheduling\nGo here to complete the survey regarding availability for student presentation time-slots.\nData set ideas\nIf you are stuck for a dataset, then there are many open data sets in the ecological and environmental sciences that are published online. Some of these may provide some inspiration for an analysis.\n\nNOAA Data Explorer\nDOI Data Explorer\nEcological Data Wiki\nDataDryad\nZenodo\nLibguide on ecological datasets from Central Michigan University Library",
    "crumbs": [
      "Projects",
      "Description"
    ]
  },
  {
    "objectID": "weeks/week-02.html",
    "href": "weeks/week-02.html",
    "title": "Week 2",
    "section": "",
    "text": "📖 Read remaining parts of Chapters 1-4 of Zuur (Tue)\n📖 Read Chapter 5 of Zuur (Thu)"
  },
  {
    "objectID": "weeks/week-02.html#prepare",
    "href": "weeks/week-02.html#prepare",
    "title": "Week 2",
    "section": "",
    "text": "📖 Read remaining parts of Chapters 1-4 of Zuur (Tue)\n📖 Read Chapter 5 of Zuur (Thu)"
  },
  {
    "objectID": "weeks/week-02.html#participate",
    "href": "weeks/week-02.html#participate",
    "title": "Week 2",
    "section": "Participate",
    "text": "Participate\n🖥️ Lecture 3 - Data exploration, checking\n\nPlot description practice (Acknowledgements: S. Stoudt)\n\n⌨️ Lab 2 - Data Visualization (just the exercise)\n\nlake Laengelmavesi fish data\n\n🖥️ Lecture 4 - Regression review"
  },
  {
    "objectID": "weeks/week-02.html#practice",
    "href": "weeks/week-02.html#practice",
    "title": "Week 2",
    "section": "Practice",
    "text": "Practice\nYour project topic ideas are due on Thursday Jan 30.\nLab 2 exercise is due before class on Tuesday Feb 4.\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-04.html",
    "href": "weeks/week-04.html",
    "title": "Week 4",
    "section": "",
    "text": "📖 Read Chapters 6.1 (Tue) & 6.2 (Thu) of Zuur et al. 2007."
  },
  {
    "objectID": "weeks/week-04.html#prepare",
    "href": "weeks/week-04.html#prepare",
    "title": "Week 4",
    "section": "",
    "text": "📖 Read Chapters 6.1 (Tue) & 6.2 (Thu) of Zuur et al. 2007."
  },
  {
    "objectID": "weeks/week-04.html#participate",
    "href": "weeks/week-04.html#participate",
    "title": "Week 4",
    "section": "Participate",
    "text": "Participate\n🖥️ Lecture 6 - Generalized Linear Models\n\nlecture 6b - R code\n\n⌨️ Lab 4 - Data wrangling & model summaries (just the exercise)\n\nlab4-data\n\n🖥️ Lecture 7 - GLMs II (logistic regression)"
  },
  {
    "objectID": "weeks/week-04.html#practice",
    "href": "weeks/week-04.html#practice",
    "title": "Week 4",
    "section": "Practice",
    "text": "Practice\nLab 4 exercise is due before lab on Wednesday Feb 15.\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-06.html",
    "href": "weeks/week-06.html",
    "title": "Week 6",
    "section": "",
    "text": "NO CLASS ON TUESDAY THIS WEEK AS THE UNIVERSITY IS ON A MONDAY SCHEDULE"
  },
  {
    "objectID": "weeks/week-06.html#prepare",
    "href": "weeks/week-06.html#prepare",
    "title": "Week 6",
    "section": "Prepare",
    "text": "Prepare\n📖 Thu: Read Chapter 7 Zuur et al. 2007."
  },
  {
    "objectID": "weeks/week-06.html#participate",
    "href": "weeks/week-06.html#participate",
    "title": "Week 6",
    "section": "Participate",
    "text": "Participate\n⌨️ Lab 6 - Iteration (just the exercise)\n\nData sets for the lab can be found in the class-data folder.\n\n🖥️ Lecture 10 - Generalized Additive Models"
  },
  {
    "objectID": "weeks/week-06.html#practice",
    "href": "weeks/week-06.html#practice",
    "title": "Week 6",
    "section": "Practice",
    "text": "Practice\nLab 6 exercise is due before lab on Wednesday Mar 01.\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-08.html",
    "href": "weeks/week-08.html",
    "title": "Week 8",
    "section": "",
    "text": "Take-home MIDTERM due this week (3/16)\nMid-semester self-reflection survey on R lab component."
  },
  {
    "objectID": "weeks/week-08.html#prepare",
    "href": "weeks/week-08.html#prepare",
    "title": "Week 8",
    "section": "Prepare",
    "text": "Prepare\n📖 Tue + Thu: Read Chapter 8 Zuur et al. 2007."
  },
  {
    "objectID": "weeks/week-08.html#participate",
    "href": "weeks/week-08.html#participate",
    "title": "Week 8",
    "section": "Participate",
    "text": "Participate\n🖥️ Lecture 13 - Linear mixed effects models\n\nRmd with examples from the lecture\n\n⌨️ Lab 7 - Functions (just the exercises)\n\nData sets for the lab can be found in the class-data folder.\n\n🖥️ Lecture 14 - more mixed effects\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-10.html",
    "href": "weeks/week-10.html",
    "title": "Week 10",
    "section": "",
    "text": "Gavin is still recovering from illness and so there is a slight change in plans. Lecture materials are via recordings, class sessions on Tuesday and Thursday will be question/answer sessions and live walk-through of examples from the lectures. Wednesday’s lab will be on using spatial data in R."
  },
  {
    "objectID": "weeks/week-10.html#prepare",
    "href": "weeks/week-10.html#prepare",
    "title": "Week 10",
    "section": "Prepare",
    "text": "Prepare\n📖 Tue:\n\nReading: Chapter 14 of Zuur et al. 2007\nLecture 16 - Linear Discriminant Analysis (Recording)\n\n(lecture starts at 15m30s)\nslide deck from recorded lecture\n\n\n📖 Thu:\n\nReading: Chapter 9 of Zuur et al. 2007\nLecture 17 - Trees (Classification/Regression) (Recording)\n\nslide deck from recorded lecture"
  },
  {
    "objectID": "weeks/week-10.html#participate",
    "href": "weeks/week-10.html#participate",
    "title": "Week 10",
    "section": "Participate",
    "text": "Participate\n🖥️ Linear Discriminant Analysis\n\nRmd with examples from the lecture\nData sets can be found in the class-data folder.\n\n🖥️ Lab 8 - working with spatial data in R\n\nslide deck for Lab 8 part 1\n\n.qmd (code)\n\nslide deck for Lab 8 part 2\n\n.Rmd (code)\n\njust the lab 8 exercises\n\n🖥️ Trees\n\nRmd with examples from the lecture\n\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MAR 536: Biological Statistics II",
    "section": "",
    "text": "Click here to download a PDF copy of the syllabus.\n(last updated 2025-01-17)",
    "crumbs": [
      "Course information",
      "Schedule"
    ]
  },
  {
    "objectID": "index.html#course-syllabus",
    "href": "index.html#course-syllabus",
    "title": "MAR 536: Biological Statistics II",
    "section": "",
    "text": "Click here to download a PDF copy of the syllabus.\n(last updated 2025-01-17)",
    "crumbs": [
      "Course information",
      "Schedule"
    ]
  },
  {
    "objectID": "index.html#course-schedule",
    "href": "index.html#course-schedule",
    "title": "MAR 536: Biological Statistics II",
    "section": "Course Schedule",
    "text": "Course Schedule\nThis page will contain an outline of the topics, content, and assignments for the semester. Note that this schedule will be updated as the semester progresses.\n[notes on changes to schedule will appear below but noted here as well]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek\n\n\n\n\nDate\n\n\n\n\nTopic\n\n\n\n\nPrepare\n\n\n\n\nSlides\n\n\n\n\nAE\n\n\n\n\nLab\n\n\n\n\nHW\n\n\n\n\nExam\n\n\n\n\nProject\n\n\n\n\n\n\n\n\n1\n\n\n\n\nTue, Jan 21\n\n\n\n\nIntroduction\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWed, Jan 22\n\n\n\n\nLab 1 -Intro to R/RStudio\n\n\n\n\n\n\n\n\n📋\n\n\n\n\n💻\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThu, Jan 23\n\n\n\n\nProbability review\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\nTue, Jan 28\n\n\n\n\nData exploration, checking\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTue, Jan 28\n\n\n\n\nDue: Lab 1\n\n\n\n\n\n\n\n\n\n\n\n\n✍️\n\n\n\n\n\n\n\n\n\n\n\n\nWed, Jan 29\n\n\n\n\nLab 2 - Visualizing data\n\n\n\n\n\n\n\n\n📋\n\n\n\n\n💻\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThu, Jan 30\n\n\n\n\nLinear regression review\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThu, Jan 30\n\n\n\n\nDue: Project topic\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n📂\n\n\n\n\n\n\n3\n\n\n\n\nTue, Feb 04\n\n\n\n\nLikelihood\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTue, Feb 04\n\n\n\n\nDue: Lab 2\n\n\n\n\n\n\n\n\n\n\n\n\n✍️\n\n\n\n\n\n\n\n\n\n\n\n\nWed,\n\n\nFeb 05\n\n\n\n\nLab 3 - Probability & linear modeling\n\n\n\n\n\n\n\n\n📋\n\n\n\n\n💻\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThu, Feb 06\n\n\n\n\nGeneralized Linear Models\n\n\n\n\n📖\n\n\n\n\n🖥️ 💻\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\n\n\nTue, Feb 11\n\n\n\n\nGLMs II (logistic regression)\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTue, Feb 11\n\n\n\n\nDue: Lab 3\n\n\n\n\n\n\n\n\n\n\n\n\n✍️\n\n\n\n\n\n\n\n\n\n\n\n\nWed. Feb 12\n\n\n\n\nLab 4 - Data wrangling & model summaries\n\n\n\n\n\n\n\n\n📋\n\n\n\n\n💻\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThu, Feb 13\n\n\n\n\nResampling methods, cross-validation\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThu, Feb 13\n\n\n\n\nDue: Project description\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n📂\n\n\n\n\n\n\n5\n\n\n\n\nTue, Feb 18\n\n\n\n\nDue: Lab 4\n\n\n\n\n\n\n\n\n\n\n\n\n✍️\n\n\n\n\n\n\n\n\n\n\n\n\nWed,\n\n\nFeb 19\n\n\n\n\nLab 5 - Simulation\n\n\n\n\n\n\n\n\n📋\n\n\n\n\n💻\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThu, Feb 20\n\n\n\n\nNon-linear models, splines\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6\n\n\n\n\nTue, Feb 25\n\n\n\n\nDue: Lab 4\n\n\n\n\n\n\n\n\n\n\n\n\n✍️\n\n\n\n\n\n\n\n\n\n\n\n\nTue, Feb 25\n\n\n\n\nGAMs\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWed, Feb 26\n\n\n\n\nLab 6 - Iteration\n\n\n\n\n\n\n\n\n📋\n\n\n\n\n💻\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThu, Feb 27\n\n\n\n\nProject Updates\n\n\n\n\n📖\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n📂\n\n\n\n\n\n\n\n\nThu, Feb 27\n\n\n\n\nDue: Data Exploration Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n📂\n\n\n\n\n\n\n7\n\n\n\n\nTue, Mar 04\n\n\n\n\nMatrix Algebra review\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTue, Mar 04\n\n\n\n\nMidterm distributed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n✅\n\n\n\n\n\n\n\n\n\n\nTue, Mar 04\n\n\n\n\nDue: Lab 6\n\n\n\n\n\n\n\n\n\n\n\n\n✍️\n\n\n\n\n\n\n\n\n\n\n\n\nWed, Mar 05\n\n\n\n\nLab 7 - Functions\n\n\n\n\n\n\n\n\n📋\n\n\n\n\n💻\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThu, Mar 06\n\n\n\n\nPrincipal Components Analysis\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSPRING\n\n\n\n\nBREAK\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8\n\n\n\n\nTue, Mar 18\n\n\n\n\nLinear mixed effects model\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWed, Mar 19\n\n\n\n\nLab 8 - Reporting & Quarto\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThu, Mar 20\n\n\n\n\nMore mixed effects\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThu, Mar 20\n\n\n\n\nDue: Midterm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n✅\n\n\n\n\n\n\n\n\n9\n\n\n\n\nTue, Mar 25\n\n\n\n\nZero-inflated models\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWed, Mar 26\n\n\n\n\nUMASS IMS SYMPOSIUM\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThu, Mar 27\n\n\n\n\nSpatial GLMMs\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10\n\n\n\n\nTue, Apr 01\n\n\n\n\nProject updates\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n📂\n\n\n\n\n\n\n\n\nTue, Apr 01\n\n\n\n\nDue: Lab 8\n\n\n\n\n\n\n\n\n\n\n\n\n✍️\n\n\n\n\n\n\n\n\n\n\n\n\nWed, Apr 02\n\n\n\n\nLab 9 - Spatial data\n\n\n\n\n\n\n\n\n📋\n\n\n\n\n💻\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThu, Apr 03\n\n\n\n\nGAMs application - guest lecture\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n11\n\n\n\n\nTue, Apr 08\n\n\n\n\nClassification / Linear Discriminant Analysis\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTue, Apr 08\n\n\n\n\nDue: Lab 9\n\n\n\n\n\n\n\n\n\n\n\n\n✍️\n\n\n\n\n\n\n\n\n\n\n\n\nWed, Apr 09\n\n\n\n\nLab - project consult\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n📂\n\n\n\n\n\n\n\n\nThu, Apr 10\n\n\n\n\nTrees\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n12\n\n\n\n\nTue, Apr 15\n\n\n\n\nOrdination methods\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWed, Apr 16\n\n\n\n\nLab - project consult\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n📂\n\n\n\n\n\n\n\n\nThu, Apr 17\n\n\n\n\nCluster analysis\n\n\n\n\n📖\n\n\n\n\n🖥️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n13\n\n\n\n\nTue, Apr 22\n\n\n\n\nStudent presentations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n📂\n\n\n\n\n\n\n\n\nThu, Apr 24\n\n\n\n\nStudent presentations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n📂\n\n\n\n\n\n\n14\n\n\n\n\nTue, Apr 29\n\n\n\n\nStudent presentations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n📂\n\n\n\n\n\n\n\n\nWed, Apr 30\n\n\n\n\nCourse Review\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFri, May 02\n\n\n\n\nDue: Project Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n📂",
    "crumbs": [
      "Course information",
      "Schedule"
    ]
  },
  {
    "objectID": "labs/lab-08a.html#today-advanced-plotting",
    "href": "labs/lab-08a.html#today-advanced-plotting",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "Today: Advanced plotting",
    "text": "Today: Advanced plotting\n\nPlot review\nLayouts & multi-panel plots\nMapping\nSpatial analyses"
  },
  {
    "objectID": "labs/lab-08a.html#things-required-for-ggplots",
    "href": "labs/lab-08a.html#things-required-for-ggplots",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "3 Things required for ggplots:",
    "text": "3 Things required for ggplots:\n\nCall to ggplot()\nAesthetics using aes()\nGeometries e.g. geom_point(), geom_bar(), geom_line(), ect."
  },
  {
    "objectID": "labs/lab-08a.html#multi-panel-plot-options",
    "href": "labs/lab-08a.html#multi-panel-plot-options",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "Multi-panel plot options",
    "text": "Multi-panel plot options\nggplot\n\nfacet_grid()\ngrid and gridExtra packages\npatchwork package\npar()\nlattice package other examples\nggridges\ncowplot"
  },
  {
    "objectID": "labs/lab-08a.html#facet_grid-example-laengelmavesi-data-lab-2",
    "href": "labs/lab-08a.html#facet_grid-example-laengelmavesi-data-lab-2",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "facet_grid() example: Laengelmavesi data (lab 2)",
    "text": "facet_grid() example: Laengelmavesi data (lab 2)"
  },
  {
    "objectID": "labs/lab-08a.html#facet_grid",
    "href": "labs/lab-08a.html#facet_grid",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "facet_grid()",
    "text": "facet_grid()\n\nggplot(data, aes(y=length, col=species)) +\n  geom_boxplot() +\n  facet_grid(cols = vars(species))"
  },
  {
    "objectID": "labs/lab-08a.html#facet_grid-1",
    "href": "labs/lab-08a.html#facet_grid-1",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "facet_grid()",
    "text": "facet_grid()\n\nggplot(data, aes(length, col=species)) +\n  geom_histogram(aes(fill=species)) +\n  facet_grid(rows = vars(species))"
  },
  {
    "objectID": "labs/lab-08a.html#grid-and-gridextra-examples",
    "href": "labs/lab-08a.html#grid-and-gridextra-examples",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "grid and gridExtra examples",
    "text": "grid and gridExtra examples\nThe gridExtra package arranges “grobs”\ngrob = graphical object\ngridExtra functions can also arrange gtables and ggplot objects\n\nlibrary(gridExtra)\nlibrary(grid)"
  },
  {
    "objectID": "labs/lab-08a.html#some-gapminder-example-plots-to-work-with",
    "href": "labs/lab-08a.html#some-gapminder-example-plots-to-work-with",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "Some gapminder example plots to work with:",
    "text": "Some gapminder example plots to work with:\n\nlibrary(gapminder)\nlibrary(gghighlight)\n\nplot1 &lt;- filter(gapminder, year == 2007) |&gt;\n  ggplot() + \n  aes(x = lifeExp) + \n  geom_histogram(bins = 10, col = \"white\")\nplot1"
  },
  {
    "objectID": "labs/lab-08a.html#continents-with-low-life-expectancy",
    "href": "labs/lab-08a.html#continents-with-low-life-expectancy",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "continents with low life expectancy",
    "text": "continents with low life expectancy\n\nplot2 &lt;- ggplot(gapminder) +\n  aes(x=year, \n      y=lifeExp, \n      group=country, \n      color=country) +\n  geom_line() +\n  gghighlight(min(lifeExp) &lt; 30) +\n  facet_wrap(~continent)+\n  theme_minimal() +\n  theme(legend.position = \"none\")\nplot2"
  },
  {
    "objectID": "labs/lab-08a.html#distribution-of-life-expectancy-over-years-for-two-countries",
    "href": "labs/lab-08a.html#distribution-of-life-expectancy-over-years-for-two-countries",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "distribution of life expectancy over years for two countries",
    "text": "distribution of life expectancy over years for two countries\n\nplot3 &lt;- gapminder |&gt;\n  filter(country %in% c(\"Peru\",\"Iceland\")) |&gt;\nggplot() +\n  aes(x=lifeExp, color = country) +\n  geom_density()\nplot3"
  },
  {
    "objectID": "labs/lab-08a.html#grid-and-gridextra-examples-continued",
    "href": "labs/lab-08a.html#grid-and-gridextra-examples-continued",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "grid and gridExtra examples continued…",
    "text": "grid and gridExtra examples continued…\nPassing plots to grid.arrange() and specifying either the number of rows or columns gives a simple layout.\n\ngrid.arrange(plot1, plot2, plot3, nrow = 1)"
  },
  {
    "objectID": "labs/lab-08a.html#grid-and-gridextra-examples-continued-1",
    "href": "labs/lab-08a.html#grid-and-gridextra-examples-continued-1",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "grid and gridExtra examples continued…",
    "text": "grid and gridExtra examples continued…\nGrobs may also be placed in a list and arranged using customized formats using the argument layout_matrix.\n\n# Create a new grob\nnewgrob &lt;- textGrob(\"This is a \\n text grob\")\ngroblist &lt;- list(plot1, plot2, plot3, newgrob)\n# Create a custom layout\ngrid.arrange(grobs = groblist,\n             widths = c(2,2,4,1),\n             layout_matrix = rbind(c(2,2,1,1),\n                                   c(2,2,3,4)))"
  },
  {
    "objectID": "labs/lab-08a.html#patchwork",
    "href": "labs/lab-08a.html#patchwork",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "Patchwork",
    "text": "Patchwork\nThe patchwork package provides a shorthand method to plot multiple ggplot objects together\n\nlibrary(patchwork)\nplot1 + plot2 + plot3"
  },
  {
    "objectID": "labs/lab-08a.html#patchwork-example-continued",
    "href": "labs/lab-08a.html#patchwork-example-continued",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "Patchwork example continued…",
    "text": "Patchwork example continued…\nTo structure plot layouts further use the plot_layout() function\n\nplot1 + {plot2 + plot3 + plot_layout(ncol=2, widths = c(3,1))} + plot_layout(ncol = 1)\n\n\nNote that the {} indicate a nested plot"
  },
  {
    "objectID": "labs/lab-08a.html#patchwork-example-continued-1",
    "href": "labs/lab-08a.html#patchwork-example-continued-1",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "Patchwork example continued…",
    "text": "Patchwork example continued…\nThis package also uses | to indicate plots adjacent to one another and / to indicate vertical stacking\n\n(plot1 | plot3) / plot2\n\n\nFor more examples see: https://gotellilab.github.io/GotelliLabMeetingHacks/NickGotelli/ggplotPatchwork.html"
  },
  {
    "objectID": "labs/lab-08a.html#exercise-1",
    "href": "labs/lab-08a.html#exercise-1",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "Exercise 1",
    "text": "Exercise 1\n\nUse patchwork or grid+gridExtra to create a 4-panel plot grid with the following characteristics:\n\n\nspace for 4 ggplots\n2 columns & 3 rows\nthe first column should be twice as wide as the second column\nthe first plot should appear in the entire first column\nplots 2-4 should fill the second column"
  },
  {
    "objectID": "labs/lab-08a.html#mapping",
    "href": "labs/lab-08a.html#mapping",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "Mapping",
    "text": "Mapping\nThere are n (where n is large) ways to produce maps using R.\nMany of these are beyond this course and delve into the dark abstractedly projected rabbithole that is cartography.\nHowever, we can produce very nice looking maps in R quite easily.\n(because learning GIS can be hard)\nUsing {ggplot2} and the {sf} package.\nWe can also use {sf} to do lots of spatial data operations & analyses, all within R."
  },
  {
    "objectID": "labs/lab-08a.html#country-coastlines",
    "href": "labs/lab-08a.html#country-coastlines",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "Country coastlines",
    "text": "Country coastlines\nThe package {rnaturalearth} provides a map of countries of the entire world.\n\nlibrary(\"rnaturalearth\")\nlibrary(\"rnaturalearthdata\")\n#library(\"rnaturalearthhires\") # for scale = large\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\nclass(world)\n## [1] \"sf\"         \"data.frame\""
  },
  {
    "objectID": "labs/lab-08a.html#simple-map",
    "href": "labs/lab-08a.html#simple-map",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "simple map",
    "text": "simple map\n\nggplot(data = world) +\n    geom_sf()"
  },
  {
    "objectID": "labs/lab-08a.html#map-color",
    "href": "labs/lab-08a.html#map-color",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "map color",
    "text": "map color\n\nggplot(data = world) + \n    geom_sf(color = \"black\", fill = \"lightgreen\")"
  },
  {
    "objectID": "labs/lab-08a.html#chloropleth-maps",
    "href": "labs/lab-08a.html#chloropleth-maps",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "chloropleth maps",
    "text": "chloropleth maps\nplotting a data variable with our geometries\n\nggplot(data = world) +\n    geom_sf(aes(fill = pop_est)) +\n    scale_fill_viridis_c(option = \"plasma\", trans = \"sqrt\")"
  },
  {
    "objectID": "labs/lab-08a.html#projection-and-extent",
    "href": "labs/lab-08a.html#projection-and-extent",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "Projection and extent",
    "text": "Projection and extent\ncoord_sf() deals with the coordinate system Used to change the map projections, and the extent. e.g.\n\nggplot(data = world) +\n    geom_sf() +\n    coord_sf(xlim = c(-102.15, -74.12), ylim = c(7.65, 33.97), expand = FALSE)"
  },
  {
    "objectID": "labs/lab-08a.html#census-data-example",
    "href": "labs/lab-08a.html#census-data-example",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "census data example",
    "text": "census data example\n\nlibrary(tidycensus)\n#options(tigris_use_cache = TRUE)\n\nage_data &lt;- get_acs(\n  geography = \"tract\",\n  variables = \"B19013_001\", #\"B01002_001\",\n  state = \"MA\",\n  geometry = TRUE\n)\n## \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |=======                                                               |  11%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |=================                                                     |  25%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |=======================                                               |  32%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |==========================================                            |  59%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |======================================================================| 100%\nggplot(age_data, aes(fill = estimate)) + \n  geom_sf(color = NA) + \n  theme_void() + \n  scale_fill_viridis_c(option = \"magma\") + \n  labs(title = \"Massachusetts median income\",\n       subtitle = \"2017-2021 ACS\",\n       fill = \"Estimate\")"
  },
  {
    "objectID": "labs/lab-08a.html#looking-at-the-sf-object",
    "href": "labs/lab-08a.html#looking-at-the-sf-object",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "looking at the sf object",
    "text": "looking at the sf object\n\nage_data\n## Simple feature collection with 1620 features and 5 fields (with 7 geometries empty)\n## Geometry type: MULTIPOLYGON\n## Dimension:     XY\n## Bounding box:  xmin: -73.50814 ymin: 41.23796 xmax: -69.92839 ymax: 42.88659\n## Geodetic CRS:  NAD83\n## First 10 features:\n##          GEOID                                                  NAME   variable\n## 1  25001011300    Census Tract 113; Barnstable County; Massachusetts B19013_001\n## 2  25001012601 Census Tract 126.01; Barnstable County; Massachusetts B19013_001\n## 3  25001013500    Census Tract 135; Barnstable County; Massachusetts B19013_001\n## 4  25009250100        Census Tract 2501; Essex County; Massachusetts B19013_001\n## 5  25009250500        Census Tract 2505; Essex County; Massachusetts B19013_001\n## 6  25009250900        Census Tract 2509; Essex County; Massachusetts B19013_001\n## 7  25009266200        Census Tract 2662; Essex County; Massachusetts B19013_001\n## 8  25009266300        Census Tract 2663; Essex County; Massachusetts B19013_001\n## 9  25009260100        Census Tract 2601; Essex County; Massachusetts B19013_001\n## 10 25009268100        Census Tract 2681; Essex County; Massachusetts B19013_001\n##    estimate   moe                       geometry\n## 1    108889 12602 MULTIPOLYGON (((-70.24078 4...\n## 2     68143 18196 MULTIPOLYGON (((-70.3366 41...\n## 3    141453 21889 MULTIPOLYGON (((-70.48384 4...\n## 4     32684  9412 MULTIPOLYGON (((-71.16964 4...\n## 5     51317 11369 MULTIPOLYGON (((-71.17166 4...\n## 6     35119  8040 MULTIPOLYGON (((-71.15623 4...\n## 7     90580 20856 MULTIPOLYGON (((-70.97472 4...\n## 8     93450 17993 MULTIPOLYGON (((-70.93725 4...\n## 9     34050 10705 MULTIPOLYGON (((-71.08812 4...\n## 10   211607 39650 MULTIPOLYGON (((-70.94029 4..."
  },
  {
    "objectID": "labs/lab-08a.html#just-for-bristol-county",
    "href": "labs/lab-08a.html#just-for-bristol-county",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "just for Bristol County",
    "text": "just for Bristol County\n\nage_data &lt;- get_acs(\n  geography = \"tract\",\n  variables = \"B19013_001\",  #for median age = \"B01002_001\",\n  state = \"MA\",\n  county = \"Bristol\",\n  geometry = TRUE\n)\n\nggplot(age_data, aes(fill = estimate)) + \n  geom_sf(color = NA) + \n  theme_void() + \n  scale_fill_viridis_c(option = \"magma\") + \n  labs(title = \"Bristol County median income\",\n       subtitle = \"2017-2021 ACS\",\n       fill = \"Estimate\")"
  },
  {
    "objectID": "labs/lab-08a.html#exercise-2",
    "href": "labs/lab-08a.html#exercise-2",
    "title": "MAR 536 Lab 8: plotting spatial data",
    "section": "Exercise 2",
    "text": "Exercise 2\nUse ggplot to create a map of Cape Cod with the following features:\n\nLongitudes should range from \\(-71^{\\circ}\\text{W}\\) to \\(-69^{\\circ}\\text{W}\\)\nLatitudes should range from \\(41.25^{\\circ}\\text{N}\\) to \\(43^{\\circ}\\text{N}\\)\nLabel axes\nColor land\nAdd points indicating the locations of Woods Hole, Chatham, and Provincetown\nBONUS Change the map projection\n\nFor coastline use:\n\nlibrary(\"rnaturalearthhires\") # for scale = large\nworld &lt;- ne_countries(scale = \"large\", returnclass = \"sf\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngavinfay.github.io/mar536-biolstats2-s23"
  },
  {
    "objectID": "labs/lab-02.html#lab-schedule",
    "href": "labs/lab-02.html#lab-schedule",
    "title": "MAR 536: Lab 2",
    "section": "Lab schedule",
    "text": "Lab schedule\n1/18: Introduction to R and R Studio, working with data\n1/25: Intro to Visualization\n2/01: Probability, linear modeling\n2/08: Data wrangling, model summaries\n2/15: Iteration\n2/22: Creating functions, debugging\n3/01: Simulation, Resampling\n3/15: Flex: more modeling (brms, glmmTMB)\n3/29: Spatial data or tidymodeling\nAcknowledgements: Mine Çetinkaya-Rundel, Amanda Hart"
  },
  {
    "objectID": "labs/lab-02.html#today",
    "href": "labs/lab-02.html#today",
    "title": "MAR 536: Lab 2",
    "section": "Today",
    "text": "Today\nDatasets\n\nhills (Review from last week)\nlake Laengelmavesi dataset\ngapminder\nloans\npalmer penguins\n\nTopics\n\nReview, more data structures\nPlotting in R"
  },
  {
    "objectID": "labs/lab-02.html#review-data-types",
    "href": "labs/lab-02.html#review-data-types",
    "title": "MAR 536: Lab 2",
    "section": "Review, data types",
    "text": "Review, data types\n\n&gt; hills$climb ##print a vector\n [1]  650 2500  900  800 3070 2866 7500  800  800  650 2100 2000 2200  500 1500\n[16] 3000 2200  350 1000  600  300 1500 2200  900  600 2000  800  950 1750  500\n[31] 4400  600 5200  850 5000\n&gt; select(hills, climb)\n                 climb\nGreenmantle        650\nCarnethy          2500\nCraig Dunain       900\nBen Rha            800\nBen Lomond        3070\nGoatfell          2866\nBens of Jura      7500\nCairnpapple        800\nScolty             800\nTraprain           650\nLairig Ghru       2100\nDollar            2000\nLomonds           2200\nCairn Table        500\nEildon Two        1500\nCairngorm         3000\nSeven Hills       2200\nKnock Hill         350\nBlack Hill        1000\nCreag Beag         600\nKildcon Hill       300\nMeall Ant-Suidhe  1500\nHalf Ben Nevis    2200\nCow Hill           900\nN Berwick Law      600\nCreag Dubh        2000\nBurnswark          800\nLargo Law          950\nCriffel           1750\nAcmony             500\nBen Nevis         4400\nKnockfarrel        600\nTwo Breweries     5200\nCockleroi          850\nMoffat Chase      5000"
  },
  {
    "objectID": "labs/lab-02.html#review-data-exploration",
    "href": "labs/lab-02.html#review-data-exploration",
    "title": "MAR 536: Lab 2",
    "section": "Review, data exploration",
    "text": "Review, data exploration\n\n&gt; # Short data summaries\n&gt; mean(hills$time)\n[1] 57.87571\n&gt; # Look at format\n&gt; tail(hills) # last 6 rows\n              dist climb    time\nAcmony         5.0   500  20.950\nBen Nevis     10.0  4400  85.583\nKnockfarrel    6.0   600  32.383\nTwo Breweries 18.0  5200 170.250\nCockleroi      4.5   850  28.100\nMoffat Chase  20.0  5000 159.833\n&gt; # General summary good for a quick look at large data sets\n&gt; summary(hills)\n      dist            climb           time       \n Min.   : 2.000   Min.   : 300   Min.   : 15.95  \n 1st Qu.: 4.500   1st Qu.: 725   1st Qu.: 28.00  \n Median : 6.000   Median :1000   Median : 39.75  \n Mean   : 7.529   Mean   :1815   Mean   : 57.88  \n 3rd Qu.: 8.000   3rd Qu.:2200   3rd Qu.: 68.62  \n Max.   :28.000   Max.   :7500   Max.   :204.62"
  },
  {
    "objectID": "labs/lab-02.html#missing-values-na.",
    "href": "labs/lab-02.html#missing-values-na.",
    "title": "MAR 536: Lab 2",
    "section": "Missing values (NA).",
    "text": "Missing values (NA).\n\n&gt; weights &lt;- c(25,34,75,NA,21,32,NA)\n\nMany functions do not handle missing values by default.\n\n&gt; mean(weights)\n[1] NA\n&gt; mean(weights,na.rm=TRUE)\n[1] 37.4\n\nOmit missing values.\n\n&gt; na.omit(weights)\n[1] 25 34 75 21 32\nattr(,\"na.action\")\n[1] 4 7\nattr(,\"class\")\n[1] \"omit\"\n&gt; drop_na(penguins)\n# A tibble: 333 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           36.7          19.3               193        3450\n 5 Adelie  Torgersen           39.3          20.6               190        3650\n 6 Adelie  Torgersen           38.9          17.8               181        3625\n 7 Adelie  Torgersen           39.2          19.6               195        4675\n 8 Adelie  Torgersen           41.1          17.6               182        3200\n 9 Adelie  Torgersen           38.6          21.2               191        3800\n10 Adelie  Torgersen           34.6          21.1               198        4400\n# ℹ 323 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\ndrop_na() removes rows with any missing values. This is not (often) what we want to do. The naniar package contains functions for treatment of missing values."
  },
  {
    "objectID": "labs/lab-02.html#categorical-variables",
    "href": "labs/lab-02.html#categorical-variables",
    "title": "MAR 536: Lab 2",
    "section": "Categorical variables",
    "text": "Categorical variables\nFactors are vectors with discrete values assigned to each element.\nCan specify a categorical variable as a factor using factor().\n\n&gt;  substrate &lt;- c(\"cobble\",\"mud\",\"sand\")\n&gt;  is.factor(substrate)\n[1] FALSE\n&gt;  substrate.fac &lt;- factor(substrate)\n&gt;  substrate.fac\n[1] cobble mud    sand  \nLevels: cobble mud sand\n&gt;  is.factor(substrate.fac)\n[1] TRUE"
  },
  {
    "objectID": "labs/lab-02.html#numbers-to-factors",
    "href": "labs/lab-02.html#numbers-to-factors",
    "title": "MAR 536: Lab 2",
    "section": "Numbers to factors",
    "text": "Numbers to factors\nCategorical variables are often coded numerically.\n\n&gt;  substrate &lt;- c(1,1,2,2,3,2,1,3)\n&gt;  substrate.fac &lt;- factor(substrate,\n+                   labels=c(\"cobble\",\"mud\",\"sand\"))\n&gt;  substrate.fac\n[1] cobble cobble mud    mud    sand   mud    cobble sand  \nLevels: cobble mud sand\n\nTo find the levels of a factor:\n\n&gt; levels(substrate.fac)\n[1] \"cobble\" \"mud\"    \"sand\"  \n\ndroplevels(myfactor) will remove unused levels.\nThe forcats package is a great way of dealing with categorical variables. We’ll cover examples of its usage during the course."
  },
  {
    "objectID": "labs/lab-02.html#reading-in-data",
    "href": "labs/lab-02.html#reading-in-data",
    "title": "MAR 536: Lab 2",
    "section": "Reading in data",
    "text": "Reading in data\nSo far we have either typed in data values, or used built-in datasets.\nLots of functions to read data from files, including:\n\nscan()\n\n\nflexible, reads data into a vector.\nvery fast, good for large or messy data.\n\n\nread.table, read.csv\n\n\neasy to use, reads data into a data frame.\n\n\nread_excel, read_csv (in tidyverse)\n\n\nlibrary(readxl) has many functions for reading from MS Excel spreadsheets"
  },
  {
    "objectID": "labs/lab-02.html#using-read_excel",
    "href": "labs/lab-02.html#using-read_excel",
    "title": "MAR 536: Lab 2",
    "section": "Using read_excel()",
    "text": "Using read_excel()\nRead data from Finnish lake Laengelmavesi\nSave Laengelmavesi2.xlsx to your computer.\nEither to your project directory or create a directory called ‘data’.\n\n&gt; library(readxl)\n&gt; fish_data &lt;- read_excel(\n+              path = \"../data/Laengelmavesi2.xlsx\",\n+                    sheet = \"data\", na = \"NA\")\n&gt; # fish_data &lt;- read_csv(file=\"../data/Laengelmavesi2.csv\",\n&gt; #                   header=TRUE,sep=\",\")\n&gt; # R will look for the file in the working directory.\n&gt; # Provide the directory path to the file if it is elsewhere"
  },
  {
    "objectID": "labs/lab-02.html#lab-exercise-13-laengelmavesi-penguins",
    "href": "labs/lab-02.html#lab-exercise-13-laengelmavesi-penguins",
    "title": "MAR 536: Lab 2",
    "section": "Lab exercise 1/3 (Laengelmavesi + penguins)",
    "text": "Lab exercise 1/3 (Laengelmavesi + penguins)\nRead in the data in the ‘data’ sheet of Laengelmavesi2.xlsx and:\n\nDisplay the number of observations for each species of fish. (hint: the function count() will tell you how many rows)\n\nFind the overall mean lengths, weights, and heights of fish in the data.\n\nFind the range of the lengths of Perch.\n\nCalculate the mean length for each species.\n\nbonus With the Pike data, create a new factor for small and large based on the weights.\n\nUse the ggpairs() function in library(GGally) to create a pairs plot for the palmer penguins data. What are five things you learn about the data and the penguins from this view of the data?"
  },
  {
    "objectID": "labs/lab-02.html#base-graphics-plot",
    "href": "labs/lab-02.html#base-graphics-plot",
    "title": "MAR 536: Lab 2",
    "section": "Base graphics: plot()",
    "text": "Base graphics: plot()\nplot() is the generic function for plotting R objects.\n\nplot() is an overloaded function.\n\nwhat it returns depends on the type of objects that are given to it.\n\nthere are versions of plot that provide useful outputs for many R functions.\n\ne.g. plot.lm() is a version that plots typical diagnostics from a linear model object. (but you still just type plot(myobject))."
  },
  {
    "objectID": "labs/lab-02.html#plots-are-like-onionsthey-have-layers",
    "href": "labs/lab-02.html#plots-are-like-onionsthey-have-layers",
    "title": "MAR 536: Lab 2",
    "section": "Plots are like onions…they have layers",
    "text": "Plots are like onions…they have layers\n\n\nBoth base R and ggplot use a layers approach to plotting.\n\nPlot type\nPoints\nLines\nColors\nLabels\nStyles\netc."
  },
  {
    "objectID": "labs/lab-02.html#ggplot2-in-tidyverse",
    "href": "labs/lab-02.html#ggplot2-in-tidyverse",
    "title": "MAR 536: Lab 2",
    "section": "ggplot2 \\(\\in\\) tidyverse",
    "text": "ggplot2 \\(\\in\\) tidyverse\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot2 is tidyverse’s data visualization package\ngg in “ggplot2” stands for Grammar of Graphics\nInspired by the book Grammar of Graphics by Leland Wilkinson"
  },
  {
    "objectID": "labs/lab-02.html#grammar-of-graphics",
    "href": "labs/lab-02.html#grammar-of-graphics",
    "title": "MAR 536: Lab 2",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\nA grammar of graphics is a tool that enables us to concisely describe the components of a graphic"
  },
  {
    "objectID": "labs/lab-02.html#hello-ggplot2",
    "href": "labs/lab-02.html#hello-ggplot2",
    "title": "MAR 536: Lab 2",
    "section": "Hello ggplot2!",
    "text": "Hello ggplot2!\n\nggplot() is the main function in ggplot2\nPlots are constructed in layers\nStructure of the code for plots can be summarized as\n\n\nggplot(data = [dataset],\n       mapping = aes(x = [x-variable], y = [y-variable])) +\n   geom_xxx() +\n   other options\n\n\nThe ggplot2 package comes with the tidyverse\nFor help with ggplot2, see ggplot2.tidyverse.org"
  },
  {
    "objectID": "labs/lab-02.html#palmer-penguins",
    "href": "labs/lab-02.html#palmer-penguins",
    "title": "MAR 536: Lab 2",
    "section": "Palmer Penguins",
    "text": "Palmer Penguins\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm, y = bill_length_mm,\n                     colour = species)) +\n  geom_point() +\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\", y = \"Bill length (mm)\",\n       colour = \"Species\") +\n  scale_color_viridis_d()\n\nBy default R uses variable names as axis labels. Use labs() to add text & captions, etc."
  },
  {
    "objectID": "labs/lab-02.html#ggplot-layers",
    "href": "labs/lab-02.html#ggplot-layers",
    "title": "MAR 536: Lab 2",
    "section": "ggplot layers",
    "text": "ggplot layers\nTo begin\n– All ggplots begin with a call to ggplot()\nData\n– data frame containing variables for plot\nAesthetics\n– specify how data variables relate to graph properties – e.g. what goes on x & y axis, etc. – mapping argument passed to ggplot() via aes()\nGeometry\n– a call to a geometry (geom_) determines plot type – may require additional geometry-specific aesthetics\nOther options\n– summary statistics – adjust overall appearance (color, size, shape…) – add labels, captions, theme, etc. – faceting & coordinate system"
  },
  {
    "objectID": "labs/lab-02.html#axis-limits",
    "href": "labs/lab-02.html#axis-limits",
    "title": "MAR 536: Lab 2",
    "section": "Axis limits",
    "text": "Axis limits\nR chooses x and y limits just larger than the range of the data.\nTo change the default x and y values use xlim and ylim.\n\n&gt; ggplot(data = fish_data, mapping = aes(x= length, \n+                                        y = weight)) + \n+   geom_point() +\n+   xlim(0, 50) +\n+   ylim(0, 800) +\n+   labs(title = \"Laengelmavesi fish\",\n+          subtitle = \"MAR 536 Biological Statistics II, Lab 2\",\n+          x = \"Length (cm)\",\n+          y = \"Weight (g)\",\n+          caption = \"\\nplot created by \\n@gavin_fay\")"
  },
  {
    "objectID": "labs/lab-02.html#colors",
    "href": "labs/lab-02.html#colors",
    "title": "MAR 536: Lab 2",
    "section": "Colors",
    "text": "Colors\nColors of points, lines, text etc. can all be specified.\nIf you want to map color to a variable then this should be done in the aes().\nColors can be specified as numbers, text string, or hex codes col=1 or col=\"red\"\n\n&gt; ggplot(data = fish_data, mapping = aes(x= length,\n+                                        y = weight)) + \n+   geom_point(col = \"blue\") + # Change point color to blue\n+   xlim(0, 50) +\n+   ylim(0, 800) +\n+   labs(title = \"Laengelmavesi fish\",\n+          subtitle = \"MAR 536 Biological Statistics II, Lab 2\",\n+          x = \"Length (cm)\",\n+          y = \"Weight (g)\",\n+          caption = \"\\nplot created by \\n@gavin_fay\")"
  },
  {
    "objectID": "labs/lab-02.html#map-color-to-a-variable",
    "href": "labs/lab-02.html#map-color-to-a-variable",
    "title": "MAR 536: Lab 2",
    "section": "Map color to a variable",
    "text": "Map color to a variable\n\n&gt; ggplot(data = fish_data, \n+        mapping = aes(x= length,\n+                      y = weight, \n+                      col = species)) + # Color by species\n+   geom_point() +\n+   xlim(0, 50) +\n+   ylim(0, 800) +\n+   labs(title = \"Laengelmavesi fish\",\n+          subtitle = \"MAR 536 Biological Statistics II, Lab 2\",\n+          x = \"Length (cm)\",\n+          y = \"Weight (g)\",\n+          caption = \"\\nplot created by \\n@gavin_fay\")"
  },
  {
    "objectID": "labs/lab-02.html#points",
    "href": "labs/lab-02.html#points",
    "title": "MAR 536: Lab 2",
    "section": "Points",
    "text": "Points\nUse the shape and size aesthetics to adjust point type and size\n\n&gt; ggplot(data = fish_data, \n+        mapping = aes(x= length, \n+                      y = weight, \n+                      col = species, \n+                      size = height)) + # Set point size proportional to body height\n+   geom_point(shape = 8) + # Change point type\n+   xlim(0, 50) +\n+   ylim(0, 800) +\n+   labs(title = \"Laengelmavesi fish\",\n+          subtitle = \"MAR 536 Biological Statistics II, Lab 2\",\n+          x = \"Length (cm)\",\n+          y = \"Weight (g)\",\n+          caption = \"\\nplot created by \\n@gavin_fay\")"
  },
  {
    "objectID": "labs/lab-02.html#faceting-small-multiples",
    "href": "labs/lab-02.html#faceting-small-multiples",
    "title": "MAR 536: Lab 2",
    "section": "Faceting (small multiples)",
    "text": "Faceting (small multiples)\n\nSmaller plots that display different subsets of the data\nUseful for exploring conditional relationships and large data\n\nfacet_grid([rows],[cols])\nfacet_wrap(~[var])"
  },
  {
    "objectID": "labs/lab-02.html#lab-exercise-23",
    "href": "labs/lab-02.html#lab-exercise-23",
    "title": "MAR 536: Lab 2",
    "section": "Lab exercise 2/3",
    "text": "Lab exercise 2/3\n\n\nUse the gapminder data to replicate as close as possible this graph. (Try out different ‘themes’ with + theme_XXXX())\n\nbonus plot time series of life expectancy by continent and country. (You can use geom_line() to link points)"
  },
  {
    "objectID": "labs/lab-02.html#data-lending-club",
    "href": "labs/lab-02.html#data-lending-club",
    "title": "MAR 536: Lab 2",
    "section": "Data: Lending Club",
    "text": "Data: Lending Club\n\n\n\nThousands of loans made through the Lending Club, which is a platform that allows individuals to lend to other individuals\nNot all loans are created equal – ease of getting a loan depends on (apparent) ability to pay back the loan\nData includes loans made, these are not loan applications"
  },
  {
    "objectID": "labs/lab-02.html#selected-variables",
    "href": "labs/lab-02.html#selected-variables",
    "title": "MAR 536: Lab 2",
    "section": "Selected variables",
    "text": "Selected variables\n\nloans &lt;- loans_full_schema %&gt;%\n  select(loan_amount, interest_rate, term, grade,\n         state, annual_income, homeownership, debt_to_income)\nglimpse(loans)\n\nRows: 10,000\nColumns: 8\n$ loan_amount    &lt;int&gt; 28000, 5000, 2000, 21600, 23000, 5000, 24000, 20000, 20…\n$ interest_rate  &lt;dbl&gt; 14.07, 12.61, 17.09, 6.72, 14.07, 6.72, 13.59, 11.99, 1…\n$ term           &lt;dbl&gt; 60, 36, 36, 36, 36, 36, 60, 60, 36, 36, 60, 60, 36, 60,…\n$ grade          &lt;ord&gt; C, C, D, A, C, A, C, B, C, A, C, B, C, B, D, D, D, F, E…\n$ state          &lt;fct&gt; NJ, HI, WI, PA, CA, KY, MI, AZ, NV, IL, IL, FL, SC, CO,…\n$ annual_income  &lt;dbl&gt; 90000, 40000, 40000, 30000, 35000, 34000, 35000, 110000…\n$ homeownership  &lt;fct&gt; MORTGAGE, RENT, RENT, RENT, RENT, OWN, MORTGAGE, MORTGA…\n$ debt_to_income &lt;dbl&gt; 18.01, 5.04, 21.15, 10.16, 57.96, 6.46, 23.66, 16.19, 3…"
  },
  {
    "objectID": "labs/lab-02.html#variable-types",
    "href": "labs/lab-02.html#variable-types",
    "title": "MAR 536: Lab 2",
    "section": "Variable types",
    "text": "Variable types\n\n\n\nvariable\ntype\n\n\n\n\nloan_amount\nnumerical, continuous\n\n\ninterest_rate\nnumerical, continuous\n\n\nterm\nnumerical, discrete\n\n\ngrade\ncategorical, ordinal\n\n\nstate\ncategorical, not ordinal\n\n\nannual_income\nnumerical, continuous\n\n\nhomeownership\ncategorical, not ordinal\n\n\ndebt_to_income\nnumerical, continuous"
  },
  {
    "objectID": "labs/lab-02.html#histograms",
    "href": "labs/lab-02.html#histograms",
    "title": "MAR 536: Lab 2",
    "section": "Histograms",
    "text": "Histograms\ngeom_histogram()\n\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "labs/lab-02.html#histograms-and-binwidth",
    "href": "labs/lab-02.html#histograms-and-binwidth",
    "title": "MAR 536: Lab 2",
    "section": "Histograms and binwidth",
    "text": "Histograms and binwidth\nbinwidth = 2000\n\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram(binwidth = 2000)"
  },
  {
    "objectID": "labs/lab-02.html#customizing-histograms",
    "href": "labs/lab-02.html#customizing-histograms",
    "title": "MAR 536: Lab 2",
    "section": "Customizing histograms",
    "text": "Customizing histograms\nFill with a categorical variable\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(loans, aes(x = loan_amount,\n                  fill = homeownership)) +\n  geom_histogram(binwidth = 5000,\n                 alpha = 0.5) +\n  labs(\n    x = \"Loan amount ($)\",\n    y = \"Frequency\",\n    title = \"Amounts of Lending Club loans\"\n  )"
  },
  {
    "objectID": "labs/lab-02.html#box-plots",
    "href": "labs/lab-02.html#box-plots",
    "title": "MAR 536: Lab 2",
    "section": "Box plots",
    "text": "Box plots\nUse geom_boxplot().\n\nggplot(loans, aes(x = interest_rate)) +\n  geom_boxplot()"
  },
  {
    "objectID": "labs/lab-02.html#adding-a-categorical-variable",
    "href": "labs/lab-02.html#adding-a-categorical-variable",
    "title": "MAR 536: Lab 2",
    "section": "Adding a categorical variable",
    "text": "Adding a categorical variable\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(loans, aes(x = interest_rate,\n                  y = grade)) +\n  geom_boxplot() +\n  labs(\n    x = \"Interest rate (%)\",\n    y = \"Grade\",\n    title = \"Interest rates of Lending Club loans\",\n    subtitle = \"by grade of loan\"\n  )"
  },
  {
    "objectID": "labs/lab-02.html#bar-plot",
    "href": "labs/lab-02.html#bar-plot",
    "title": "MAR 536: Lab 2",
    "section": "Bar plot",
    "text": "Bar plot\n\n&gt; # Read data from csv file using tidyverse\n&gt; fish &lt;- read_csv(file=\"../data/Laengelmavesi.csv\")\n\n\n&gt; ggplot(fish, aes(x = fct_reorder(species,weight), \n+                  y = weight)) +\n+   geom_col(fill=\"steelblue\") +\n+   labs(x = \"species\")\n\nThe call to fct_reorder() will reorder the species according to a different vector, here the weight."
  },
  {
    "objectID": "labs/lab-02.html#segmented-bar-plot",
    "href": "labs/lab-02.html#segmented-bar-plot",
    "title": "MAR 536: Lab 2",
    "section": "Segmented bar plot",
    "text": "Segmented bar plot\n\nggplot(loans, aes(x = homeownership,\n                  fill = grade)) + \n  geom_bar()"
  },
  {
    "objectID": "labs/lab-02.html#segmented-bar-plot-1",
    "href": "labs/lab-02.html#segmented-bar-plot-1",
    "title": "MAR 536: Lab 2",
    "section": "Segmented bar plot",
    "text": "Segmented bar plot\n\nggplot(loans, aes(x = homeownership, fill = grade)) +\n  geom_bar(position = \"fill\")"
  },
  {
    "objectID": "labs/lab-02.html#customizing-bar-plots",
    "href": "labs/lab-02.html#customizing-bar-plots",
    "title": "MAR 536: Lab 2",
    "section": "Customizing bar plots",
    "text": "Customizing bar plots"
  },
  {
    "objectID": "labs/lab-02.html#lab-exercise-33-laengelmavesi-revisited",
    "href": "labs/lab-02.html#lab-exercise-33-laengelmavesi-revisited",
    "title": "MAR 536: Lab 2",
    "section": "Lab exercise 3/3 (Laengelmavesi revisited)",
    "text": "Lab exercise 3/3 (Laengelmavesi revisited)\nUse the data in Laengelmavesi2.xlsx to create the following graphs. Make sure to add axis labels and plot titles.\n\nCreate boxplots and histograms of the length distributions for each species.\n\nPlot all the weights vs the lengths. Include enough information that the data for each species can be identified.\n\nPlot the mean weight of each species as a function of the mean length, with the species names and mean heights also indicated on the plot.\n\nCreate one plot of the heights as a function of the lengths. Add a line separating fish with height greater than 20cm.\n\nbonus Add to your plot from step (2) the mean weight and length for each species.\n\n\n\n\n\ngavinfay.github.io/mar536-biolstats2-s23"
  },
  {
    "objectID": "labs/lab-04.html#lab-schedule",
    "href": "labs/lab-04.html#lab-schedule",
    "title": "MAR 536: Lab 4",
    "section": "Lab schedule",
    "text": "Lab schedule\n1/18: Introduction to R and R Studio, working with data\n1/25: Intro to Visualization\n2/01: Probability, linear modeling\n2/08: Data wrangling, model summaries\n2/15: Simulation, Resampling\n2/22: Iteration\n3/01: Creating functions, debugging\n3/15: Flex: more modeling (brms, glmmTMB)\n3/29: Spatial data or tidymodeling\nAcknowledgements: Mine Çetinkaya-Rundel, Allison Horst"
  },
  {
    "objectID": "labs/lab-04.html#today",
    "href": "labs/lab-04.html#today",
    "title": "MAR 536: Lab 4",
    "section": "Today",
    "text": "Today\nTopics\n\nPoisson GLM\nProgramming Practices\nData wrangling"
  },
  {
    "objectID": "labs/lab-04.html#setup",
    "href": "labs/lab-04.html#setup",
    "title": "MAR 536: Lab 4",
    "section": "setup",
    "text": "setup\n\nlibrary(tidyverse)\nlibrary(broom)\n\n\n#first read in the data (richness already created)\nRIKZ &lt;- readRDS(\"../data/RIKZ.rds\")"
  },
  {
    "objectID": "labs/lab-04.html#generalized-linear-modeling",
    "href": "labs/lab-04.html#generalized-linear-modeling",
    "title": "MAR 536: Lab 4",
    "section": "Generalized linear modeling",
    "text": "Generalized linear modeling\nAll GLMs have the following three characteristics:\n\nA probability distribution describing a generative model for the outcome variable.\n\n\n\nA linear model:\n\\[\\eta = \\beta_0 + \\beta_1 X_1 + \\cdots + \\beta_k X_k\\]\n\n\n\n\nA link function that relates the linear model to the parameter of the outcome distribution."
  },
  {
    "objectID": "labs/lab-04.html#generalized-linear-modeling-1",
    "href": "labs/lab-04.html#generalized-linear-modeling-1",
    "title": "MAR 536: Lab 4",
    "section": "Generalized linear modeling",
    "text": "Generalized linear modeling\nRecall from lecture: \\[\\eta = \\beta_1 x_1 + \\beta_2 x_2 + \\dots + \\beta_p x_p\\] \\[f_Y(y;\\mu,\\varphi) = \\exp\\left[\\frac{A}{\\varphi}{y\\lambda(\\mu)-\\gamma(\\lambda(\\mu))}+\\tau(y,\\varphi)\\right]\\] \\[\\mu = m(\\eta) \\text{,    } \\eta = m^{-1}(\\mu)=l(\\mu)\\]\nThe combination of a response distribution, a link function and other information needed to carry out the modeling exercise is called the family of the generalized linear model."
  },
  {
    "objectID": "labs/lab-04.html#the-glm-function",
    "href": "labs/lab-04.html#the-glm-function",
    "title": "MAR 536: Lab 4",
    "section": "The glm() function",
    "text": "The glm() function\nThe R function to fit a generalized linear model is glm() which uses the form:\nfitted.model &lt;- glm(formula, family=family.generator, data=data.frame)\nOnly new piece is the call to ‘family.generator’\nAlthough complex, its use is fairly simple.\nWhere there is a choice of link, link can be supplied with the family name as a parameter.\nSimple (inefficient) use: The following are equivalent.\n\n&gt; RIKZ_lm1 &lt;- lm(Richness ~ NAP, data = RIKZ)\n&gt; RIKZ_glm1 &lt;- glm(Richness ~ NAP, family = gaussian, \n+                  data = RIKZ)\n\nMost of the extraction functions that can be applied to lm() can also be used with glm()."
  },
  {
    "objectID": "labs/lab-04.html#the-glm-function-1",
    "href": "labs/lab-04.html#the-glm-function-1",
    "title": "MAR 536: Lab 4",
    "section": "The glm() function",
    "text": "The glm() function\n\n&gt; tidy(RIKZ_lm1)\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)     6.69     0.658     10.2  5.25e-13\n2 NAP            -2.87     0.631     -4.55 4.42e- 5\n&gt; tidy(RIKZ_glm1)\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)     6.69     0.658     10.2  5.25e-13\n2 NAP            -2.87     0.631     -4.55 4.42e- 5"
  },
  {
    "objectID": "labs/lab-04.html#poisson-regression",
    "href": "labs/lab-04.html#poisson-regression",
    "title": "MAR 536: Lab 4",
    "section": "Poisson regression",
    "text": "Poisson regression\n\\[P(X=x) = \\frac{e^{-\\mu} \\mu^x}{x!} \\text{,   } \\mu_i = e^{\\alpha+\\beta_1 x_{1,i} + \\dots + \\beta_j x_{j,i}}\\]"
  },
  {
    "objectID": "labs/lab-04.html#rikz-example",
    "href": "labs/lab-04.html#rikz-example",
    "title": "MAR 536: Lab 4",
    "section": "RIKZ example",
    "text": "RIKZ example\n\n&gt; #fit the poisson regression model\n&gt; RIKZ_poisson &lt;- glm(Richness ~ NAP, data = RIKZ, \n+                     family = poisson)\n\nNote that the default link for the poisson is log so we don’t have to specify here (see ?family)."
  },
  {
    "objectID": "labs/lab-04.html#summaryrikz_poisson",
    "href": "labs/lab-04.html#summaryrikz_poisson",
    "title": "MAR 536: Lab 4",
    "section": "summary(RIKZ_poisson)",
    "text": "summary(RIKZ_poisson)\n\n\nCall:\nglm(formula = Richness ~ NAP, family = poisson, data = RIKZ)\n\nCoefficients:\n            Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)  1.79100    0.06329  28.297  &lt; 2e-16 ***\nNAP         -0.55597    0.07163  -7.762 8.39e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 179.75  on 44  degrees of freedom\nResidual deviance: 113.18  on 43  degrees of freedom\nAIC: 259.18\n\nNumber of Fisher Scoring iterations: 5"
  },
  {
    "objectID": "labs/lab-04.html#broomaugment",
    "href": "labs/lab-04.html#broomaugment",
    "title": "MAR 536: Lab 4",
    "section": "broom::augment()",
    "text": "broom::augment()\nAs with lm(), the augment() function can be used to obtain the predictions from a fitted model object, and for a new data frame.\n\n&gt; newobject &lt;- augment(oldobject, newdata, \n+                      type.predict = c(\"link\",\"response\",\"terms\"),\n+                      se_fit = TRUE)\n\nNote: default for type.predict is on the scale of the linear predictors. Set to \"response\" to obtain predictions on the scale of the response variable.\n\naugment(RIKZ_poisson, se_fit = TRUE)\n\n# A tibble: 45 × 9\n   Richness    NAP .fitted .se.fit .resid   .hat .sigma .cooksd .std.resid\n      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;\n 1       11  0.045    1.77  0.0639  1.90  0.0239   1.61 0.0569       1.92 \n 2       10 -1.04     2.37  0.0896 -0.206 0.0856   1.64 0.00213     -0.215\n 3       13 -1.34     2.53  0.106   0.112 0.142    1.64 0.00122      0.121\n 4       11  0.616    1.45  0.0827  2.72  0.0291   1.59 0.165        2.76 \n 5       10 -0.684    2.17  0.0737  0.406 0.0476   1.64 0.00453      0.416\n 6        8  1.19     1.13  0.114   2.32  0.0401   1.60 0.170        2.37 \n 7        9  0.82     1.34  0.0929  2.26  0.0328   1.60 0.125        2.30 \n 8        8  0.635    1.44  0.0836  1.64  0.0294   1.62 0.0532       1.66 \n 9       19  0.061    1.76  0.0641  4.33  0.0238   1.50 0.376        4.38 \n10       17 -1.33     2.53  0.106   1.18  0.141    1.63 0.148        1.27 \n# ℹ 35 more rows"
  },
  {
    "objectID": "labs/lab-04.html#observed-and-fitted-values-for-poisson-rikz",
    "href": "labs/lab-04.html#observed-and-fitted-values-for-poisson-rikz",
    "title": "MAR 536: Lab 4",
    "section": "Observed and fitted values for Poisson RIKZ",
    "text": "Observed and fitted values for Poisson RIKZ\n\n#create new values for beach height\nnew_data &lt;- tibble(NAP = seq(-1.5,2.5,length.out=100))\n#predict values for response based on new salinity\nRIKZ_pois_pred &lt;- augment(RIKZ_poisson,\n                    newdata = new_data, \n                    type.predict = \"response\",\n                    se_fit = \"TRUE\")\nRIKZ_pois_pred\n# A tibble: 100 × 3\n     NAP .fitted .se.fit\n   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 -1.5     13.8    1.60\n 2 -1.46    13.5    1.53\n 3 -1.42    13.2    1.46\n 4 -1.38    12.9    1.40\n 5 -1.34    12.6    1.34\n 6 -1.30    12.3    1.28\n 7 -1.26    12.1    1.23\n 8 -1.22    11.8    1.17\n 9 -1.18    11.5    1.12\n10 -1.14    11.3    1.07\n# ℹ 90 more rows"
  },
  {
    "objectID": "labs/lab-04.html#fitting-the-glm-in-the-ggplot-call",
    "href": "labs/lab-04.html#fitting-the-glm-in-the-ggplot-call",
    "title": "MAR 536: Lab 4",
    "section": "fitting the GLM in the ggplot call",
    "text": "fitting the GLM in the ggplot call\n\n&gt; ggplot(RIKZ,aes(NAP,Richness)) +\n+   geom_point() +\n+   geom_smooth(method = \"glm\", \n+     method.args = list(family = poisson), se = TRUE)"
  },
  {
    "objectID": "labs/lab-04.html#lab-exercise-14-rikz-poisson-glms",
    "href": "labs/lab-04.html#lab-exercise-14-rikz-poisson-glms",
    "title": "MAR 536: Lab 4",
    "section": "Lab Exercise 1/4: RIKZ Poisson GLMs",
    "text": "Lab Exercise 1/4: RIKZ Poisson GLMs\n\nFit a poisson model to RIKZ species richness that includes NAP, and exposure and week as categorical variables (factor).\nExtract the model coefficients and their 95% confidence intervals.\n\nPlot the deviance residuals versus the linear predictor.\n\nCompare the results of this model with a model for RIKZ species richness that only included NAP as a covariate using deviance and AIC.\nBONUS Show how AIC changes when each linear predictor term is dropped from the model, and show the results of chi-square tests that compare these reduced models to the original model. (hint see the help for ?add1).\nBONUS BONUS Fit a model for species richness that also includes salinity, temperature, and grain size, and perform backwards selection using AIC to obtain a ‘best’ model. How do the results compare to the other models? What is the appropriate set of variables to use?"
  },
  {
    "objectID": "labs/lab-04.html#dplyrcase_when",
    "href": "labs/lab-04.html#dplyrcase_when",
    "title": "MAR 536: Lab 4",
    "section": "dplyr::case_when()",
    "text": "dplyr::case_when()\nThe case_when() function is like a really friendly if-else statement. When used within mutate(), it allows you to add a new column containing values dependent on your condition(s)."
  },
  {
    "objectID": "labs/lab-04.html#dplyrcase_when-1",
    "href": "labs/lab-04.html#dplyrcase_when-1",
    "title": "MAR 536: Lab 4",
    "section": "dplyr::case_when()",
    "text": "dplyr::case_when()\nTo penguins, add a new column size_bin that contains:\n\n“large” if body mass is greater than 4500 g\n“medium” if body mass is greater than 3000 g, and less than or equal to 4500 g\n“small” if body mass is less than or equal to 3000 g\n\n\npenguins |&gt;\n  mutate(size_bin = case_when(\n      body_mass_g &gt; 4500 ~ \"large\",\n      body_mass_g &gt; 3000 & body_mass_g &lt;= 4500 ~ \"medium\",\n      body_mass_g &lt;= 3000 ~ \"small\"\n    )\n  ) |&gt;\n  select(species, island, size_bin, everything())\n\n# A tibble: 344 × 9\n   species island    size_bin bill_length_mm bill_depth_mm flipper_length_mm\n   &lt;fct&gt;   &lt;fct&gt;     &lt;chr&gt;             &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;\n 1 Adelie  Torgersen medium             39.1          18.7               181\n 2 Adelie  Torgersen medium             39.5          17.4               186\n 3 Adelie  Torgersen medium             40.3          18                 195\n 4 Adelie  Torgersen &lt;NA&gt;               NA            NA                  NA\n 5 Adelie  Torgersen medium             36.7          19.3               193\n 6 Adelie  Torgersen medium             39.3          20.6               190\n 7 Adelie  Torgersen medium             38.9          17.8               181\n 8 Adelie  Torgersen large              39.2          19.6               195\n 9 Adelie  Torgersen medium             34.1          18.1               193\n10 Adelie  Torgersen medium             42            20.2               190\n# ℹ 334 more rows\n# ℹ 3 more variables: body_mass_g &lt;int&gt;, sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "labs/lab-04.html#dplyrcase_when-2",
    "href": "labs/lab-04.html#dplyrcase_when-2",
    "title": "MAR 536: Lab 4",
    "section": "dplyr::case_when()",
    "text": "dplyr::case_when()\nStarting with penguins:\n\nLimit the columns to species, year, and flipper_length_mm\nRename the year column to study_year\nOnly keep observations for Adelie penguins\nAdd a new column called flipper_rank that contains:\n\n1 if flipper_length_mm is &lt; 200 mm\n2 if flipper_length_mm is &gt;= 200 mm\n0 if flipper_length_mm is anything else (e.g. NA)\n\n\n\npenguins |&gt;\n  select(species, year, flipper_length_mm) |&gt;\n  rename(study_year = year) |&gt;\n  filter(species == \"Adelie\") |&gt;\n  mutate(flipper_rank = case_when(\n    flipper_length_mm &lt; 200 ~ 1,\n    flipper_length_mm &gt;= 200 ~ 2,\n    TRUE ~ 0 # 0 for anything else\n  ))\n\n# A tibble: 152 × 4\n   species study_year flipper_length_mm flipper_rank\n   &lt;fct&gt;        &lt;int&gt;             &lt;int&gt;        &lt;dbl&gt;\n 1 Adelie        2007               181            1\n 2 Adelie        2007               186            1\n 3 Adelie        2007               195            1\n 4 Adelie        2007                NA            0\n 5 Adelie        2007               193            1\n 6 Adelie        2007               190            1\n 7 Adelie        2007               181            1\n 8 Adelie        2007               195            1\n 9 Adelie        2007               193            1\n10 Adelie        2007               190            1\n# ℹ 142 more rows"
  },
  {
    "objectID": "labs/lab-04.html#exercise-24",
    "href": "labs/lab-04.html#exercise-24",
    "title": "MAR 536: Lab 4",
    "section": "Exercise 2/4",
    "text": "Exercise 2/4\nAdd a new column to penguins called study_year that contains:\n\n“Year 1” if the year is 2007\n“Year 2” if the year is 2008\n“Year 3” if the year is 2009\n\nStarting with penguins, only keep observations for chinstrap penguins, then only keep the flipper_length_mm and body_mass_g variables. Add a new column called fm_ratio that contains the ratio of flipper length to body mass for each penguin. Next, add another column named ratio_bin which contains the word “high” if fm_ratio is greater than or equal to 0.05, “low” if the ratio is less than 0.05, and “no record” if anything else (e.g. NA)."
  },
  {
    "objectID": "labs/lab-04.html#not-this",
    "href": "labs/lab-04.html#not-this",
    "title": "MAR 536: Lab 4",
    "section": "Not this…",
    "text": "Not this…"
  },
  {
    "objectID": "labs/lab-04.html#but-this",
    "href": "labs/lab-04.html#but-this",
    "title": "MAR 536: Lab 4",
    "section": "but this!",
    "text": "but this!"
  },
  {
    "objectID": "labs/lab-04.html#wider-vs.-longer",
    "href": "labs/lab-04.html#wider-vs.-longer",
    "title": "MAR 536: Lab 4",
    "section": "Wider vs. longer",
    "text": "Wider vs. longer\n\n\nwider more columns\n\n\n# A tibble: 2 × 4\n  customer_id item_1 item_2       item_3\n        &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt; \n1           1 bread  milk         banana\n2           2 milk   toilet paper &lt;NA&gt;  \n\n\n\nlonger more rows\n\n\n# A tibble: 6 × 3\n  customer_id item_no item        \n        &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;       \n1           1 item_1  bread       \n2           1 item_2  milk        \n3           1 item_3  banana      \n4           2 item_1  milk        \n5           2 item_2  toilet paper\n6           2 item_3  &lt;NA&gt;"
  },
  {
    "objectID": "labs/lab-04.html#pivot_longer",
    "href": "labs/lab-04.html#pivot_longer",
    "title": "MAR 536: Lab 4",
    "section": "pivot_longer()",
    "text": "pivot_longer()\n\n\n\ndata (as usual)\ncols: columns to pivot into longer format\nnames_to: name of the column where column names of pivoted variables go (character string)\nvalues_to: name of the column where data in pivoted variables go (character string)\n\n\n\npivot_longer(\n  data, \n  cols, \n  names_to = \"name\", #&lt;&lt;\n  values_to = \"value\"\n  )"
  },
  {
    "objectID": "labs/lab-04.html#customers-rightarrow-purchases",
    "href": "labs/lab-04.html#customers-rightarrow-purchases",
    "title": "MAR 536: Lab 4",
    "section": "Customers \\(\\rightarrow\\) purchases",
    "text": "Customers \\(\\rightarrow\\) purchases\n\npurchases &lt;- customers |&gt;\n  pivot_longer( #&lt;&lt;\n    cols = item_1:item_3,  # variables item_1 to item_3 #&lt;&lt;\n    names_to = \"item_no\",  # column names -&gt; new column called item_no #&lt;&lt;\n    values_to = \"item\"     # values in columns -&gt; new column called item #&lt;&lt;\n    ) #&lt;&lt;\n\npurchases\n\n# A tibble: 6 × 3\n  customer_id item_no item        \n        &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;       \n1           1 item_1  bread       \n2           1 item_2  milk        \n3           1 item_3  banana      \n4           2 item_1  milk        \n5           2 item_2  toilet paper\n6           2 item_3  &lt;NA&gt;"
  },
  {
    "objectID": "labs/lab-04.html#purchases-rightarrow-customers",
    "href": "labs/lab-04.html#purchases-rightarrow-customers",
    "title": "MAR 536: Lab 4",
    "section": "Purchases \\(\\rightarrow\\) customers",
    "text": "Purchases \\(\\rightarrow\\) customers\n\n\n\ndata (as usual)\nnames_from: which column in the long format contains the what should be column names in the wide format\nvalues_from: which column in the long format contains the what should be values in the new columns in the wide format\n\n\n\npurchases |&gt;\n  pivot_wider( #&lt;&lt;\n    names_from = item_no, #&lt;&lt;\n    values_from = item #&lt;&lt;\n  ) #&lt;&lt;\n\n# A tibble: 2 × 4\n  customer_id item_1 item_2       item_3\n        &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt; \n1           1 bread  milk         banana\n2           2 milk   toilet paper &lt;NA&gt;"
  },
  {
    "objectID": "labs/lab-04.html#steller-sea-lions",
    "href": "labs/lab-04.html#steller-sea-lions",
    "title": "MAR 536: Lab 4",
    "section": "Steller sea lions",
    "text": "Steller sea lions\nWe have data on Steller sea lion pup counts over time at a bunch of rookeries in Alaska.\n\nThe number of data points for each rookery is not the same.\nWe want to investigate the annual trend in counts for each rookery."
  },
  {
    "objectID": "labs/lab-04.html#lab-exercise-34---sea-lion-pups",
    "href": "labs/lab-04.html#lab-exercise-34---sea-lion-pups",
    "title": "MAR 536: Lab 4",
    "section": "Lab exercise 3/4 - Sea lion Pups",
    "text": "Lab exercise 3/4 - Sea lion Pups\n\nRead in the data from SSLpupcounts.csv.\nConvert the data from wide format to long format.\n\nPrint the top 10 rows of the new long format data.\n\nBONUS Convert back to wide format from long format.\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "labs/lab-04.html#we",
    "href": "labs/lab-04.html#we",
    "title": "MAR 536: Lab 4",
    "section": "We…",
    "text": "We…\nhave multiple data frames\nwant to bring them together"
  },
  {
    "objectID": "labs/lab-04.html#data-women-in-science",
    "href": "labs/lab-04.html#data-women-in-science",
    "title": "MAR 536: Lab 4",
    "section": "Data: Women in science",
    "text": "Data: Women in science\nInformation on 10 women in science who changed the world\n\n\n\n\n\nname\n\n\n\n\nAda Lovelace\n\n\nMarie Curie\n\n\nJanaki Ammal\n\n\nChien-Shiung Wu\n\n\nKatherine Johnson\n\n\nRosalind Franklin\n\n\nVera Rubin\n\n\nGladys West\n\n\nFlossie Wong-Staal\n\n\nJennifer Doudna\n\n\n\n\n\n.footnote[ Source: Discover Magazine]"
  },
  {
    "objectID": "labs/lab-04.html#inputs",
    "href": "labs/lab-04.html#inputs",
    "title": "MAR 536: Lab 4",
    "section": "Inputs",
    "text": "Inputs\n\nprofessionsdatesworks\n\n\n\nprofessions\n\n# A tibble: 10 × 2\n   name               profession                        \n   &lt;chr&gt;              &lt;chr&gt;                             \n 1 Ada Lovelace       Mathematician                     \n 2 Marie Curie        Physicist and Chemist             \n 3 Janaki Ammal       Botanist                          \n 4 Chien-Shiung Wu    Physicist                         \n 5 Katherine Johnson  Mathematician                     \n 6 Rosalind Franklin  Chemist                           \n 7 Vera Rubin         Astronomer                        \n 8 Gladys West        Mathematician                     \n 9 Flossie Wong-Staal Virologist and Molecular Biologist\n10 Jennifer Doudna    Biochemist                        \n\n\n\n\n\ndates\n\n# A tibble: 8 × 3\n  name               birth_year death_year\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Rosalind Franklin        1920       1958\n5 Vera Rubin               1928       2016\n6 Gladys West              1930         NA\n7 Flossie Wong-Staal       1947         NA\n8 Jennifer Doudna          1964         NA\n\n\n\n\n\nworks\n\n# A tibble: 9 × 2\n  name               known_for                                                  \n  &lt;chr&gt;              &lt;chr&gt;                                                      \n1 Ada Lovelace       first computer algorithm                                   \n2 Marie Curie        theory of radioactivity,  discovery of elements polonium a…\n3 Janaki Ammal       hybrid species, biodiversity protection                    \n4 Chien-Shiung Wu    confim and refine theory of radioactive beta decy, Wu expe…\n5 Katherine Johnson  calculations of orbital mechanics critical to sending the …\n6 Vera Rubin         existence of dark matter                                   \n7 Gladys West        mathematical modeling of the shape of the Earth which serv…\n8 Flossie Wong-Staal first scientist to clone HIV and create a map of its genes…\n9 Jennifer Doudna    one of the primary developers of CRISPR, a ground-breaking…"
  },
  {
    "objectID": "labs/lab-04.html#desired-output",
    "href": "labs/lab-04.html#desired-output",
    "title": "MAR 536: Lab 4",
    "section": "Desired output",
    "text": "Desired output\n\n\n# A tibble: 10 × 5\n   name               profession                 birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician                      NA         NA first co…\n 2 Marie Curie        Physicist and Chemist              NA         NA theory o…\n 3 Janaki Ammal       Botanist                         1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist                        1912       1997 confim a…\n 5 Katherine Johnson  Mathematician                    1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                          1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer                       1928       2016 existenc…\n 8 Gladys West        Mathematician                    1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and Molecular …       1947         NA first sc…\n10 Jennifer Doudna    Biochemist                       1964         NA one of t…"
  },
  {
    "objectID": "labs/lab-04.html#inputs-reminder",
    "href": "labs/lab-04.html#inputs-reminder",
    "title": "MAR 536: Lab 4",
    "section": "Inputs, reminder",
    "text": "Inputs, reminder\n\n\n\nnames(professions)\n\n[1] \"name\"       \"profession\"\n\nnames(dates)\n\n[1] \"name\"       \"birth_year\" \"death_year\"\n\nnames(works)\n\n[1] \"name\"      \"known_for\"\n\n\n\n\nnrow(professions)\n\n[1] 10\n\nnrow(dates)\n\n[1] 8\n\nnrow(works)\n\n[1] 9"
  },
  {
    "objectID": "labs/lab-04.html#joining-data-frames-1",
    "href": "labs/lab-04.html#joining-data-frames-1",
    "title": "MAR 536: Lab 4",
    "section": "Joining data frames",
    "text": "Joining data frames\n\nsomething_join(x, y)\n\n\nleft_join(): all rows from x\nright_join(): all rows from y\nfull_join(): all rows from both x and y\nsemi_join(): all rows from x where there are matching values in y, keeping just columns from x\ninner_join(): all rows from x where there are matching values in y, return all combination of multiple matches in the case of multiple matches\nanti_join(): return all rows from x where there are not matching values in y, never duplicate rows of x\n…"
  },
  {
    "objectID": "labs/lab-04.html#setup-1",
    "href": "labs/lab-04.html#setup-1",
    "title": "MAR 536: Lab 4",
    "section": "Setup",
    "text": "Setup\nFor the next few slides…\n\n\n\nx\n\n# A tibble: 3 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n\n\n\n\ny\n\n# A tibble: 3 × 2\n     id value_y\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 y1     \n2     2 y2     \n3     4 y4"
  },
  {
    "objectID": "labs/lab-04.html#left_join",
    "href": "labs/lab-04.html#left_join",
    "title": "MAR 536: Lab 4",
    "section": "left_join()",
    "text": "left_join()\n\n\n\n\n\n\n\n\n\n\n\n\n\nleft_join(x, y)\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;"
  },
  {
    "objectID": "labs/lab-04.html#left_join-1",
    "href": "labs/lab-04.html#left_join-1",
    "title": "MAR 536: Lab 4",
    "section": "left_join()",
    "text": "left_join()\n\nprofessions |&gt;\n  left_join(dates) #&lt;&lt;\n\n# A tibble: 10 × 4\n   name               profession                         birth_year death_year\n   &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n 1 Ada Lovelace       Mathematician                              NA         NA\n 2 Marie Curie        Physicist and Chemist                      NA         NA\n 3 Janaki Ammal       Botanist                                 1897       1984\n 4 Chien-Shiung Wu    Physicist                                1912       1997\n 5 Katherine Johnson  Mathematician                            1918       2020\n 6 Rosalind Franklin  Chemist                                  1920       1958\n 7 Vera Rubin         Astronomer                               1928       2016\n 8 Gladys West        Mathematician                            1930         NA\n 9 Flossie Wong-Staal Virologist and Molecular Biologist       1947         NA\n10 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "labs/lab-04.html#right_join",
    "href": "labs/lab-04.html#right_join",
    "title": "MAR 536: Lab 4",
    "section": "right_join()",
    "text": "right_join()\n\n\n\n\n\n\n\n\n\n\n\n\n\nright_join(x, y)\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "labs/lab-04.html#right_join-1",
    "href": "labs/lab-04.html#right_join-1",
    "title": "MAR 536: Lab 4",
    "section": "right_join()",
    "text": "right_join()\n\nprofessions |&gt;\n  right_join(dates) #&lt;&lt;\n\n# A tibble: 8 × 4\n  name               profession                         birth_year death_year\n  &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal       Botanist                                 1897       1984\n2 Chien-Shiung Wu    Physicist                                1912       1997\n3 Katherine Johnson  Mathematician                            1918       2020\n4 Rosalind Franklin  Chemist                                  1920       1958\n5 Vera Rubin         Astronomer                               1928       2016\n6 Gladys West        Mathematician                            1930         NA\n7 Flossie Wong-Staal Virologist and Molecular Biologist       1947         NA\n8 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "labs/lab-04.html#full_join",
    "href": "labs/lab-04.html#full_join",
    "title": "MAR 536: Lab 4",
    "section": "full_join()",
    "text": "full_join()\n\n\n\n\n\n\n\n\n\n\n\n\n\nfull_join(x, y)\n\n# A tibble: 4 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;   \n4     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "labs/lab-04.html#full_join-1",
    "href": "labs/lab-04.html#full_join-1",
    "title": "MAR 536: Lab 4",
    "section": "full_join()",
    "text": "full_join()\n\ndates |&gt;\n  full_join(works) #&lt;&lt;\n\n# A tibble: 10 × 4\n   name               birth_year death_year known_for                           \n   &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                               \n 1 Janaki Ammal             1897       1984 hybrid species, biodiversity protec…\n 2 Chien-Shiung Wu          1912       1997 confim and refine theory of radioac…\n 3 Katherine Johnson        1918       2020 calculations of orbital mechanics c…\n 4 Rosalind Franklin        1920       1958 &lt;NA&gt;                                \n 5 Vera Rubin               1928       2016 existence of dark matter            \n 6 Gladys West              1930         NA mathematical modeling of the shape …\n 7 Flossie Wong-Staal       1947         NA first scientist to clone HIV and cr…\n 8 Jennifer Doudna          1964         NA one of the primary developers of CR…\n 9 Ada Lovelace               NA         NA first computer algorithm            \n10 Marie Curie                NA         NA theory of radioactivity,  discovery…"
  },
  {
    "objectID": "labs/lab-04.html#inner_join",
    "href": "labs/lab-04.html#inner_join",
    "title": "MAR 536: Lab 4",
    "section": "inner_join()",
    "text": "inner_join()\n\n\n\n\n\n\n\n\n\n\n\n\n\ninner_join(x, y)\n\n# A tibble: 2 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2"
  },
  {
    "objectID": "labs/lab-04.html#inner_join-1",
    "href": "labs/lab-04.html#inner_join-1",
    "title": "MAR 536: Lab 4",
    "section": "inner_join()",
    "text": "inner_join()\n\ndates |&gt;\n  inner_join(works) #&lt;&lt;\n\n# A tibble: 7 × 4\n  name               birth_year death_year known_for                            \n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                                \n1 Janaki Ammal             1897       1984 hybrid species, biodiversity protect…\n2 Chien-Shiung Wu          1912       1997 confim and refine theory of radioact…\n3 Katherine Johnson        1918       2020 calculations of orbital mechanics cr…\n4 Vera Rubin               1928       2016 existence of dark matter             \n5 Gladys West              1930         NA mathematical modeling of the shape o…\n6 Flossie Wong-Staal       1947         NA first scientist to clone HIV and cre…\n7 Jennifer Doudna          1964         NA one of the primary developers of CRI…"
  },
  {
    "objectID": "labs/lab-04.html#putting-it-altogether",
    "href": "labs/lab-04.html#putting-it-altogether",
    "title": "MAR 536: Lab 4",
    "section": "Putting it altogether",
    "text": "Putting it altogether\n\nprofessions |&gt;\n  left_join(dates) |&gt;\n  left_join(works)\n\n# A tibble: 10 × 5\n   name               profession                 birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician                      NA         NA first co…\n 2 Marie Curie        Physicist and Chemist              NA         NA theory o…\n 3 Janaki Ammal       Botanist                         1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist                        1912       1997 confim a…\n 5 Katherine Johnson  Mathematician                    1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                          1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer                       1928       2016 existenc…\n 8 Gladys West        Mathematician                    1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and Molecular …       1947         NA first sc…\n10 Jennifer Doudna    Biochemist                       1964         NA one of t…\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n–&gt;\n\n\n\n–&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;"
  },
  {
    "objectID": "labs/lab-04.html#exercise-44-sea-lion-rookery-counts",
    "href": "labs/lab-04.html#exercise-44-sea-lion-rookery-counts",
    "title": "MAR 536: Lab 4",
    "section": "Exercise 4/4 Sea lion Rookery Counts",
    "text": "Exercise 4/4 Sea lion Rookery Counts\n\nSSL_Sites.csv contains the latitude and longitude of sea lion rookeries.\n\nUse a suitable join function to add the lat/lon information and geographic region to the counts dataset.\n\nSummarize the average annual pups that were counted between 2000-2015 in the Aleutian Islands (west of longitude 160W), the Gulf of Alaska (east of longitude 160W, west of 140W), and Southeast Alaska (South of latiutude 60 degrees N, but not in the Pacific Northwest).\n\nBONUS Look up how to make a map using ggplot() to map the rookery counts in 2015.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n–&gt;\n\n–&gt;\n\n–&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;\n\n–&gt;\n\n–&gt;  –&gt;  –&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n–&gt;\n\n–&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n–&gt;\n\n–&gt;\n\n–&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngavinfay.github.io/mar536-biolstats2-s23"
  }
]